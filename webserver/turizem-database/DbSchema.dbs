<?xml version="1.0" encoding="UTF-8" ?>
<project name="Manage..." id="Project_84f6c9" template="Default" database="PostgreSQL" >
	<schema name="information_schema" catalogname="turizm" schemaname="information_schema" >
		<procedure name="_pg_char_max_length" id="Procedure_4400f14" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_char_max_length SELECT
  CASE WHEN $2 = -1 /* default typmod */
       THEN null
       WHEN $1 IN (1042, 1043) /* char, varchar */
       THEN $2 - 4
       WHEN $1 IN (1560, 1562) /* bit, varbit */
       THEN $2
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_char_octet_length" id="Procedure_5648692" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_char_octet_length SELECT
  CASE WHEN $1 IN (25, 1042, 1043) /* text, char, varchar */
       THEN CASE WHEN $2 = -1 /* default typmod */
                 THEN CAST(2^30 AS integer)
                 ELSE information_schema._pg_char_max_length($1, $2) *
                      pg_catalog.pg_encoding_max_length((SELECT encoding FROM pg_catalog.pg_database WHERE datname = pg_catalog.current_database()))
            END
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_datetime_precision" id="Procedure_3e9e803" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_datetime_precision SELECT
  CASE WHEN $1 IN (1082) /* date */
           THEN 0
       WHEN $1 IN (1083, 1114, 1184, 1266) /* time, timestamp, same + tz */
           THEN CASE WHEN $2 < 0 THEN 6 ELSE $2 END
       WHEN $1 IN (1186) /* interval */
           THEN CASE WHEN $2 < 0 OR $2 & 65535 = 65535 THEN 6 ELSE $2 & 65535 END
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_expandarray" id="Procedure_389bbb6" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_expandarray select $1[s], s - pg_catalog.array_lower($1,1) + 1
        from pg_catalog.generate_series(pg_catalog.array_lower($1,1),
                                        pg_catalog.array_upper($1,1),
                                        1) as g(s);]]></string>
			<input_param name="" jt="1111" type="anyarray" />
			<input_param name="x" jt="1111" type="anyelement" />
			<input_param name="n" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_index_position" id="Procedure_1777d65" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_index_position 
SELECT (ss.a).n FROM
  (SELECT information_schema._pg_expandarray(indkey) AS a
   FROM pg_catalog.pg_index WHERE indexrelid = $1) ss
  WHERE (ss.a).x = $2;
;]]></string>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_interval_type" id="Procedure_37dfabc" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_interval_type SELECT
  CASE WHEN $1 IN (1186) /* interval */
           THEN upper(substring(format_type($1, $2) from 'interval[()0-9]* #"%#"' for '#'))
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="mod" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="_pg_keysequal" id="Procedure_a29a89" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_keysequal select $1 operator(pg_catalog.<@) $2 and $2 operator(pg_catalog.<@) $1;]]></string>
			<input_param name="$1" jt="2003" type="_int2" />
			<input_param name="$2" jt="2003" type="_int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="_pg_numeric_precision" id="Procedure_19b2202" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_precision SELECT
  CASE $1
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN $2 = -1
                   THEN null
                   ELSE (($2 - 4) >> 16) & 65535
                   END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_numeric_precision_radix" id="Procedure_4bdc33c" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_precision_radix SELECT
  CASE WHEN $1 IN (21, 23, 20, 700, 701) THEN 2
       WHEN $1 IN (1700) THEN 10
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_numeric_scale" id="Procedure_23e15e9" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_numeric_scale SELECT
  CASE WHEN $1 IN (21, 23, 20) THEN 0
       WHEN $1 IN (1700) THEN
            CASE WHEN $2 = -1
                 THEN null
                 ELSE ($2 - 4) & 65535
                 END
       ELSE null
  END;]]></string>
			<input_param name="typid" jt="-5" type="oid" />
			<input_param name="typmod" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="_pg_truetypid" id="Procedure_aca9ad" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_truetypid SELECT CASE WHEN $2.typtype = 'd' THEN $2.typbasetype ELSE $1.atttypid END;]]></string>
			<input_param name="$1" jt="2002" type="pg_attribute" />
			<input_param name="$2" jt="2002" type="pg_type" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="_pg_truetypmod" id="Procedure_170a24" isSystem="false" params_known="y" >
			<string><![CDATA[create function _pg_truetypmod SELECT CASE WHEN $2.typtype = 'd' THEN $2.typtypmod ELSE $1.atttypmod END;]]></string>
			<input_param name="$1" jt="2002" type="pg_attribute" />
			<input_param name="$2" jt="2002" type="pg_type" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
	</schema>
	<schema name="pg_catalog" catalogname="turizm" schemaname="pg_catalog" >
		<procedure name="RI_FKey_cascade_del" id="Procedure_56daacc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE CASCADE]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_cascade_upd" id="Procedure_37c15fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_cascade_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_cascade_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE CASCADE]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_check_ins" id="Procedure_530ba30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_ins"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_ins$function$
;]]></string>
			<comment><![CDATA[referential integrity FOREIGN KEY ... REFERENCES]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_check_upd" id="Procedure_3aeef67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_check_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_check_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity FOREIGN KEY ... REFERENCES]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_noaction_del" id="Procedure_394156e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE NO ACTION]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_noaction_upd" id="Procedure_2fbcf83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_noaction_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_noaction_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE NO ACTION]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_restrict_del" id="Procedure_54f5c51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE RESTRICT]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_restrict_upd" id="Procedure_4815cc7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_restrict_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_restrict_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE RESTRICT]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_setdefault_del" id="Procedure_3ba98f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE SET DEFAULT]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_setdefault_upd" id="Procedure_2542f82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setdefault_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setdefault_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE SET DEFAULT]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_setnull_del" id="Procedure_1bbebb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_del"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_del$function$
;]]></string>
			<comment><![CDATA[referential integrity ON DELETE SET NULL]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="RI_FKey_setnull_upd" id="Procedure_2b95946" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."RI_FKey_setnull_upd"()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$RI_FKey_setnull_upd$function$
;]]></string>
			<comment><![CDATA[referential integrity ON UPDATE SET NULL]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="abbrev" id="Procedure_159ba57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(cidr)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_abbrev$function$
;]]></string>
			<comment><![CDATA[abbreviated display of cidr value]]></comment>
			<input_param name="$1" jt="1111" type="cidr" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="abbrev" id="Procedure_2476800" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abbrev(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_abbrev$function$
;]]></string>
			<comment><![CDATA[abbreviated display of inet value]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="abs" id="Procedure_482897b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="abs" id="Procedure_42d7289" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="abs" id="Procedure_1ca616d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="abs" id="Procedure_34dec8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="abs" id="Procedure_497b78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="abs" id="Procedure_442913a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[absolute value]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="abstime" id="Procedure_56e420a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstime(timestamp without time zone)
 RETURNS abstime
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_abstime$function$
;]]></string>
			<comment><![CDATA[convert timestamp to abstime]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="abstime" id="Procedure_aa940b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstime(timestamp with time zone)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_abstime$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to abstime]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="abstimeeq" id="Procedure_a47e61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimeeq(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimeeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimege" id="Procedure_1c4f194" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimege(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimege$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimegt" id="Procedure_3a1f337" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimegt(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimegt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimein" id="Procedure_51c8194" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimein(cstring)
 RETURNS abstime
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$abstimein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="abstimele" id="Procedure_d43509" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimele(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimele$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimelt" id="Procedure_5c50354" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimelt(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimelt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimene" id="Procedure_472e4a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimene(abstime, abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$abstimene$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="abstimeout" id="Procedure_35b60f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimeout(abstime)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$abstimeout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="abstimerecv" id="Procedure_5297df8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimerecv(internal)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$abstimerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="abstimesend" id="Procedure_1ad3a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.abstimesend(abstime)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$abstimesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="aclcontains" id="Procedure_57a92e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclcontains(aclitem[], aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclcontains$function$
;]]></string>
			<comment><![CDATA[contains]]></comment>
			<input_param name="$1" jt="2003" type="_aclitem" />
			<input_param name="$2" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="acldefault" id="Procedure_1a3ce8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acldefault("char", oid)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$acldefault_sql$function$
;]]></string>
			<comment><![CDATA[TODO]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="2003" type="_aclitem" />
		</procedure>
		<procedure name="aclexplode" id="Procedure_11fa1c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclexplode(acl aclitem[], OUT grantor oid, OUT grantee oid, OUT privilege_type text, OUT is_grantable boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 10
AS $function$aclexplode$function$
;]]></string>
			<comment><![CDATA[convert ACL item array to table, for use by information schema]]></comment>
			<input_param name="acl" jt="2003" type="_aclitem" />
			<input_param name="grantor" jt="-5" type="oid" />
			<input_param name="grantee" jt="-5" type="oid" />
			<input_param name="privilege_type" jt="12" type="text" />
			<input_param name="is_grantable" jt="-7" type="bool" />
		</procedure>
		<procedure name="aclinsert" id="Procedure_1b15b65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclinsert(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclinsert$function$
;]]></string>
			<comment><![CDATA[add/update ACL item]]></comment>
			<input_param name="$1" jt="2003" type="_aclitem" />
			<input_param name="$2" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="2003" type="_aclitem" />
		</procedure>
		<procedure name="aclitemeq" id="Procedure_6c2345" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemeq(aclitem, aclitem)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclitem_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="aclitem" />
			<input_param name="$2" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="aclitemin" id="Procedure_588ac8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemin(cstring)
 RETURNS aclitem
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="aclitem" />
		</procedure>
		<procedure name="aclitemout" id="Procedure_1133349" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclitemout(aclitem)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$aclitemout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="aclremove" id="Procedure_28281e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.aclremove(aclitem[], aclitem)
 RETURNS aclitem[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$aclremove$function$
;]]></string>
			<comment><![CDATA[remove ACL item]]></comment>
			<input_param name="$1" jt="2003" type="_aclitem" />
			<input_param name="$2" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="2003" type="_aclitem" />
		</procedure>
		<procedure name="acos" id="Procedure_3d4e210" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacos$function$
;]]></string>
			<comment><![CDATA[arccosine]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="acosd" id="Procedure_5a86e6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.acosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dacosd$function$
;]]></string>
			<comment><![CDATA[arccosine, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="age" id="Procedure_2422f98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp without time zone)
 RETURNS interval
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.age(cast(current_date as timestamp without time zone), $1)$function$
;]]></string>
			<comment><![CDATA[date difference from today preserving months and years]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="age" id="Procedure_2dcdd82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp without time zone, timestamp without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_age$function$
;]]></string>
			<comment><![CDATA[date difference preserving months and years]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="age" id="Procedure_3127fc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp with time zone)
 RETURNS interval
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.age(cast(current_date as timestamp with time zone), $1)$function$
;]]></string>
			<comment><![CDATA[date difference from today preserving months and years]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="age" id="Procedure_1f6d027" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(timestamp with time zone, timestamp with time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_age$function$
;]]></string>
			<comment><![CDATA[date difference preserving months and years]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="age" id="Procedure_ff3ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$xid_age$function$
;]]></string>
			<comment><![CDATA[age of a transaction ID, in transactions before current transaction]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="amvalidate" id="Procedure_49a5efd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.amvalidate(oid)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$amvalidate$function$
;]]></string>
			<comment><![CDATA[validate an operator class]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="any_in" id="Procedure_51e538d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_in(cstring)
 RETURNS "any"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="any" />
		</procedure>
		<procedure name="any_out" id="Procedure_187d644" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.any_out("any")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$any_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anyarray_in" id="Procedure_59d8587" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_in(cstring)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyarray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="anyarray_out" id="Procedure_32f487e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anyarray_recv" id="Procedure_3a72853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_recv(internal)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="anyarray_send" id="Procedure_3c85a41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyarray_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyarray_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="anyelement_in" id="Procedure_30df467" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_in(cstring)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="anyelement_out" id="Procedure_56276e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyelement_out(anyelement)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyelement_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anyenum_in" id="Procedure_25d81ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_in(cstring)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anyenum_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="anyenum_out" id="Procedure_7784de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyenum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyenum_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anynonarray_in" id="Procedure_573b3ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_in(cstring)
 RETURNS anynonarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="anynonarray" />
		</procedure>
		<procedure name="anynonarray_out" id="Procedure_421ec8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anynonarray_out(anynonarray)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$anynonarray_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anynonarray" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anyrange_in" id="Procedure_6d845" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="anyrange_out" id="Procedure_47e0fd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anyrange_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$anyrange_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="anytextcat" id="Procedure_184e817" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.anytextcat(anynonarray, text)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1::pg_catalog.text || $2$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="anynonarray" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="area" id="Procedure_4654df2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_area$function$
;]]></string>
			<comment><![CDATA[area of a closed path]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="area" id="Procedure_1b829f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_area$function$
;]]></string>
			<comment><![CDATA[box area]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="area" id="Procedure_30a0dd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.area(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_area$function$
;]]></string>
			<comment><![CDATA[area of circle]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="areajoinsel" id="Procedure_1a879d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areajoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areajoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for area-comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="areasel" id="Procedure_2ca0c80" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.areasel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$areasel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for area-comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="array_agg_array_finalfn" id="Procedure_504dcdc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_finalfn(internal, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_agg_array_transfn" id="Procedure_a4b58f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_array_transfn(internal, anyarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_array_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="array_agg_finalfn" id="Procedure_39258de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_finalfn(internal, anynonarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anynonarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_agg_transfn" id="Procedure_1c7431c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_agg_transfn(internal, anynonarray)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anynonarray" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="array_append" id="Procedure_52c727" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_append(anyarray, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_append$function$
;]]></string>
			<comment><![CDATA[append element onto end of array]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_cat" id="Procedure_4f5b004" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_cat(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_cat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_dims" id="Procedure_11ef7a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_dims(anyarray)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_dims$function$
;]]></string>
			<comment><![CDATA[array dimensions]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="array_eq" id="Procedure_26341fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_eq(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_fill" id="Procedure_4a9f87a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[], integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill_with_lower_bounds$function$
;]]></string>
			<comment><![CDATA[array constructor with value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="2003" type="_int4" />
			<input_param name="$3" jt="2003" type="_int4" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_fill" id="Procedure_20cd9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_fill(anyelement, integer[])
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_fill$function$
;]]></string>
			<comment><![CDATA[array constructor with value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="2003" type="_int4" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_ge" id="Procedure_11224e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ge(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_gt" id="Procedure_2752b1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_gt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_in" id="Procedure_1252c1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_in(cstring, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_larger" id="Procedure_44615d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_larger(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_le" id="Procedure_2f6adf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_le(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_length" id="Procedure_34e69c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_length(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_length$function$
;]]></string>
			<comment><![CDATA[array length]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="array_lower" id="Procedure_16742f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lower(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lower$function$
;]]></string>
			<comment><![CDATA[array lower dimension]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="array_lt" id="Procedure_a0215d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_lt(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_ndims" id="Procedure_b60694" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ndims(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ndims$function$
;]]></string>
			<comment><![CDATA[number of array dimensions]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="array_ne" id="Procedure_ed5d3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_ne(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_out" id="Procedure_47eab5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_out(anyarray)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="array_position" id="Procedure_4eccc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anyarray, anyelement, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position_start$function$
;]]></string>
			<comment><![CDATA[returns an offset of value in array with start index]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="array_position" id="Procedure_223b487" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_position(anyarray, anyelement)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_position$function$
;]]></string>
			<comment><![CDATA[returns an offset of value in array]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="array_positions" id="Procedure_24d9d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_positions(anyarray, anyelement)
 RETURNS integer[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_positions$function$
;]]></string>
			<comment><![CDATA[returns an array of offsets of some value in array]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="2003" type="_int4" />
		</procedure>
		<procedure name="array_prepend" id="Procedure_30a39a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_prepend(anyelement, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_prepend$function$
;]]></string>
			<comment><![CDATA[prepend element onto front of array]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_recv" id="Procedure_50fd290" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_recv(internal, oid, integer)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_remove" id="Procedure_598a8cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_remove(anyarray, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_remove$function$
;]]></string>
			<comment><![CDATA[remove any occurrences of an element from an array]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_replace" id="Procedure_34556ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_replace(anyarray, anyelement, anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$array_replace$function$
;]]></string>
			<comment><![CDATA[replace any occurrences of an element in an array]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<input_param name="$3" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_send" id="Procedure_4cfb035" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_send(anyarray)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="array_smaller" id="Procedure_9d8f32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_smaller(anyarray, anyarray)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="array_to_json" id="Procedure_477e145" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray, boolean)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json_pretty$function$
;]]></string>
			<comment><![CDATA[map array to json with optional pretty printing]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="array_to_json" id="Procedure_343c2f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_json(anyarray)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_json$function$
;]]></string>
			<comment><![CDATA[map array to json]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="array_to_string" id="Procedure_24b8644" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_to_text$function$
;]]></string>
			<comment><![CDATA[concatenate array elements, using delimiter, into text]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="array_to_string" id="Procedure_49bd630" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_string(anyarray, text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$array_to_text_null$function$
;]]></string>
			<comment><![CDATA[concatenate array elements, using delimiter and null string, into text]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="array_to_tsvector" id="Procedure_4ce74cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_to_tsvector(text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_to_tsvector$function$
;]]></string>
			<comment><![CDATA[build tsvector from array of lexemes]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="array_typanalyze" id="Procedure_42cf0c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$array_typanalyze$function$
;]]></string>
			<comment><![CDATA[array typanalyze]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="array_upper" id="Procedure_16c208f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.array_upper(anyarray, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_upper$function$
;]]></string>
			<comment><![CDATA[array upper dimension]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="arraycontained" id="Procedure_3fd1a0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontained(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="arraycontains" id="Procedure_4e6073a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontains(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arraycontains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="arraycontjoinsel" id="Procedure_2a4c31f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for array-containment operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="arraycontsel" id="Procedure_36c5a19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arraycontsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$arraycontsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for array-containment operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="arrayoverlap" id="Procedure_53ad1df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.arrayoverlap(anyarray, anyarray)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$arrayoverlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ascii" id="Procedure_1dad503" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ascii$function$
;]]></string>
			<comment><![CDATA[convert first char to int4]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="ascii_to_mic" id="Procedure_49071e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/ascii_and_mic', $function$ascii_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SQL_ASCII to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="ascii_to_utf8" id="Procedure_40488d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ascii_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_ascii', $function$ascii_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SQL_ASCII to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="asin" id="Procedure_c4b7f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasin$function$
;]]></string>
			<comment><![CDATA[arcsine]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="asind" id="Procedure_1173ebe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.asind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dasind$function$
;]]></string>
			<comment><![CDATA[arcsine, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="atan" id="Procedure_5d7fa3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan$function$
;]]></string>
			<comment><![CDATA[arctangent]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="atan2" id="Procedure_28c2270" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2$function$
;]]></string>
			<comment><![CDATA[arctangent, two arguments]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="atan2d" id="Procedure_4006eb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atan2d(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datan2d$function$
;]]></string>
			<comment><![CDATA[arctangent, two arguments, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="atand" id="Procedure_378ede3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.atand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datand$function$
;]]></string>
			<comment><![CDATA[arctangent, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="bernoulli" id="Procedure_4b0b800" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bernoulli(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_bernoulli_handler$function$
;]]></string>
			<comment><![CDATA[BERNOULLI tablesample method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tsm_handler" />
		</procedure>
		<procedure name="big5_to_euc_tw" id="Procedure_44fc68e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to EUC_TW]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="big5_to_mic" id="Procedure_34544be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$big5_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="big5_to_utf8" id="Procedure_59a8b1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.big5_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$big5_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for BIG5 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_create_empty_extension" id="Procedure_45db04f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_create_empty_extension(text, text, boolean, text, oid[], text[], text[])
 RETURNS void
 LANGUAGE internal
AS $function$binary_upgrade_create_empty_extension$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="-7" type="bool" />
			<input_param name="$4" jt="12" type="text" />
			<input_param name="$5" jt="2003" type="_oid" />
			<input_param name="$6" jt="2003" type="_text" />
			<input_param name="$7" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_array_pg_type_oid" id="Procedure_1ca55e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_array_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_array_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_heap_pg_class_oid" id="Procedure_3c1618c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_heap_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_heap_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_index_pg_class_oid" id="Procedure_1f66902" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_index_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_index_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_pg_authid_oid" id="Procedure_1b8fd3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_authid_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_authid_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_pg_enum_oid" id="Procedure_496cd06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_enum_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_enum_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_pg_type_oid" id="Procedure_4e494ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_toast_pg_class_oid" id="Procedure_505ec14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_pg_class_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_toast_pg_class_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_next_toast_pg_type_oid" id="Procedure_45759ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_next_toast_pg_type_oid(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_next_toast_pg_type_oid$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="binary_upgrade_set_record_init_privs" id="Procedure_4c73c6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.binary_upgrade_set_record_init_privs(boolean)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$binary_upgrade_set_record_init_privs$function$
;]]></string>
			<comment><![CDATA[for use by pg_upgrade]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bit" id="Procedure_1388c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(bigint, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint8$function$
;]]></string>
			<comment><![CDATA[convert int8 to bitstring]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bit" id="Procedure_fbbf11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(bit, integer, boolean)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit$function$
;]]></string>
			<comment><![CDATA[adjust bit() to typmod length]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bit" id="Procedure_525263f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."bit"(integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitfromint4$function$
;]]></string>
			<comment><![CDATA[convert int4 to bitstring]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bit_in" id="Procedure_13cab10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_in(cstring, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bit_length" id="Procedure_4aff44d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bit)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.length($1)$function$
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bit_length" id="Procedure_534f2f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(text)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.octet_length($1) * 8$function$
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bit_length" id="Procedure_330f1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_length(bytea)
 RETURNS integer
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.octet_length($1) * 8$function$
;]]></string>
			<comment><![CDATA[length in bits]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bit_out" id="Procedure_b6f735" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_out(bit)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="bit_recv" id="Procedure_3563402" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_recv(internal, oid, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bit_send" id="Procedure_5cbfa30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bit_send(bit)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="bitand" id="Procedure_436798e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitand(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bitcat" id="Procedure_1469d39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcat(bit varying, bit varying)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitcat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="1111" type="varbit" />
		</procedure>
		<procedure name="bitcmp" id="Procedure_5390f6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitcmp(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="biteq" id="Procedure_4d76940" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.biteq(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitge" id="Procedure_2d7fab4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitge(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitgt" id="Procedure_43b245d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitgt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitle" id="Procedure_5bb08ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitle(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitlt" id="Procedure_706fa4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitlt(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitne" id="Procedure_4d2ce28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitne(bit, bit)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bitnot" id="Procedure_3318046" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitnot(bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitnot$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bitor" id="Procedure_2557948" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bit_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bitshiftleft" id="Procedure_2de774f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftleft(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftleft$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bitshiftright" id="Procedure_3f6531b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitshiftright(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitshiftright$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bittypmodin" id="Procedure_17bbad7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bittypmodout" id="Procedure_4cb0bff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="bitxor" id="Procedure_107c3f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bitxor(bit, bit)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitxor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="bool" id="Procedure_36fec5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool(integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_bool$function$
;]]></string>
			<comment><![CDATA[convert int4 to boolean]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bool_accum" id="Procedure_14fdad0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="bool_accum_inv" id="Procedure_4858412" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_accum_inv(internal, boolean)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bool_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="bool_alltrue" id="Procedure_4027cf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_alltrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_alltrue$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bool_anytrue" id="Procedure_584d83a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bool_anytrue(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_anytrue$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="booland_statefunc" id="Procedure_ee6e4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booland_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$booland_statefunc$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="booleq" id="Procedure_70e627" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.booleq(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$booleq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolge" id="Procedure_592cfb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolge(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolgt" id="Procedure_564509b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolgt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolin" id="Procedure_b7eab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolin(cstring)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolle" id="Procedure_3fbf7a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolle(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boollt" id="Procedure_3144914" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boollt(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boollt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolne" id="Procedure_1c6cf98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolne(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$boolne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolor_statefunc" id="Procedure_e7cfbd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolor_statefunc(boolean, boolean)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolor_statefunc$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolout" id="Procedure_46d5fe3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolout(boolean)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="boolrecv" id="Procedure_3f368cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolrecv(internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="boolsend" id="Procedure_2814315" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.boolsend(boolean)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boolsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="bound_box" id="Procedure_e9df8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bound_box(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$boxes_bound_box$function$
;]]></string>
			<comment><![CDATA[bounding box of two boxes]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box" id="Procedure_39bd4bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_box$function$
;]]></string>
			<comment><![CDATA[convert point to empty box]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box" id="Procedure_388789e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(circle)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_box$function$
;]]></string>
			<comment><![CDATA[convert circle to box]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box" id="Procedure_44bc675" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(polygon)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_box$function$
;]]></string>
			<comment><![CDATA[convert polygon to bounding box]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box" id="Procedure_36e1e24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box(point, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$points_box$function$
;]]></string>
			<comment><![CDATA[convert points to box]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_above" id="Procedure_d76a43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_above_eq" id="Procedure_48178aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_above_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_above_eq$function$
;]]></string>
			<comment><![CDATA[implementation of >^ operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_add" id="Procedure_1b9b363" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_add(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_below" id="Procedure_57ab775" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_below_eq" id="Procedure_3cfe505" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_below_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_below_eq$function$
;]]></string>
			<comment><![CDATA[implementation of <^ operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_center" id="Procedure_1668b3c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="box_contain" id="Procedure_51088b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_contain_pt" id="Procedure_13e89de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contain_pt(box, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_contained" id="Procedure_fb0468" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_contained(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_distance" id="Procedure_39bb611" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_distance(box, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="box_div" id="Procedure_1a01478" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_div(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_eq" id="Procedure_3a840da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_eq(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_ge" id="Procedure_4993aa6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_ge(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_gt" id="Procedure_539a972" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_gt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_in" id="Procedure_43a4f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_in(cstring)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_intersect" id="Procedure_5cf5ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_intersect(box, box)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_le" id="Procedure_32ad681" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_le(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_left" id="Procedure_2282d50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_left(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_lt" id="Procedure_1bc3508" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_lt(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_mul" id="Procedure_fb8308" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_mul(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_out" id="Procedure_49425aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_out(box)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="box_overabove" id="Procedure_1f0a922" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overabove(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_overbelow" id="Procedure_4114e84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overbelow(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_overlap" id="Procedure_41c8bd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overlap(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_overleft" id="Procedure_36700ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overleft(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_overright" id="Procedure_2657c2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_overright(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_recv" id="Procedure_27146ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_recv(internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="box_right" id="Procedure_48cec79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_right(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_same" id="Procedure_5039c51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_same(box, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="box_send" id="Procedure_1c8c928" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_send(box)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="box_sub" id="Procedure_18c3a15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.box_sub(box, point)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="bpchar" id="Procedure_2dd1305" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar("char")
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$char_bpchar$function$
;]]></string>
			<comment><![CDATA[convert char to char(n)]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpchar" id="Procedure_38c3418" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(character, integer, boolean)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar$function$
;]]></string>
			<comment><![CDATA[adjust char() to typmod length]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpchar" id="Procedure_4d95c8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar(name)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_bpchar$function$
;]]></string>
			<comment><![CDATA[convert name to char(n)]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpchar_larger" id="Procedure_1971984" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_larger(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpchar_pattern_ge" id="Procedure_2737ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_ge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_pattern_ge$function$
;]]></string>
			<comment><![CDATA[implementation of ~>=~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchar_pattern_gt" id="Procedure_5c55f20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_gt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_pattern_gt$function$
;]]></string>
			<comment><![CDATA[implementation of ~>~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchar_pattern_le" id="Procedure_15fd854" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_le(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_pattern_le$function$
;]]></string>
			<comment><![CDATA[implementation of ~<=~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchar_pattern_lt" id="Procedure_4156f0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_pattern_lt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_pattern_lt$function$
;]]></string>
			<comment><![CDATA[implementation of ~<~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchar_smaller" id="Procedure_5c954f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_smaller(character, character)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpchar_sortsupport" id="Procedure_25a0352" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchar_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bpcharcmp" id="Procedure_4864d79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharcmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bpchareq" id="Procedure_474a64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchareq(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpchareq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharge" id="Procedure_59258e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharge(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchargt" id="Procedure_4540979" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchargt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchargt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpchariclike" id="Procedure_4868a91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchariclike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharicnlike" id="Procedure_5502a22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharicregexeq" id="Procedure_2602f35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharicregexne" id="Procedure_3cbe58e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharicregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharin" id="Procedure_ee85b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharin(cstring, oid, integer)
 RETURNS character
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpcharle" id="Procedure_20f4741" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharle(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharlike" id="Procedure_5f729e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharlt" id="Procedure_31621cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharlt(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharne" id="Procedure_3a29df5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharne(character, character)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bpcharne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharnlike" id="Procedure_9e75f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharnlike(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharout" id="Procedure_4b0213d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharout(character)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="bpcharrecv" id="Procedure_14161ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharrecv(internal, oid, integer)
 RETURNS character
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1" type="bpchar" />
		</procedure>
		<procedure name="bpcharregexeq" id="Procedure_4342ae6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexeq(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharregexne" id="Procedure_32130ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharregexne(character, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bpcharsend" id="Procedure_4ecc726" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpcharsend(character)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$bpcharsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="bpchartypmodin" id="Procedure_217069e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bpchartypmodout" id="Procedure_3faf910" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bpchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchartypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="brin_desummarize_range" id="Procedure_2ee9d06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_desummarize_range(regclass, bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$brin_desummarize_range$function$
;]]></string>
			<comment><![CDATA[brin: desummarize page range]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="brin_inclusion_add_value" id="Procedure_4b0744d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_inclusion_consistent" id="Procedure_4b92e9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_inclusion_opcinfo" id="Procedure_5278229" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="brin_inclusion_union" id="Procedure_26890a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_inclusion_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_inclusion_union$function$
;]]></string>
			<comment><![CDATA[BRIN inclusion support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_minmax_add_value" id="Procedure_4abbfb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_add_value(internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_add_value$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_minmax_consistent" id="Procedure_373155b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_consistent(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_consistent$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_minmax_opcinfo" id="Procedure_1eae7b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_opcinfo(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_opcinfo$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="brin_minmax_union" id="Procedure_10ad33c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_minmax_union(internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$brin_minmax_union$function$
;]]></string>
			<comment><![CDATA[BRIN minmax support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="brin_summarize_new_values" id="Procedure_26e6a33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_new_values(regclass)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_new_values$function$
;]]></string>
			<comment><![CDATA[brin: standalone scan new table pages]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="brin_summarize_range" id="Procedure_11029c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brin_summarize_range(regclass, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$brin_summarize_range$function$
;]]></string>
			<comment><![CDATA[brin: standalone scan new table pages]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="brinhandler" id="Procedure_5cc5813" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.brinhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$brinhandler$function$
;]]></string>
			<comment><![CDATA[brin index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="broadcast" id="Procedure_24a7d17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.broadcast(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_broadcast$function$
;]]></string>
			<comment><![CDATA[broadcast address of network]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="btabstimecmp" id="Procedure_150cc22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btabstimecmp(abstime, abstime)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btabstimecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btarraycmp" id="Procedure_198f7ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btarraycmp(anyarray, anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btarraycmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btboolcmp" id="Procedure_2519026" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btboolcmp(boolean, boolean)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btboolcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btbpchar_pattern_cmp" id="Procedure_4cbeda5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_cmp(character, character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btbpchar_pattern_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<input_param name="$2" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btbpchar_pattern_sortsupport" id="Procedure_4026b66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btbpchar_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btbpchar_pattern_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btcharcmp" id="Procedure_f52a34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btcharcmp("char", "char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btcharcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btfloat48cmp" id="Procedure_1b2b730" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat48cmp(real, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat48cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btfloat4cmp" id="Procedure_223aabb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4cmp(real, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat4cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btfloat4sortsupport" id="Procedure_331dfc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat4sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btfloat84cmp" id="Procedure_90286e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat84cmp(double precision, real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat84cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btfloat8cmp" id="Procedure_121786e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8cmp(double precision, double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat8cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btfloat8sortsupport" id="Procedure_1300237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btfloat8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btfloat8sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bthandler" id="Procedure_ff01aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$bthandler$function$
;]]></string>
			<comment><![CDATA[btree index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="btint24cmp" id="Procedure_5e2b9b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint24cmp(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint24cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint28cmp" id="Procedure_1b7f13b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint28cmp(smallint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint28cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint2cmp" id="Procedure_1c7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2cmp(smallint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint2cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint2sortsupport" id="Procedure_10b1182" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint2sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint2sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btint42cmp" id="Procedure_594234f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint42cmp(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint42cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint48cmp" id="Procedure_37e8329" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint48cmp(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint48cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint4cmp" id="Procedure_473fcc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4cmp(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint4cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint4sortsupport" id="Procedure_22764be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint4sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint4sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btint82cmp" id="Procedure_41ba2ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint82cmp(bigint, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint82cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint84cmp" id="Procedure_1644564" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint84cmp(bigint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint84cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint8cmp" id="Procedure_1a3ffc7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8cmp(bigint, bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint8cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btint8sortsupport" id="Procedure_b5e088" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btint8sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btint8sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btnamecmp" id="Procedure_361e31e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamecmp(name, name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btnamecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btnamesortsupport" id="Procedure_534b14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btnamesortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btnamesortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btoidcmp" id="Procedure_3546f5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidcmp(oid, oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btoidcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btoidsortsupport" id="Procedure_4f2986a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btoidsortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="btoidvectorcmp" id="Procedure_4d0ca92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btoidvectorcmp(oidvector, oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btoidvectorcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btrecordcmp" id="Procedure_716262" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordcmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btrecordimagecmp" id="Procedure_1b770e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrecordimagecmp(record, record)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrecordimagecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater based on byte images]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btreltimecmp" id="Procedure_116d946" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btreltimecmp(reltime, reltime)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btreltimecmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="btrim" id="Procedure_37b5ddf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrim1$function$
;]]></string>
			<comment><![CDATA[trim spaces from both ends of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="btrim" id="Procedure_9eb957" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$btrim$function$
;]]></string>
			<comment><![CDATA[trim selected characters from both ends of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="btrim" id="Procedure_b7a267" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.btrim(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteatrim$function$
;]]></string>
			<comment><![CDATA[trim both ends of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="bttext_pattern_cmp" id="Procedure_47b55de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_cmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttext_pattern_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bttext_pattern_sortsupport" id="Procedure_1deaef6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttext_pattern_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttext_pattern_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bttextcmp" id="Procedure_18aa1cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextcmp(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttextcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bttextsortsupport" id="Procedure_4b84dbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttextsortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttextsortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bttidcmp" id="Procedure_3b4cebc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttidcmp(tid, tid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttidcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bttintervalcmp" id="Procedure_14838a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bttintervalcmp(tinterval, tinterval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bttintervalcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="bytea_sortsupport" id="Procedure_3a48712" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="bytea_string_agg_finalfn" id="Procedure_107a060" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_finalfn(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="bytea_string_agg_transfn" id="Procedure_1e33c11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytea_string_agg_transfn(internal, bytea, bytea)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$bytea_string_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-2" type="bytea" />
			<input_param name="$3" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="byteacat" id="Procedure_46f694f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacat(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteacat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="byteacmp" id="Procedure_5bde4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteacmp(bytea, bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteacmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="byteaeq" id="Procedure_5cfbca4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaeq(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteaeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteage" id="Procedure_4d31dc8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteage(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteage$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteagt" id="Procedure_588c112" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteagt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteagt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteain" id="Procedure_54695d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteain(cstring)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteain$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="byteale" id="Procedure_4bc3eac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteale(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteale$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bytealike" id="Procedure_57a9fd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytealike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="bytealt" id="Procedure_512f83c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytealt(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bytealt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteane" id="Procedure_258c25b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteane(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$byteane$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteanlike" id="Procedure_2297db0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteanlike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteanlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="byteaout" id="Procedure_5d83680" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteaout(bytea)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="bytearecv" id="Procedure_71ed8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.bytearecv(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytearecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="byteasend" id="Procedure_3292cf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.byteasend(bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteasend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="cardinality" id="Procedure_55a1b22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cardinality(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$array_cardinality$function$
;]]></string>
			<comment><![CDATA[array cardinality]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="cash_cmp" id="Procedure_19a2995" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_cmp(money, money)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="cash_div_cash" id="Procedure_1be1baf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_cash(money, money)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_cash$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cash_div_flt4" id="Procedure_1cff4c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt4$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_div_flt8" id="Procedure_594a4ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_flt8$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_div_int2" id="Procedure_1cab283" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int2$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_div_int4" id="Procedure_5c95af8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int4$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_div_int8" id="Procedure_284e80e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_div_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_div_int8$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_eq" id="Procedure_c17d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_eq(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_ge" id="Procedure_4ba3d33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ge(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_gt" id="Procedure_e1630d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_gt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_in" id="Procedure_368180b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_in(cstring)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_le" id="Procedure_4db4f35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_le(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_lt" id="Procedure_48ac7be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_lt(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_mi" id="Procedure_6685e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mi(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_mul_flt4" id="Procedure_22f16c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt4(money, real)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt4$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_mul_flt8" id="Procedure_23048f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_flt8(money, double precision)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_flt8$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_mul_int2" id="Procedure_5c18f1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int2(money, smallint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int2$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_mul_int4" id="Procedure_1ce1272" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int4(money, integer)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int4$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_mul_int8" id="Procedure_bd6e95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_mul_int8(money, bigint)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_mul_int8$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_ne" id="Procedure_96d99a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_ne(money, money)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cash_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cash_out" id="Procedure_3f28547" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_out(money)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cash_pl" id="Procedure_e7ad99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_pl(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_recv" id="Procedure_1799115" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_recv(internal)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cash_send" id="Procedure_21406f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_send(money)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="cash_words" id="Procedure_2985fca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cash_words(money)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cash_words$function$
;]]></string>
			<comment><![CDATA[output money amount as words]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="cashlarger" id="Procedure_5d5231b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashlarger(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cashsmaller" id="Procedure_12ee9fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cashsmaller(money, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cashsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="cbrt" id="Procedure_44e53b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<comment><![CDATA[cube root]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="ceil" id="Procedure_5e6eec1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="ceil" id="Procedure_3fa072c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceil(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="ceiling" id="Procedure_49a01bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="ceiling" id="Procedure_477cf66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ceiling(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ceil$function$
;]]></string>
			<comment><![CDATA[nearest integer >= value]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="center" id="Procedure_5a1ec81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="center" id="Procedure_855c72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.center(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="char" id="Procedure_2742ffd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(text)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_char$function$
;]]></string>
			<comment><![CDATA[convert text to char]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="char" id="Procedure_2a0a5ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."char"(integer)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tochar$function$
;]]></string>
			<comment><![CDATA[convert int4 to char]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="char_length" id="Procedure_383d43f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="char_length" id="Procedure_441b942" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.char_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="character_length" id="Procedure_11b96fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="character_length" id="Procedure_5aa704b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.character_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="chareq" id="Procedure_277f21c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chareq("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chareq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="charge" id="Procedure_137aac9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charge("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="chargt" id="Procedure_251c420" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chargt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$chargt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="charin" id="Procedure_9560a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charin(cstring)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="charle" id="Procedure_18a1b7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charle("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="charlt" id="Procedure_2eac6ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charlt("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="charne" id="Procedure_22a96c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charne("char", "char")
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$charne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="charout" id="Procedure_81cd22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charout("char")
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="charrecv" id="Procedure_4eb77d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charrecv(internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="charsend" id="Procedure_10e605e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.charsend("char")
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$charsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="chr" id="Procedure_2b81ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.chr(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$chr$function$
;]]></string>
			<comment><![CDATA[convert int4 to char]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="cideq" id="Procedure_246dae2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cideq(cid, cid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$cideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="cid" />
			<input_param name="$2" jt="1111" type="cid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="cidin" id="Procedure_3aba456" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidin(cstring)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="cid" />
		</procedure>
		<procedure name="cidout" id="Procedure_fbbfa6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidout(cid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cid" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cidr" id="Procedure_16f9815" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_to_cidr$function$
;]]></string>
			<comment><![CDATA[convert inet to cidr]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="cidr_in" id="Procedure_5af27c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_in(cstring)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="cidr_out" id="Procedure_4a04a71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_out(cidr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cidr" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cidr_recv" id="Procedure_40c4efe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_recv(internal)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="cidr_send" id="Procedure_22600df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidr_send(cidr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cidr" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="cidrecv" id="Procedure_55b59d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidrecv(internal)
 RETURNS cid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="cid" />
		</procedure>
		<procedure name="cidsend" id="Procedure_26fce15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cidsend(cid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="circle" id="Procedure_156ad03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(box)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_circle$function$
;]]></string>
			<comment><![CDATA[convert box to circle]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle" id="Procedure_13cc90e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(polygon)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_circle$function$
;]]></string>
			<comment><![CDATA[convert polygon to circle]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle" id="Procedure_5b7a8e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle(point, double precision)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cr_circle$function$
;]]></string>
			<comment><![CDATA[convert point and radius to circle]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_above" id="Procedure_503ca50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_above(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_add_pt" id="Procedure_14fe385" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_add_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_add_pt$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_below" id="Procedure_10f5134" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_below(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_center" id="Procedure_40aa1d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_center(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="circle_contain" id="Procedure_22ccd55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_contain_pt" id="Procedure_12e2d71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contain_pt(circle, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_contained" id="Procedure_33500d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_contained(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_distance" id="Procedure_242e2d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_distance(circle, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="circle_div_pt" id="Procedure_b1e0d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_div_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_div_pt$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_eq" id="Procedure_278222c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_eq(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_ge" id="Procedure_2e6ea5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ge(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_gt" id="Procedure_512a079" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_gt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_in" id="Procedure_5d0e5d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_in(cstring)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_le" id="Procedure_265d5e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_le(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_left" id="Procedure_3d94bb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_left(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_lt" id="Procedure_3ef40cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_lt(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_mul_pt" id="Procedure_36a7a8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_mul_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_mul_pt$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_ne" id="Procedure_32eea32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_ne(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$circle_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_out" id="Procedure_198a934" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_out(circle)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="circle_overabove" id="Procedure_1c79296" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overabove(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_overbelow" id="Procedure_494e38d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overbelow(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_overlap" id="Procedure_480d53c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overlap(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_overleft" id="Procedure_393d0e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overleft(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_overright" id="Procedure_b180a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_overright(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_recv" id="Procedure_1785d98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_recv(internal)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="circle_right" id="Procedure_2f1fff0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_right(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_same" id="Procedure_311d7b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_same(circle, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="circle_send" id="Procedure_88cb44" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_send(circle)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="circle_sub_pt" id="Procedure_1291295" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.circle_sub_pt(circle, point)
 RETURNS circle
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_sub_pt$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="circle" />
		</procedure>
		<procedure name="clock_timestamp" id="Procedure_16ada66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.clock_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$clock_timestamp$function$
;]]></string>
			<comment><![CDATA[current clock time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="close_lb" id="Procedure_466d985" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_lb(line, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_lb$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_ls" id="Procedure_5b869e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ls(line, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ls$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_lseg" id="Procedure_2510727" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_lseg(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_lseg$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_pb" id="Procedure_4c4e6fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pb(point, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pb$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_pl" id="Procedure_4763fd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_pl(point, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_pl$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_ps" id="Procedure_4d10e99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_ps(point, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_ps$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_sb" id="Procedure_24f793e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_sb(lseg, box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_sb$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="close_sl" id="Procedure_82cbb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.close_sl(lseg, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$close_sl$function$
;]]></string>
			<comment><![CDATA[implementation of ## operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="col_description" id="Procedure_418a6fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.col_description(oid, integer)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and classoid = 'pg_catalog.pg_class'::pg_catalog.regclass and objsubid = $2$function$
;]]></string>
			<comment><![CDATA[get description for table column]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="concat" id="Procedure_2ad4b05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat(VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat$function$
;]]></string>
			<comment><![CDATA[concatenate values]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="concat_ws" id="Procedure_5b6e0bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.concat_ws(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_concat_ws$function$
;]]></string>
			<comment><![CDATA[concatenate values with separators]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="contjoinsel" id="Procedure_17999cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for containment comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="contsel" id="Procedure_29d5dc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.contsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$contsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for containment comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="convert" id="Procedure_ae227f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert(bytea, name, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert$function$
;]]></string>
			<comment><![CDATA[convert string with specified encoding names]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="12" type="name" />
			<input_param name="$3" jt="12" type="name" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="convert_from" id="Procedure_1c5dda3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_from(bytea, name)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_from$function$
;]]></string>
			<comment><![CDATA[convert string with specified source encoding name]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="convert_to" id="Procedure_2e9efcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.convert_to(text, name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_convert_to$function$
;]]></string>
			<comment><![CDATA[convert string with specified destination encoding name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="cos" id="Procedure_4a3d548" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cos(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcos$function$
;]]></string>
			<comment><![CDATA[cosine]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cosd" id="Procedure_859e3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cosd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcosd$function$
;]]></string>
			<comment><![CDATA[cosine, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cot" id="Procedure_26aacde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cot(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcot$function$
;]]></string>
			<comment><![CDATA[cotangent]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cotd" id="Procedure_336c0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cotd(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcotd$function$
;]]></string>
			<comment><![CDATA[cotangent, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cstring_in" id="Procedure_41d850c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_in(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cstring_out" id="Procedure_251a1e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_out(cstring)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cstring_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cstring_recv" id="Procedure_1060995" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_recv(internal)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="cstring_send" id="Procedure_32f0020" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cstring_send(cstring)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cstring_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="cume_dist" id="Procedure_514dcde" isSystem="false" params_known="y" >
			<string><![CDATA[create function cume_dist window_cume_dist;]]></string>
			<comment><![CDATA[cumulative distribution of hypothetical row]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cume_dist" id="Procedure_35935e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cume_dist()
 RETURNS double precision
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE
AS $function$window_cume_dist$function$
;]]></string>
			<comment><![CDATA[fractional row number within partition]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="cume_dist_final" id="Procedure_50ede00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cume_dist_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_cume_dist_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="current_database" id="Procedure_3a32ddf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_database()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_database$function$
;]]></string>
			<comment><![CDATA[name of the current database]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="current_query" id="Procedure_4b2fe08" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_query()
 RETURNS text
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$current_query$function$
;]]></string>
			<comment><![CDATA[get the currently executing query]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="current_schema" id="Procedure_17dc1ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_schema"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_schema$function$
;]]></string>
			<comment><![CDATA[current schema name]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="current_schemas" id="Procedure_58e6a13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_schemas(boolean)
 RETURNS name[]
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_schemas$function$
;]]></string>
			<comment><![CDATA[current schema search list]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="2003" type="_name" />
		</procedure>
		<procedure name="current_setting" id="Procedure_2bf5c6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name_missing_ok$function$
;]]></string>
			<comment><![CDATA[SHOW X as a function, optionally no error for missing variable]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="current_setting" id="Procedure_4c96715" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.current_setting(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_config_by_name$function$
;]]></string>
			<comment><![CDATA[SHOW X as a function]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="current_user" id="Procedure_47b6fe2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."current_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<comment><![CDATA[current user name]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="currtid" id="Procedure_2dc10bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currtid(oid, tid)
 RETURNS tid
 LANGUAGE internal
 STRICT
AS $function$currtid_byreloid$function$
;]]></string>
			<comment><![CDATA[latest tid of a tuple]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="currtid2" id="Procedure_13f61e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currtid2(text, tid)
 RETURNS tid
 LANGUAGE internal
 STRICT
AS $function$currtid_byrelname$function$
;]]></string>
			<comment><![CDATA[latest tid of a tuple]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="currval" id="Procedure_495c440" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.currval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$currval_oid$function$
;]]></string>
			<comment><![CDATA[sequence current value]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="cursor_to_xml" id="Procedure_2d9f840" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xml(cursor refcursor, count integer, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xml$function$
;]]></string>
			<comment><![CDATA[map rows from cursor to XML]]></comment>
			<input_param name="cursor" jt="2012" type="refcursor" />
			<input_param name="count" jt="4" type="int4" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="cursor_to_xmlschema" id="Procedure_aa6ced" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.cursor_to_xmlschema(cursor refcursor, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$cursor_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map cursor structure to XML Schema]]></comment>
			<input_param name="cursor" jt="2012" type="refcursor" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="database_to_xml" id="Procedure_547127" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml$function$
;]]></string>
			<comment><![CDATA[map database contents to XML]]></comment>
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="database_to_xml_and_xmlschema" id="Procedure_1c4c2a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xml_and_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map database contents and structure to XML and XML Schema]]></comment>
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="database_to_xmlschema" id="Procedure_1f4acff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.database_to_xmlschema(nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$database_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map database structure to XML Schema]]></comment>
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="date" id="Procedure_4c3414" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp without time zone)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_date$function$
;]]></string>
			<comment><![CDATA[convert timestamp to date]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date" id="Procedure_5df84b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(abstime)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$abstime_date$function$
;]]></string>
			<comment><![CDATA[convert abstime to date]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date" id="Procedure_bf4514" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date(timestamp with time zone)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_date$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to date]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_cmp" id="Procedure_591c4c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="date_cmp_timestamp" id="Procedure_e5a05c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamp(date, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="date_cmp_timestamptz" id="Procedure_14966da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_cmp_timestamptz(date, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_cmp_timestamptz$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="date_eq" id="Procedure_3a82e68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_eq_timestamp" id="Procedure_2f6da6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_eq_timestamptz" id="Procedure_3ffc04d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_eq_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_eq_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_ge" id="Procedure_3c609d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_ge_timestamp" id="Procedure_30aa728" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_ge_timestamptz" id="Procedure_2de8da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ge_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ge_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_gt" id="Procedure_124a169" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_gt_timestamp" id="Procedure_88b7b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_gt_timestamptz" id="Procedure_1e13734" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_gt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_gt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_in" id="Procedure_2405d50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_in(cstring)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_larger" id="Procedure_36085d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_larger(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_le" id="Procedure_52ea986" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_le_timestamp" id="Procedure_1ef61c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_le_timestamptz" id="Procedure_14fd129" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_le_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_le_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_lt" id="Procedure_176125" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_lt_timestamp" id="Procedure_32e2578" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_lt_timestamptz" id="Procedure_3a26684" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_lt_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_lt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_mi" id="Procedure_eb2557" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi(date, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="date_mi_interval" id="Procedure_3f2c7a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mi_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="date_mii" id="Procedure_c8f7ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_mii(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_mii$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_ne" id="Procedure_a07d05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne(date, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$date_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_ne_timestamp" id="Procedure_52924ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamp(date, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_ne_timestamptz" id="Procedure_3acdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_ne_timestamptz(date, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_ne_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="date_out" id="Procedure_6f7efa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_out(date)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="date_part" id="Procedure_3e49eb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_ff410f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, time without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_part$function$
;]]></string>
			<comment><![CDATA[extract field from time]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_9a92c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, date)
 RETURNS double precision
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.date_part($1, cast($2 as timestamp without time zone))$function$
;]]></string>
			<comment><![CDATA[extract field from date]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_4f18fe3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, reltime)
 RETURNS double precision
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.date_part($1, cast($2 as pg_catalog.interval))$function$
;]]></string>
			<comment><![CDATA[extract field from reltime]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_4acfbcb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, abstime)
 RETURNS double precision
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.date_part($1, cast($2 as timestamp with time zone))$function$
;]]></string>
			<comment><![CDATA[extract field from abstime]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_359488a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, time with time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_part$function$
;]]></string>
			<comment><![CDATA[extract field from time with time zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_213d0ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, interval)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_part$function$
;]]></string>
			<comment><![CDATA[extract field from interval]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_part" id="Procedure_5c5bd0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_part(text, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_part$function$
;]]></string>
			<comment><![CDATA[extract field from timestamp with time zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="date_pl_interval" id="Procedure_42ffd2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pl_interval(date, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="date_pli" id="Procedure_17ea942" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_pli(date, integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_pli$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_recv" id="Procedure_3e35f70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_recv(internal)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_send" id="Procedure_3e146cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_send(date)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="date_smaller" id="Procedure_1a30d14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_smaller(date, date)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="date_sortsupport" id="Procedure_373ae0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="date_trunc" id="Procedure_5f4e07a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp to specified units]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="date_trunc" id="Procedure_2c80d59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_trunc$function$
;]]></string>
			<comment><![CDATA[truncate interval to specified units]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="date_trunc" id="Procedure_338463e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.date_trunc(text, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_trunc$function$
;]]></string>
			<comment><![CDATA[truncate timestamp with time zone to specified units]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="daterange" id="Procedure_156aa73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date, text)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[daterange constructor]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="daterange" id="Procedure_30dd5f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange(date, date)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[daterange constructor]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
		</procedure>
		<procedure name="daterange_canonical" id="Procedure_593fc3e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_canonical(daterange)
 RETURNS daterange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_canonical$function$
;]]></string>
			<comment><![CDATA[convert a date range to canonical form]]></comment>
			<input_param name="$1" jt="1111" type="daterange" />
		</procedure>
		<procedure name="daterange_subdiff" id="Procedure_58e0941" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.daterange_subdiff(date, date)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$daterange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two date values]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="datetime_pl" id="Procedure_158dec7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetime_pl(date, time without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetime_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="datetimetz_pl" id="Procedure_29b2a4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.datetimetz_pl(date, time with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetimetz_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="dcbrt" id="Procedure_4d32a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dcbrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dcbrt$function$
;]]></string>
			<comment><![CDATA[implementation of ||/ operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="decode" id="Procedure_318143e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.decode(text, text)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_decode$function$
;]]></string>
			<comment><![CDATA[convert ascii-encoded text string into bytea value]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="degrees" id="Procedure_f163fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.degrees(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$degrees$function$
;]]></string>
			<comment><![CDATA[radians to degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dense_rank" id="Procedure_5193b74" isSystem="false" params_known="y" >
			<string><![CDATA[create function dense_rank window_dense_rank;]]></string>
			<comment><![CDATA[rank of hypothetical row without gaps]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="dense_rank" id="Procedure_205cbe0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dense_rank()
 RETURNS bigint
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE
AS $function$window_dense_rank$function$
;]]></string>
			<comment><![CDATA[integer rank without gaps]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="dense_rank_final" id="Procedure_3b5abdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dense_rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_dense_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="dexp" id="Procedure_24dab2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dexp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="diagonal" id="Procedure_26586a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diagonal(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<comment><![CDATA[box diagonal]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="lseg" />
		</procedure>
		<procedure name="diameter" id="Procedure_8c470b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.diameter(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_diameter$function$
;]]></string>
			<comment><![CDATA[diameter of circle]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dispell_init" id="Procedure_55b883c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dispell_lexize" id="Procedure_3189abc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dispell_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dispell_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dist_cpoint" id="Procedure_21a6e8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoint(circle, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoint$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_cpoly" id="Procedure_33aa31b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_cpoly(circle, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_cpoly$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_lb" id="Procedure_1b763e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_lb(line, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_lb$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_pb" id="Procedure_5dcc074" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pb(point, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pb$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_pc" id="Procedure_5187277" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pc(point, circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pc$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_pl" id="Procedure_3c7ef29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_pl(point, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_pl$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_polyp" id="Procedure_489ad16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_polyp(polygon, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_polyp$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_ppath" id="Procedure_504e8dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppath(point, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppath$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_ppoly" id="Procedure_18d7e97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ppoly(point, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ppoly$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_ps" id="Procedure_393e79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_ps(point, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_ps$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_sb" id="Procedure_40e1326" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sb(lseg, box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sb$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dist_sl" id="Procedure_36ec5b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dist_sl(lseg, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dist_sl$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="div" id="Procedure_45f00fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<comment><![CDATA[trunc(x/y)]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="dlog1" id="Procedure_3bd389a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog1(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dlog10" id="Procedure_748322" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dlog10(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="domain_in" id="Procedure_36c8f62" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_in(cstring, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="any" />
		</procedure>
		<procedure name="domain_recv" id="Procedure_19a8714" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.domain_recv(internal, oid, integer)
 RETURNS "any"
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$domain_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="any" />
		</procedure>
		<procedure name="dpow" id="Procedure_2aa767a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dpow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[implementation of ^ operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dround" id="Procedure_57ae3db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dround(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dsimple_init" id="Procedure_29eca2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dsimple_lexize" id="Procedure_3f1052f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsimple_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsimple_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dsnowball_init" id="Procedure_dc995" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_init(internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_init$function$
;]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dsnowball_lexize" id="Procedure_5cc2ea3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsnowball_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE c
 STRICT
AS '$libdir/dict_snowball', $function$dsnowball_lexize$function$
;]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dsqrt" id="Procedure_38170ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<comment><![CDATA[implementation of |/ operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="dsynonym_init" id="Procedure_18947d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dsynonym_lexize" id="Procedure_359aba4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dsynonym_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsynonym_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="dtrunc" id="Procedure_dd68d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.dtrunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="elem_contained_by_range" id="Procedure_520c34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.elem_contained_by_range(anyelement, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$elem_contained_by_range$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="encode" id="Procedure_28f7dc7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.encode(bytea, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$binary_encode$function$
;]]></string>
			<comment><![CDATA[convert bytea value into some ascii-only text string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="enum_cmp" id="Procedure_48e47fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_cmp(anyenum, anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="enum_eq" id="Procedure_21227a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_eq(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_first" id="Procedure_4fb487c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_first(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_first$function$
;]]></string>
			<comment><![CDATA[first value of the input enum type]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="enum_ge" id="Procedure_3a4d57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ge(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_gt" id="Procedure_31f6863" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_gt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_in" id="Procedure_4607d5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_in(cstring, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="enum_larger" id="Procedure_3b0cafb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_larger(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="enum_last" id="Procedure_4eb1826" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_last(anyenum)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_last$function$
;]]></string>
			<comment><![CDATA[last value of the input enum type]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="enum_le" id="Procedure_3ded15b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_le(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_lt" id="Procedure_531d2d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_lt(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_ne" id="Procedure_1310b79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_ne(anyenum, anyenum)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="enum_out" id="Procedure_36aebf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_out(anyenum)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="enum_range" id="Procedure_4ce278a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_all$function$
;]]></string>
			<comment><![CDATA[range of the given enum type, as an ordered array]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="enum_range" id="Procedure_20f7b60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_range(anyenum, anyenum)
 RETURNS anyarray
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$enum_range_bounds$function$
;]]></string>
			<comment><![CDATA[range between the two given enum values, as an ordered array]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="enum_recv" id="Procedure_2e94d63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_recv(internal, oid)
 RETURNS anyenum
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="enum_send" id="Procedure_8d1d95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_send(anyenum)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$enum_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="enum_smaller" id="Procedure_31f90a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.enum_smaller(anyenum, anyenum)
 RETURNS anyenum
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$enum_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<input_param name="$2" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="1111" type="anyenum" />
		</procedure>
		<procedure name="eqjoinsel" id="Procedure_16ae657" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of = and related operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="eqsel" id="Procedure_3332eab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.eqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$eqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of = and related operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="euc_cn_to_mic" id="Procedure_35f312a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$euc_cn_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_CN to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_cn_to_utf8" id="Procedure_21c74f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_cn_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$euc_cn_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_CN to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_jis_2004_to_shift_jis_2004" id="Procedure_5e3bcdc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_shift_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$euc_jis_2004_to_shift_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JIS_2004 to SHIFT_JIS_2004]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_jis_2004_to_utf8" id="Procedure_3cba193" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jis_2004_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$euc_jis_2004_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JIS_2004 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_jp_to_mic" id="Procedure_35b8f11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_jp_to_sjis" id="Procedure_2e288c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$euc_jp_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to SJIS]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_jp_to_utf8" id="Procedure_4798714" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_jp_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$euc_jp_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_JP to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_kr_to_mic" id="Procedure_1020d7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$euc_kr_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_KR to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_kr_to_utf8" id="Procedure_71c824" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_kr_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$euc_kr_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_KR to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_tw_to_big5" id="Procedure_531b099" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to BIG5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_tw_to_mic" id="Procedure_3f70f2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$euc_tw_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="euc_tw_to_utf8" id="Procedure_34aab9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.euc_tw_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$euc_tw_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for EUC_TW to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="event_trigger_in" id="Procedure_16da37c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_in(cstring)
 RETURNS event_trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$event_trigger_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="event_trigger" />
		</procedure>
		<procedure name="event_trigger_out" id="Procedure_1644b40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.event_trigger_out(event_trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$event_trigger_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="event_trigger" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="exp" id="Procedure_700ec0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_exp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="exp" id="Procedure_1f890a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.exp(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dexp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="factorial" id="Procedure_42e4e41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.factorial(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_fac$function$
;]]></string>
			<comment><![CDATA[factorial]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="family" id="Procedure_11be954" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.family(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_family$function$
;]]></string>
			<comment><![CDATA[address family (4 for IPv4, 6 for IPv6)]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="fdw_handler_in" id="Procedure_10a54c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_in(cstring)
 RETURNS fdw_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$fdw_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="fdw_handler" />
		</procedure>
		<procedure name="fdw_handler_out" id="Procedure_22c8be7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fdw_handler_out(fdw_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$fdw_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="fdw_handler" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="first_value" id="Procedure_253179a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.first_value(anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_first_value$function$
;]]></string>
			<comment><![CDATA[fetch the first row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="float4" id="Procedure_473a21a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(bigint)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tof$function$
;]]></string>
			<comment><![CDATA[convert int8 to float4]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4" id="Procedure_16c3cb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tof$function$
;]]></string>
			<comment><![CDATA[convert int4 to float4]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4" id="Procedure_a27e6e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(double precision)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtof$function$
;]]></string>
			<comment><![CDATA[convert float8 to float4]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4" id="Procedure_1e67a45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(smallint)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2tof$function$
;]]></string>
			<comment><![CDATA[convert int2 to float4]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4" id="Procedure_2a54efb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4(numeric)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float4$function$
;]]></string>
			<comment><![CDATA[convert numeric to float4]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float48div" id="Procedure_488ee22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48div(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float48eq" id="Procedure_1991e52" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48eq(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48ge" id="Procedure_3f37741" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ge(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48gt" id="Procedure_6941f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48gt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48le" id="Procedure_21fffc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48le(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48lt" id="Procedure_2b68824" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48lt(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48mi" id="Procedure_193c067" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mi(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float48mul" id="Procedure_5872b5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48mul(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float48ne" id="Procedure_4d0f48a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48ne(real, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float48ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float48pl" id="Procedure_1c9020" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float48pl(real, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float48pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float4_accum" id="Procedure_93caf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4_accum(double precision[], real)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="float4abs" id="Procedure_221bd40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4abs(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4div" id="Procedure_27f9428" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4div(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4eq" id="Procedure_2d44bc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4eq(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4ge" id="Procedure_475c6be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ge(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4gt" id="Procedure_9a265f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4gt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4in" id="Procedure_271cd30" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4in(cstring)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4larger" id="Procedure_401a2fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4larger(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4le" id="Procedure_4e6333a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4le(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4lt" id="Procedure_4a2755d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4lt(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4mi" id="Procedure_3282dc7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mi(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4mul" id="Procedure_103b12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4mul(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4ne" id="Procedure_14d4a23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4ne(real, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float4ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float4out" id="Procedure_1234bb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4out(real)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="float4pl" id="Procedure_40ccf49" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4pl(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4recv" id="Procedure_e0272e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4recv(internal)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4send" id="Procedure_1c408" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4send(real)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="float4smaller" id="Procedure_6c0dde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4smaller(real, real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4um" id="Procedure_1a4c35b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4um(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float4up" id="Procedure_5584be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float4up(real)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="float8" id="Procedure_577db07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(bigint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tod$function$
;]]></string>
			<comment><![CDATA[convert int8 to float8]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8" id="Procedure_161f4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(integer)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4tod$function$
;]]></string>
			<comment><![CDATA[convert int4 to float8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8" id="Procedure_a9969b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftod$function$
;]]></string>
			<comment><![CDATA[convert float4 to float8]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8" id="Procedure_2f5907f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(smallint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2tod$function$
;]]></string>
			<comment><![CDATA[convert int2 to float8]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8" id="Procedure_31d07c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8(numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_float8$function$
;]]></string>
			<comment><![CDATA[convert numeric to float8]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float84div" id="Procedure_5bec193" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84div(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float84eq" id="Procedure_34c990a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84eq(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84ge" id="Procedure_597e76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ge(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84gt" id="Procedure_3ae9c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84gt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84le" id="Procedure_3587e76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84le(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84lt" id="Procedure_1cdce1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84lt(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84mi" id="Procedure_467e3fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mi(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float84mul" id="Procedure_254dcf0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84mul(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float84ne" id="Procedure_5f5184a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84ne(double precision, real)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float84ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float84pl" id="Procedure_4b6a4ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float84pl(double precision, real)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float84pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="7" type="float4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_accum" id="Procedure_33666f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_accum(double precision[], double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="float8_avg" id="Procedure_3eeeb3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_avg(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_combine" id="Procedure_1d2d357" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<input_param name="$2" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="float8_corr" id="Procedure_284515c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_corr(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_corr$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_covar_pop" id="Procedure_e7a328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_covar_samp" id="Procedure_5c812a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_covar_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_covar_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_accum" id="Procedure_4ff6449" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_accum(double precision[], double precision, double precision)
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<input_param name="$2" jt="8" type="float8" />
			<input_param name="$3" jt="8" type="float8" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="float8_regr_avgx" id="Procedure_ebf7f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgx$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_avgy" id="Procedure_5899f38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_avgy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_avgy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_combine" id="Procedure_ab3d7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_combine(double precision[], double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<input_param name="$2" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="float8_regr_intercept" id="Procedure_55a41a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_intercept(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_intercept$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_r2" id="Procedure_137dec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_r2(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_r2$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_slope" id="Procedure_12744c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_slope(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_slope$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_sxx" id="Procedure_3777693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxx(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxx$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_sxy" id="Procedure_3bf9d0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_sxy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_sxy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_regr_syy" id="Procedure_2f5eaf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_regr_syy(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_regr_syy$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_stddev_pop" id="Procedure_4b8c379" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_stddev_samp" id="Procedure_28bc8c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_stddev_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_var_pop" id="Procedure_7ddb83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_pop(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8_var_samp" id="Procedure_78f3a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8_var_samp(double precision[])
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8abs" id="Procedure_1467c27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8abs(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8div" id="Procedure_3871301" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8div(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8eq" id="Procedure_1bb320a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8eq(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8ge" id="Procedure_3d53fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ge(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8gt" id="Procedure_4f7f9d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8gt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8in" id="Procedure_3c63d4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8in(cstring)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8larger" id="Procedure_5a1219d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8larger(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8le" id="Procedure_319e4af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8le(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8lt" id="Procedure_224d299" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8lt(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8mi" id="Procedure_2bbe198" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mi(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8mul" id="Procedure_4d63550" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8mul(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8ne" id="Procedure_5f8e8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8ne(double precision, double precision)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$float8ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="float8out" id="Procedure_2294396" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8out(double precision)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="float8pl" id="Procedure_5dc3ae2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8pl(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8recv" id="Procedure_1f392e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8recv(internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8send" id="Procedure_1ece1da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8send(double precision)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="float8smaller" id="Procedure_4fd8966" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8smaller(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8um" id="Procedure_2872949" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8um(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="float8up" id="Procedure_567136a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.float8up(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="floor" id="Procedure_b0a31f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dfloor$function$
;]]></string>
			<comment><![CDATA[nearest integer <= value]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="floor" id="Procedure_7740ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.floor(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_floor$function$
;]]></string>
			<comment><![CDATA[nearest integer <= value]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="flt4_mul_cash" id="Procedure_1b02127" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt4_mul_cash(real, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt4_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="flt8_mul_cash" id="Procedure_242bfd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.flt8_mul_cash(double precision, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$flt8_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="fmgr_c_validator" id="Procedure_d1bb4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_c_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_c_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="fmgr_internal_validator" id="Procedure_849bb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_internal_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_internal_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="fmgr_sql_validator" id="Procedure_592cf36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.fmgr_sql_validator(oid)
 RETURNS void
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$fmgr_sql_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="format" id="Procedure_1a10e07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format_nv$function$
;]]></string>
			<comment><![CDATA[format text message]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="format" id="Procedure_3c376db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format(text, VARIADIC "any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$text_format$function$
;]]></string>
			<comment><![CDATA[format text message]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="format_type" id="Procedure_396adaa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.format_type(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$format_type$function$
;]]></string>
			<comment><![CDATA[format a type oid and atttypmod to canonical SQL]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="gb18030_to_utf8" id="Procedure_d6b1e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gb18030_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$gb18030_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for GB18030 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="gbk_to_utf8" id="Procedure_5a8c5b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gbk_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$gbk_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for GBK to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="generate_series" id="Procedure_4d2145d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(timestamp with time zone, timestamp with time zone, interval)
 RETURNS SETOF timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$generate_series_timestamptz$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<input_param name="$3" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="generate_series" id="Procedure_12cc96c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(timestamp without time zone, timestamp without time zone, interval)
 RETURNS SETOF timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_timestamp$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<input_param name="$3" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="generate_series" id="Procedure_242e5d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(numeric, numeric)
 RETURNS SETOF numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_numeric$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="generate_series" id="Procedure_1318461" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(numeric, numeric, numeric)
 RETURNS SETOF numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_step_numeric$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<input_param name="$3" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="generate_series" id="Procedure_4cd36f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(bigint, bigint)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int8$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="generate_series" id="Procedure_460f463" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(bigint, bigint, bigint)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_step_int8$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="generate_series" id="Procedure_e7050a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="generate_series" id="Procedure_4ea7812" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_series(integer, integer, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_series_step_int4$function$
;]]></string>
			<comment><![CDATA[non-persistent series generator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="generate_subscripts" id="Procedure_49f2f2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts_nodir$function$
;]]></string>
			<comment><![CDATA[array subscripts generator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="generate_subscripts" id="Procedure_a5d8a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.generate_subscripts(anyarray, integer, boolean)
 RETURNS SETOF integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$generate_subscripts$function$
;]]></string>
			<comment><![CDATA[array subscripts generator]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="get_bit" id="Procedure_2001708" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bytea, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaGetBit$function$
;]]></string>
			<comment><![CDATA[get bit]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="get_bit" id="Procedure_4dc1755" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_bit(bit, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitgetbit$function$
;]]></string>
			<comment><![CDATA[get bit]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="get_byte" id="Procedure_5d8d63a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_byte(bytea, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaGetByte$function$
;]]></string>
			<comment><![CDATA[get byte]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="get_current_ts_config" id="Procedure_58076b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.get_current_ts_config()
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$get_current_ts_config$function$
;]]></string>
			<comment><![CDATA[get current tsearch configuration]]></comment>
			<result_param name="returnValue" jt="1111" type="regconfig" />
		</procedure>
		<procedure name="getdatabaseencoding" id="Procedure_3f20933" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getdatabaseencoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$getdatabaseencoding$function$
;]]></string>
			<comment><![CDATA[encoding name of current database]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="getpgusername" id="Procedure_5751785" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.getpgusername()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$current_user$function$
;]]></string>
			<comment><![CDATA[deprecated, use current_user instead]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="gin_clean_pending_list" id="Procedure_439fb90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_clean_pending_list(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$gin_clean_pending_list$function$
;]]></string>
			<comment><![CDATA[clean up GIN pending list]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="gin_cmp_prefix" id="Procedure_1f85bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_prefix(text, text, smallint, internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_prefix$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="gin_cmp_tslexeme" id="Procedure_406f3ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_cmp_tslexeme(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_cmp_tslexeme$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="gin_compare_jsonb" id="Procedure_4b7ba37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_compare_jsonb(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_compare_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="gin_consistent_jsonb" id="Procedure_3249f0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="jsonb" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_consistent_jsonb_path" id="Procedure_5f0475e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_consistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_consistent_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="jsonb" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_extract_jsonb" id="Procedure_4422d26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_jsonb_path" id="Procedure_1322fa6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_path(jsonb, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_jsonb_query" id="Procedure_37e689c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_jsonb_query_path" id="Procedure_292f386" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_jsonb_query_path(jsonb, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_jsonb_query_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_tsquery" id="Procedure_327e1c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_oldsig$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_tsquery" id="Procedure_4f3ed25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsvector, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_tsquery" id="Procedure_3678e67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsquery(tsquery, internal, smallint, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsquery_5args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_tsvector" id="Procedure_383ef64" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_extract_tsvector" id="Procedure_4125b72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_extract_tsvector(tsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_extract_tsvector_2args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gin_triconsistent_jsonb" id="Procedure_388bb2b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="jsonb" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="gin_triconsistent_jsonb_path" id="Procedure_10a7fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_triconsistent_jsonb_path(internal, smallint, jsonb, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_triconsistent_jsonb_path$function$
;]]></string>
			<comment><![CDATA[GIN support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="jsonb" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="gin_tsquery_consistent" id="Procedure_1e8649c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_oldsig$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_tsquery_consistent" id="Procedure_42f1a9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsvector, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="tsvector" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_tsquery_consistent" id="Procedure_3af1f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_consistent(internal, smallint, tsquery, integer, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_consistent_6args$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gin_tsquery_triconsistent" id="Procedure_14c3e8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gin_tsquery_triconsistent(internal, smallint, tsvector, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gin_tsquery_triconsistent$function$
;]]></string>
			<comment><![CDATA[GIN tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="tsvector" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="ginarrayconsistent" id="Procedure_2f02b84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayconsistent(internal, smallint, anyarray, integer, internal, internal, internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayconsistent$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="anyarray" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<input_param name="$8" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ginarrayextract" id="Procedure_18c013e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract_2args$function$
;]]></string>
			<comment><![CDATA[GIN array support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="ginarrayextract" id="Procedure_279a741" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarrayextract(anyarray, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarrayextract$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="ginarraytriconsistent" id="Procedure_46422b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginarraytriconsistent(internal, smallint, anyarray, integer, internal, internal, internal)
 RETURNS "char"
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginarraytriconsistent$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="1111" type="anyarray" />
			<input_param name="$4" jt="4" type="int4" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1" type="char" />
		</procedure>
		<procedure name="ginhandler" id="Procedure_457dfa5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$ginhandler$function$
;]]></string>
			<comment><![CDATA[gin index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="ginqueryarrayextract" id="Procedure_3246e9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ginqueryarrayextract(anyarray, internal, smallint, internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ginqueryarrayextract$function$
;]]></string>
			<comment><![CDATA[GIN array support]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="1111" type="internal" />
			<input_param name="$6" jt="1111" type="internal" />
			<input_param name="$7" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_compress" id="Procedure_17aa5c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_consistent" id="Procedure_e70473" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_consistent(internal, box, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="box" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gist_box_decompress" id="Procedure_12eca83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_decompress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_fetch" id="Procedure_adf3d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_penalty" id="Procedure_1aeb64f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_picksplit" id="Procedure_1440bb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_same" id="Procedure_4a1ca31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_same(box, box, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<input_param name="$2" jt="1111" type="box" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_box_union" id="Procedure_3de4ef4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_box_union(internal, internal)
 RETURNS box
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_box_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="box" />
		</procedure>
		<procedure name="gist_circle_compress" id="Procedure_4ac555d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_circle_consistent" id="Procedure_334f633" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_consistent(internal, circle, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="circle" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gist_circle_distance" id="Procedure_1e1641d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_circle_distance(internal, circle, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_circle_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="circle" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="gist_point_compress" id="Procedure_59cb68b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_point_consistent" id="Procedure_17358d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_consistent(internal, point, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="point" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gist_point_distance" id="Procedure_12bdd6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_distance(internal, point, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="point" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="gist_point_fetch" id="Procedure_361cc9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_point_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_point_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_poly_compress" id="Procedure_5b36bd2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gist_poly_consistent" id="Procedure_6da377" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_consistent(internal, polygon, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="polygon" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gist_poly_distance" id="Procedure_4fe65dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gist_poly_distance(internal, polygon, smallint, oid, internal)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gist_poly_distance$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="polygon" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="gisthandler" id="Procedure_24d2f0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gisthandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$gisthandler$function$
;]]></string>
			<comment><![CDATA[gist index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="gtsquery_compress" id="Procedure_2d13132" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_compress$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsquery_consistent" id="Procedure_57df26e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, internal, integer, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent_oldsig$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="4" type="int4" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gtsquery_consistent" id="Procedure_2a406ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_consistent(internal, tsquery, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gtsquery_decompress" id="Procedure_4b3ab1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_decompress$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsquery_penalty" id="Procedure_5c9ed98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_penalty$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsquery_picksplit" id="Procedure_3a8852a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsquery_same" id="Procedure_3e99dd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_same(bigint, bigint, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_same$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsquery_union" id="Procedure_2d3f2ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsquery_union(internal, internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsquery_union$function$
;]]></string>
			<comment><![CDATA[GiST tsquery support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="gtsvector_compress" id="Procedure_9e4ed2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_compress$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsvector_consistent" id="Procedure_239abd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, gtsvector, integer, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent_oldsig$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support (obsolete)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="gtsvector" />
			<input_param name="$3" jt="4" type="int4" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gtsvector_consistent" id="Procedure_44d48e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_consistent(internal, tsvector, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_consistent$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="gtsvector_decompress" id="Procedure_3d9680e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_decompress$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsvector_penalty" id="Procedure_37eded4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_penalty$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsvector_picksplit" id="Procedure_2028892" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsvector_same" id="Procedure_1134317" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_same(gtsvector, gtsvector, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_same$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="gtsvector" />
			<input_param name="$2" jt="1111" type="gtsvector" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="gtsvector_union" id="Procedure_3312b55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvector_union(internal, internal)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvector_union$function$
;]]></string>
			<comment><![CDATA[GiST tsvector support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="gtsvector" />
		</procedure>
		<procedure name="gtsvectorin" id="Procedure_250ea37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorin(cstring)
 RETURNS gtsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="gtsvector" />
		</procedure>
		<procedure name="gtsvectorout" id="Procedure_a7162e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.gtsvectorout(gtsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$gtsvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="gtsvector" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_362593c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on any column by rel oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_3ed96f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on any column by rel name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_423de0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by user oid, rel oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_3d11af9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by user oid, rel name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_526646a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_any_column_privilege" id="Procedure_5800d3f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_any_column_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$has_any_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on any column by username, rel name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_3e85c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_attnum$function$
;]]></string>
			<comment><![CDATA[current user privilege on column by rel oid, col attnum]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_2358e25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on column by rel oid, col name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_5f3927c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_attnum$function$
;]]></string>
			<comment><![CDATA[current user privilege on column by rel name, col attnum]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_339d3a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on column by rel name, col name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_438f9f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_id_attnum$function$
;]]></string>
			<comment><![CDATA[user privilege on column by user oid, rel oid, col attnum]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_4179281" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by user oid, rel oid, col name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_2576a4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name_attnum$function$
;]]></string>
			<comment><![CDATA[user privilege on column by user oid, rel name, col attnum]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_173e5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(oid, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_id_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by user oid, rel name, col name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_32704f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, oid, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_id_attnum$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel oid, col attnum]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_93309d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel oid, col name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_49eeafe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, smallint, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_attnum$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col attnum]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_column_privilege" id="Procedure_49a66ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_column_privilege(name, text, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_column_privilege_name_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on column by username, rel name, col name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_d0208d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on database by database oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_530e5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on database by database name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_41224e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on database by user oid, database oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_1b85c8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by user oid, database name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_39445f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_database_privilege" id="Procedure_137da4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_database_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_database_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on database by username, database name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_198fcfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on foreign data wrapper by foreign data wrapper oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_661c96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on foreign data wrapper by foreign data wrapper name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_45a38c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by user oid, foreign data wrapper oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_3340c65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by user oid, foreign data wrapper name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_450c77d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_foreign_data_wrapper_privilege" id="Procedure_ae64fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_foreign_data_wrapper_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_foreign_data_wrapper_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on foreign data wrapper by username, foreign data wrapper name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_dbda6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on function by function oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_304113c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on function by function name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_530428c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on function by user oid, function oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_5d5071" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by user oid, function name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_4d1ac68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_function_privilege" id="Procedure_36aeb59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_function_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_function_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on function by username, function name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_18c51fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on language by language oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_599b379" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on language by language name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_499fb27" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on language by user oid, language oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_1870986" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by user oid, language name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_40ae0b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_language_privilege" id="Procedure_56674d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_language_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_language_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on language by username, language name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_140c2c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on schema by schema oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_cb787c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on schema by schema name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_38927b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by user oid, schema oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_5ef7f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by user oid, schema name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_24306a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_schema_privilege" id="Procedure_53fea46" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_schema_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_schema_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on schema by username, schema name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_20a2338" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on sequence by seq oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_10a0ae2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on sequence by seq name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_46e0826" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by user oid, seq oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_3590b81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by user oid, seq name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_2968548" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_sequence_privilege" id="Procedure_d43c14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_sequence_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_sequence_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on sequence by username, seq name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_236ea8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on server by server oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_219cc12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on server by server name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_199ae11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on server by user oid, server oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_33b9db6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by user oid, server name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_26cb4a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_server_privilege" id="Procedure_c5f1da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_server_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_server_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on server by username, server name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_3ad2453" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on relation by rel oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_5606dd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on relation by rel name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_2b544e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by user oid, rel oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_2b1a101" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by user oid, rel name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_37c1755" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_table_privilege" id="Procedure_507e28c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_table_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_table_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on relation by username, rel name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_2e97d69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on tablespace by tablespace oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_564b586" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on tablespace by tablespace name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_58fa74f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by user oid, tablespace oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_5c1950d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by user oid, tablespace name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_9e476f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_tablespace_privilege" id="Procedure_99d42b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_tablespace_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_tablespace_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on tablespace by username, tablespace name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_d8ab4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on type by type oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_5459b79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on type by type name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_491fdf0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on type by user oid, type oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_55733bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(oid, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by user oid, type name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_7013d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="has_type_privilege" id="Procedure_253e54e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.has_type_privilege(name, text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$has_type_privilege_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on type by username, type name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="hash_aclitem" id="Procedure_5b13f1c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_aclitem(aclitem)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_aclitem$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="aclitem" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hash_array" id="Procedure_afd2bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_array(anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_array$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hash_numeric" id="Procedure_134cf12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_numeric(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_numeric$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hash_range" id="Procedure_c9c21f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hash_range(anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hash_range$function$
;]]></string>
			<comment><![CDATA[hash a range]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashbpchar" id="Procedure_1942dd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashbpchar(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashbpchar$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashchar" id="Procedure_44902ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashchar("char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashchar$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashenum" id="Procedure_5e7973c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashenum(anyenum)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashenum$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="anyenum" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashfloat4" id="Procedure_38d58d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat4(real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat4$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashfloat8" id="Procedure_39ea6d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashfloat8(double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashfloat8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashhandler" id="Procedure_9094b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashhandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$hashhandler$function$
;]]></string>
			<comment><![CDATA[hash index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="hashinet" id="Procedure_2039481" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashinet(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashinet$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashint2" id="Procedure_1a9ce47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint2(smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint2$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashint4" id="Procedure_3535c93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint4(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint4$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashint8" id="Procedure_4785301" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashint8(bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashint8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashmacaddr" id="Procedure_2cde19e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr(macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashmacaddr8" id="Procedure_3dbaf35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashmacaddr8(macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashmacaddr8$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashname" id="Procedure_272d017" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashname(name)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashname$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashoid" id="Procedure_2794836" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoid(oid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoid$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashoidvector" id="Procedure_5a47a5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashoidvector(oidvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashoidvector$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashtext" id="Procedure_4ca6977" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashtext(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashtext$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="hashvarlena" id="Procedure_5c35862" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hashvarlena(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$hashvarlena$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="height" id="Procedure_41576c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.height(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_height$function$
;]]></string>
			<comment><![CDATA[box height]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="host" id="Procedure_3dff614" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.host(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_host$function$
;]]></string>
			<comment><![CDATA[show address octets only]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="hostmask" id="Procedure_f4556e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.hostmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_hostmask$function$
;]]></string>
			<comment><![CDATA[hostmask of address]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="iclikejoinsel" id="Procedure_f54465" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of ILIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="iclikesel" id="Procedure_1abb315" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iclikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$iclikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of ILIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icnlikejoinsel" id="Procedure_520a906" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of NOT ILIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icnlikesel" id="Procedure_22dbfbd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icnlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icnlikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of NOT ILIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icregexeqjoinsel" id="Procedure_5279d7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of case-insensitive regex match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icregexeqsel" id="Procedure_1bd0ff8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexeqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of case-insensitive regex match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icregexnejoinsel" id="Procedure_417a8dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of case-insensitive regex non-match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="icregexnesel" id="Procedure_27f9798" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.icregexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$icregexnesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of case-insensitive regex non-match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="index_am_handler_in" id="Procedure_abca16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_in(cstring)
 RETURNS index_am_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$index_am_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="index_am_handler_out" id="Procedure_44b3b0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.index_am_handler_out(index_am_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$index_am_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="index_am_handler" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="inet_client_addr" id="Procedure_12660ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_addr$function$
;]]></string>
			<comment><![CDATA[inet address of the client]]></comment>
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inet_client_port" id="Procedure_3903a98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_client_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$inet_client_port$function$
;]]></string>
			<comment><![CDATA[client's port number for this connection]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="inet_gist_compress" id="Procedure_272f9fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_consistent" id="Procedure_1fd7f50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_consistent(internal, inet, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="inet" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="inet_gist_decompress" id="Procedure_3a34ed3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_decompress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_fetch" id="Procedure_4da1f25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_penalty" id="Procedure_49e3585" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_picksplit" id="Procedure_23004b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_same" id="Procedure_d3e4b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_same(inet, inet, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="inet_gist_union" id="Procedure_1b66087" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_gist_union(internal, internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_gist_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inet_in" id="Procedure_3a35670" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_in(cstring)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inet_merge" id="Procedure_538fd45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_merge(inet, inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_merge$function$
;]]></string>
			<comment><![CDATA[the smallest network which includes both of the given networks]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="inet_out" id="Procedure_5cb998f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_out(inet)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="inet_recv" id="Procedure_5b7bf67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_recv(internal)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inet_same_family" id="Procedure_38e6041" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_same_family(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_same_family$function$
;]]></string>
			<comment><![CDATA[are the addresses from the same family?]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="inet_send" id="Procedure_3b1a1bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_send(inet)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="inet_server_addr" id="Procedure_20f47b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_addr()
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$inet_server_addr$function$
;]]></string>
			<comment><![CDATA[inet address of the server]]></comment>
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inet_server_port" id="Procedure_56fd445" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_server_port()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$inet_server_port$function$
;]]></string>
			<comment><![CDATA[server's port number for this connection]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="inet_spg_choose" id="Procedure_19ebe28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="inet_spg_config" id="Procedure_1134619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="inet_spg_inner_consistent" id="Procedure_393ef4b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="inet_spg_leaf_consistent" id="Procedure_f4374b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="inet_spg_picksplit" id="Procedure_b3925b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inet_spg_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_spg_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="inetand" id="Procedure_404f1f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetand(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetand$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inetmi" id="Procedure_2ee0230" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi(inet, inet)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="inetmi_int8" id="Procedure_36de1b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetmi_int8(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetmi_int8$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inetnot" id="Procedure_34b71d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetnot(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetnot$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inetor" id="Procedure_4be124c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetor(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetor$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="inetpl" id="Procedure_14cc41f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inetpl(inet, bigint)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inetpl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="initcap" id="Procedure_2498f28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.initcap(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$initcap$function$
;]]></string>
			<comment><![CDATA[capitalize each word]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="int2" id="Procedure_35ab65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(bigint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82$function$
;]]></string>
			<comment><![CDATA[convert int8 to int2]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2" id="Procedure_3adcd82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i4toi2$function$
;]]></string>
			<comment><![CDATA[convert int4 to int2]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2" id="Procedure_5a626fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(real)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi2$function$
;]]></string>
			<comment><![CDATA[convert float4 to int2]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2" id="Procedure_cfd75c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(double precision)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi2$function$
;]]></string>
			<comment><![CDATA[convert float8 to int2]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2" id="Procedure_25aadde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2(numeric)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int2$function$
;]]></string>
			<comment><![CDATA[convert numeric to int2]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int24div" id="Procedure_41a9015" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24div(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int24eq" id="Procedure_58d3f6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24eq(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24ge" id="Procedure_e17f0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ge(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24gt" id="Procedure_49dd50a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24gt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24le" id="Procedure_1241b23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24le(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24lt" id="Procedure_3e22693" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24lt(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24mi" id="Procedure_2a483ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mi(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int24mul" id="Procedure_31cb712" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24mul(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int24ne" id="Procedure_30b1ff9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24ne(smallint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int24ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int24pl" id="Procedure_4f93ea6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int24pl(smallint, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int24pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int28div" id="Procedure_5dca413" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28div(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int28eq" id="Procedure_1eddbc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28eq(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28ge" id="Procedure_353a033" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ge(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28gt" id="Procedure_3685300" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28gt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28le" id="Procedure_2196783" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28le(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28lt" id="Procedure_5f1b2f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28lt(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28mi" id="Procedure_21914b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mi(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int28mul" id="Procedure_16f65e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28mul(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int28ne" id="Procedure_24d9359" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28ne(smallint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int28ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int28pl" id="Procedure_2ec2598" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int28pl(smallint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int2_accum" id="Procedure_41e21e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int2_accum_inv" id="Procedure_2595a1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_accum_inv(internal, smallint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int2_avg_accum" id="Procedure_25f587e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="2003" type="_int8" />
		</procedure>
		<procedure name="int2_avg_accum_inv" id="Procedure_29c89e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_avg_accum_inv(bigint[], smallint)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="2003" type="_int8" />
		</procedure>
		<procedure name="int2_mul_cash" id="Procedure_370b7d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_mul_cash(smallint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="int2_sum" id="Procedure_1bf8cbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2_sum(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int2_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int2abs" id="Procedure_276a8de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2abs(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2and" id="Procedure_4cdc3d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2and(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2div" id="Procedure_5b9c9db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2div(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2eq" id="Procedure_1d37be6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2eq(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2ge" id="Procedure_36c7723" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ge(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2gt" id="Procedure_288d7ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2gt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2in" id="Procedure_387d7e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2in(cstring)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2int4_sum" id="Procedure_5b2c36a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2int4_sum(bigint[])
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2int4_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int2larger" id="Procedure_2004b74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2larger(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2le" id="Procedure_4299504" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2le(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2lt" id="Procedure_4ab4109" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2lt(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2mi" id="Procedure_1026ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mi(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2mod" id="Procedure_5157464" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mod(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2mul" id="Procedure_465a21f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2mul(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2ne" id="Procedure_3d147fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2ne(smallint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int2ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int2not" id="Procedure_3d42044" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2not(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2or" id="Procedure_fd14b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2or(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2out" id="Procedure_45b0aae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2out(smallint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="int2pl" id="Procedure_57a216a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2pl(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2recv" id="Procedure_20b88ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2recv(internal)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2send" id="Procedure_5249d89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2send(smallint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="int2shl" id="Procedure_23ff589" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shl(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2shr" id="Procedure_5cc861c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2shr(smallint, integer)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2smaller" id="Procedure_5dcdf0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2smaller(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2um" id="Procedure_53980e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2um(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2up" id="Procedure_4f836eb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2up(smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int2vectorin" id="Procedure_278366d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorin(cstring)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="int2vector" />
		</procedure>
		<procedure name="int2vectorout" id="Procedure_c6b16e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorout(int2vector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="int2vector" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="int2vectorrecv" id="Procedure_17828b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorrecv(internal)
 RETURNS int2vector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="int2vector" />
		</procedure>
		<procedure name="int2vectorsend" id="Procedure_43fea06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2vectorsend(int2vector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2vectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="int2vector" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="int2xor" id="Procedure_5ed3d97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int2xor(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="int4" id="Procedure_15df260" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4("char")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$chartoi4$function$
;]]></string>
			<comment><![CDATA[convert char to int4]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_413d6e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bigint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84$function$
;]]></string>
			<comment><![CDATA[convert int8 to int4]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_5d0c07a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(real)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi4$function$
;]]></string>
			<comment><![CDATA[convert float4 to int4]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_f20894" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(double precision)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi4$function$
;]]></string>
			<comment><![CDATA[convert float8 to int4]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_570c733" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i2toi4$function$
;]]></string>
			<comment><![CDATA[convert int2 to int4]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_2106281" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(boolean)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bool_int4$function$
;]]></string>
			<comment><![CDATA[convert boolean to int4]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_46a8b6f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int4$function$
;]]></string>
			<comment><![CDATA[convert numeric to int4]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4" id="Procedure_2ee3f74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint4$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int4]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int42div" id="Procedure_b6501e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42div(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int42eq" id="Procedure_486ac02" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42eq(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42ge" id="Procedure_58e6070" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ge(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42gt" id="Procedure_1cc5fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42gt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42le" id="Procedure_2527e53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42le(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42lt" id="Procedure_fa57e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42lt(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42mi" id="Procedure_18bd918" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mi(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int42mul" id="Procedure_13cf742" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42mul(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int42ne" id="Procedure_5cd7fc5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42ne(integer, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int42ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int42pl" id="Procedure_1a5c3e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int42pl(integer, smallint)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int42pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int48div" id="Procedure_41adf25" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48div(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int48eq" id="Procedure_57fd09c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48eq(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48ge" id="Procedure_4be699f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ge(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48gt" id="Procedure_f62ea6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48gt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48le" id="Procedure_380a7da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48le(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48lt" id="Procedure_3ad0324" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48lt(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48mi" id="Procedure_4112153" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mi(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int48mul" id="Procedure_293d1f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48mul(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int48ne" id="Procedure_148fbb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48ne(integer, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int48ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int48pl" id="Procedure_4db7e16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int48pl(integer, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int4_accum" id="Procedure_2ae70ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int4_accum_inv" id="Procedure_5bde755" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_accum_inv(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int4_avg_accum" id="Procedure_32ed68f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="2003" type="_int8" />
		</procedure>
		<procedure name="int4_avg_accum_inv" id="Procedure_1e422d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_accum_inv(bigint[], integer)
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="2003" type="_int8" />
		</procedure>
		<procedure name="int4_avg_combine" id="Procedure_109ec41" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_avg_combine(bigint[], bigint[])
 RETURNS bigint[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<input_param name="$2" jt="2003" type="_int8" />
			<result_param name="returnValue" jt="2003" type="_int8" />
		</procedure>
		<procedure name="int4_mul_cash" id="Procedure_429965b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_mul_cash(integer, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="int4_sum" id="Procedure_464c19" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4_sum(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int4_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int4abs" id="Procedure_445cb87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4abs(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4and" id="Procedure_46cfb82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4and(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4div" id="Procedure_155c5c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4div(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4eq" id="Procedure_33dc754" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4eq(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4ge" id="Procedure_6eef20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ge(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4gt" id="Procedure_52edb4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4gt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4in" id="Procedure_4764736" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4in(cstring)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4inc" id="Procedure_479b6aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4inc(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4inc$function$
;]]></string>
			<comment><![CDATA[increment]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4larger" id="Procedure_4be12be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4larger(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4le" id="Procedure_522568e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4le(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4lt" id="Procedure_268ca04" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4lt(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4mi" id="Procedure_241028" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mi(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4mod" id="Procedure_83e328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mod(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4mul" id="Procedure_336df96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4mul(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4ne" id="Procedure_1faa084" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4ne(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int4ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int4not" id="Procedure_5b4e20f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4not(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4or" id="Procedure_1f851b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4or(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4out" id="Procedure_567de92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4out(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="int4pl" id="Procedure_5057eaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4pl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4range" id="Procedure_428562e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer, text)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[int4range constructor]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="int4range" id="Procedure_41166b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range(integer, integer)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int4range constructor]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
		</procedure>
		<procedure name="int4range_canonical" id="Procedure_200da6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_canonical(int4range)
 RETURNS int4range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_canonical$function$
;]]></string>
			<comment><![CDATA[convert an int4 range to canonical form]]></comment>
			<input_param name="$1" jt="1111" type="int4range" />
		</procedure>
		<procedure name="int4range_subdiff" id="Procedure_4dda8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4range_subdiff(integer, integer)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4range_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two int4 values]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="int4recv" id="Procedure_583452c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4recv(internal)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4send" id="Procedure_4e2c676" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4send(integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="int4shl" id="Procedure_1a56b5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shl(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4shr" id="Procedure_4a9f952" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4shr(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4smaller" id="Procedure_31f03c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4smaller(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4um" id="Procedure_4f3c652" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4um(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4up" id="Procedure_479059a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4up(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int4xor" id="Procedure_13f4516" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int4xor(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="int8" id="Procedure_2f40e07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int28$function$
;]]></string>
			<comment><![CDATA[convert int2 to int8]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_4c44f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(real)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ftoi8$function$
;]]></string>
			<comment><![CDATA[convert float4 to int8]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_28e6ba8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(double precision)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtoi8$function$
;]]></string>
			<comment><![CDATA[convert float8 to int8]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_3d5bd35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int48$function$
;]]></string>
			<comment><![CDATA[convert int4 to int8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_1251c1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(bit)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bittoint8$function$
;]]></string>
			<comment><![CDATA[convert bitstring to int8]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_167bbde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(numeric)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_int8$function$
;]]></string>
			<comment><![CDATA[convert numeric to int8]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8" id="Procedure_178b035" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8(oid)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidtoi8$function$
;]]></string>
			<comment><![CDATA[convert oid to int8]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int82div" id="Procedure_d2229e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82div(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int82eq" id="Procedure_f87fc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82eq(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82ge" id="Procedure_26323e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ge(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82gt" id="Procedure_3076d24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82gt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82le" id="Procedure_6653db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82le(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82lt" id="Procedure_323753c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82lt(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82mi" id="Procedure_1d983cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mi(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int82mul" id="Procedure_36f1095" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82mul(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int82ne" id="Procedure_3eed714" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82ne(bigint, smallint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int82ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int82pl" id="Procedure_3890ffd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int82pl(bigint, smallint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int82pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int84div" id="Procedure_43103bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84div(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int84eq" id="Procedure_feaac1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84eq(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84ge" id="Procedure_325cff4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ge(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84gt" id="Procedure_4ad6543" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84gt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84le" id="Procedure_487d6b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84le(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84lt" id="Procedure_4311fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84lt(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84mi" id="Procedure_39b69ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mi(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int84mul" id="Procedure_2c2bc99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84mul(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int84ne" id="Procedure_3c73ed5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84ne(bigint, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int84ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int84pl" id="Procedure_59b821a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int84pl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int84pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8_accum" id="Procedure_33a5399" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_accum_inv" id="Procedure_31ad917" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_avg" id="Procedure_11d6bf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg(bigint[])
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_int8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="int8_avg_accum" id="Procedure_1285ff0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_avg_accum_inv" id="Procedure_32c2988" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_accum_inv(internal, bigint)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_avg_combine" id="Procedure_cc67d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_avg_deserialize" id="Procedure_518c5b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="int8_avg_serialize" id="Procedure_1ff9c5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_avg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="int8_mul_cash" id="Procedure_47da7f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_mul_cash(bigint, money)
 RETURNS money
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_mul_cash$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="8" type="money" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="int8_sum" id="Procedure_4969c4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8_sum(numeric, bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$int8_sum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="int8abs" id="Procedure_5b5ffa8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8abs(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8and" id="Procedure_13be0a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8and(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8dec" id="Procedure_6bfb61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec$function$
;]]></string>
			<comment><![CDATA[decrement]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8dec_any" id="Procedure_79703" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8dec_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8dec_any$function$
;]]></string>
			<comment><![CDATA[decrement, ignores second argument]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8div" id="Procedure_4acad48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8div(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8eq" id="Procedure_4a9b0e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8eq(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8ge" id="Procedure_2adc8f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ge(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8gt" id="Procedure_42c906a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8gt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8in" id="Procedure_347bec8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8in(cstring)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8inc" id="Procedure_2e7ceb0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc$function$
;]]></string>
			<comment><![CDATA[increment]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8inc_any" id="Procedure_33c5533" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_any(bigint, "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_any$function$
;]]></string>
			<comment><![CDATA[increment, ignores second argument]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8inc_float8_float8" id="Procedure_39c553d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8inc_float8_float8(bigint, double precision, double precision)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8inc_float8_float8$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="8" type="float8" />
			<input_param name="$3" jt="8" type="float8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8larger" id="Procedure_56bf5a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8larger(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8le" id="Procedure_2ff75c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8le(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8lt" id="Procedure_196c04d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8lt(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8mi" id="Procedure_31ebafc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mi(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8mod" id="Procedure_1e52f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mod(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8mul" id="Procedure_13e79e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8mul(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8ne" id="Procedure_49d3c4e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8ne(bigint, bigint)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$int8ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="int8not" id="Procedure_46d9d43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8not(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8or" id="Procedure_1dc6df3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8or(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8out" id="Procedure_3fcf315" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8out(bigint)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="int8pl" id="Procedure_daca2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8pl_inet" id="Procedure_378cf9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8pl_inet(bigint, inet)
 RETURNS inet
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="int8range" id="Procedure_4d6165f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint, text)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[int8range constructor]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="int8range" id="Procedure_bab96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range(bigint, bigint)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[int8range constructor]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8range_canonical" id="Procedure_183f9c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_canonical(int8range)
 RETURNS int8range
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_canonical$function$
;]]></string>
			<comment><![CDATA[convert an int8 range to canonical form]]></comment>
			<input_param name="$1" jt="1111" type="int8range" />
		</procedure>
		<procedure name="int8range_subdiff" id="Procedure_3174cb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8range_subdiff(bigint, bigint)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8range_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two int8 values]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="int8recv" id="Procedure_b22eef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8recv(internal)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8send" id="Procedure_46bd705" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8send(bigint)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="int8shl" id="Procedure_4bae866" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shl(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shl$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8shr" id="Procedure_36051cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8shr(bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8shr$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8smaller" id="Procedure_c41fc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8smaller(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8um" id="Procedure_2c36113" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8um(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8up" id="Procedure_579307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8up(bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8up$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="int8xor" id="Procedure_1b60bdc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.int8xor(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8xor$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="integer_pl_date" id="Procedure_507667f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.integer_pl_date(integer, date)
 RETURNS date
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="inter_lb" id="Procedure_b14e51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_lb(line, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_lb$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="inter_sb" id="Procedure_16b90ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sb$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="inter_sl" id="Procedure_3b3f74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.inter_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inter_sl$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="internal_in" id="Procedure_5050a28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_in(cstring)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$internal_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="internal_out" id="Procedure_461fcb8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.internal_out(internal)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$internal_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="interval" id="Procedure_5475b28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(time without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_interval$function$
;]]></string>
			<comment><![CDATA[convert time to interval]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval" id="Procedure_5295b3d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(interval, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_scale$function$
;]]></string>
			<comment><![CDATA[adjust interval precision]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval" id="Procedure_1169623" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."interval"(reltime)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$reltime_interval$function$
;]]></string>
			<comment><![CDATA[convert reltime to interval]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_accum" id="Procedure_2b145b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_accum(interval[], interval)
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="2003" type="_interval" />
		</procedure>
		<procedure name="interval_accum_inv" id="Procedure_115d17b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_accum_inv(interval[], interval)
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2003" type="_interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="2003" type="_interval" />
		</procedure>
		<procedure name="interval_avg" id="Procedure_44ecccd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_avg(interval[])
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="2003" type="_interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_cmp" id="Procedure_e95309" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_cmp(interval, interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="interval_combine" id="Procedure_5e87499" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_combine(interval[], interval[])
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="2003" type="_interval" />
			<input_param name="$2" jt="2003" type="_interval" />
			<result_param name="returnValue" jt="2003" type="_interval" />
		</procedure>
		<procedure name="interval_div" id="Procedure_15649d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_div(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_eq" id="Procedure_362a63e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_eq(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_ge" id="Procedure_3756217" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ge(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_gt" id="Procedure_1e1cdc8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_gt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_hash" id="Procedure_1993ca7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_hash(interval)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="interval_in" id="Procedure_16486c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_in(cstring, oid, integer)
 RETURNS interval
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_larger" id="Procedure_46409fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_larger(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_le" id="Procedure_185f6bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_le(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_lt" id="Procedure_32dff07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_lt(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_mi" id="Procedure_52fc2a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mi(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_mul" id="Procedure_397ebc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_mul(interval, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_ne" id="Procedure_1facb0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_ne(interval, interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$interval_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="interval_out" id="Procedure_2f74895" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_out(interval)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="interval_pl" id="Procedure_133ab12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_pl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_pl_date" id="Procedure_209dfbb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_date(interval, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="interval_pl_time" id="Procedure_34c757d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_time(interval, time without time zone)
 RETURNS time without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="interval_pl_timestamp" id="Procedure_1a8d985" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamp(interval, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="interval_pl_timestamptz" id="Procedure_4b09cd3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timestamptz(interval, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="interval_pl_timetz" id="Procedure_3e133cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_pl_timetz(interval, time with time zone)
 RETURNS time with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select $2 + $1$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="interval_recv" id="Procedure_4aac056" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_recv(internal, oid, integer)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_send" id="Procedure_21231b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_send(interval)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="interval_smaller" id="Procedure_5ce29af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_smaller(interval, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="interval_transform" id="Procedure_35c459d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_transform$function$
;]]></string>
			<comment><![CDATA[transform an interval length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="interval_um" id="Procedure_5d9f38d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.interval_um(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_um$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="intervaltypmodin" id="Procedure_6687d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="intervaltypmodout" id="Procedure_190712f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intervaltypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intervaltypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="intinterval" id="Procedure_3d5152c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.intinterval(abstime, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$intinterval$function$
;]]></string>
			<comment><![CDATA[implementation of <?> operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isclosed" id="Procedure_3781ca9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isclosed(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isclosed$function$
;]]></string>
			<comment><![CDATA[path closed?]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isempty" id="Procedure_23acecb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isempty(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_empty$function$
;]]></string>
			<comment><![CDATA[is the range empty?]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isfinite" id="Procedure_e6699c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(abstime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$abstime_finite$function$
;]]></string>
			<comment><![CDATA[finite abstime?]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isfinite" id="Procedure_3cea8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_finite$function$
;]]></string>
			<comment><![CDATA[finite timestamp?]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isfinite" id="Procedure_15d1d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(interval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_finite$function$
;]]></string>
			<comment><![CDATA[finite interval?]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isfinite" id="Procedure_200cc32" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_finite$function$
;]]></string>
			<comment><![CDATA[finite timestamp?]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isfinite" id="Procedure_206c989" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isfinite(date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_finite$function$
;]]></string>
			<comment><![CDATA[finite date?]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ishorizontal" id="Procedure_1ffb6d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_horizontal$function$
;]]></string>
			<comment><![CDATA[horizontal]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ishorizontal" id="Procedure_215f5e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_horizontal$function$
;]]></string>
			<comment><![CDATA[horizontal]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ishorizontal" id="Procedure_565b64d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ishorizontal(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[horizontally aligned]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="iso8859_1_to_utf8" id="Procedure_5c6f454" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_1_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$iso8859_1_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN1 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="iso8859_to_utf8" id="Procedure_46d8e50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso8859_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$iso8859_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-8 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="iso_to_koi8r" id="Procedure_4bd37c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to KOI8R]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="iso_to_mic" id="Procedure_38832cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="iso_to_win1251" id="Procedure_3913d61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to WIN1251]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="iso_to_win866" id="Procedure_69fa47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.iso_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$iso_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for ISO-8859-5 to WIN866]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="isopen" id="Procedure_232fc78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isopen(path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_isopen$function$
;]]></string>
			<comment><![CDATA[path open?]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isparallel" id="Procedure_301e7f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_parallel$function$
;]]></string>
			<comment><![CDATA[parallel]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isparallel" id="Procedure_b41c05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isparallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<comment><![CDATA[parallel]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isperp" id="Procedure_284d8f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_perp$function$
;]]></string>
			<comment><![CDATA[perpendicular]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isperp" id="Procedure_5ec9f65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isperp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<comment><![CDATA[perpendicular]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isvertical" id="Procedure_3dec870" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_vertical$function$
;]]></string>
			<comment><![CDATA[vertical]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isvertical" id="Procedure_554c9ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_vertical$function$
;]]></string>
			<comment><![CDATA[vertical]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="isvertical" id="Procedure_d80b75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.isvertical(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[vertically aligned]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="johab_to_utf8" id="Procedure_a497e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.johab_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$johab_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for JOHAB to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="json_agg_finalfn" id="Procedure_2fd011c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[json aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_agg_transfn" id="Procedure_3f3aee0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_agg_transfn$function$
;]]></string>
			<comment><![CDATA[json aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="json_array_element" id="Procedure_2dd0b6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element(from_json json, element_index integer)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="element_index" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_array_element_text" id="Procedure_383e846" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_element_text(from_json json, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_element_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="element_index" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="json_array_elements" id="Procedure_a68fe9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements(from_json json, OUT value json)
 RETURNS SETOF json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="value" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_array_elements_text" id="Procedure_3259317" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_elements_text(from_json json, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_array_elements_text$function$
;]]></string>
			<comment><![CDATA[elements of json array]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="value" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="json_array_length" id="Procedure_100252d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_array_length(json)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_array_length$function$
;]]></string>
			<comment><![CDATA[length of json array]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="json_build_array" id="Procedure_3e6c57e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array()
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array_noargs$function$
;]]></string>
			<comment><![CDATA[build an empty json array]]></comment>
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_build_array" id="Procedure_65e8f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_array(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_array$function$
;]]></string>
			<comment><![CDATA[build a json array from any inputs]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_build_object" id="Procedure_1e3cd89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object()
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object_noargs$function$
;]]></string>
			<comment><![CDATA[build an empty json object]]></comment>
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_build_object" id="Procedure_3335437" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_build_object(VARIADIC "any")
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_build_object$function$
;]]></string>
			<comment><![CDATA[build a json object from pairwise key/value inputs]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_each" id="Procedure_267cffe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each(from_json json, OUT key text, OUT value json)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="key" jt="12" type="text" />
			<input_param name="value" jt="1111" type="json" />
		</procedure>
		<procedure name="json_each_text" id="Procedure_7f39ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_each_text(from_json json, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_each_text$function$
;]]></string>
			<comment><![CDATA[key value pairs of a json object]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="key" jt="12" type="text" />
			<input_param name="value" jt="12" type="text" />
		</procedure>
		<procedure name="json_extract_path" id="Procedure_4e1b2fc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path(from_json json, VARIADIC path_elems text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path$function$
;]]></string>
			<comment><![CDATA[get value from json with path elements]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="path_elems" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_extract_path_text" id="Procedure_8a609b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_extract_path_text(from_json json, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_extract_path_text$function$
;]]></string>
			<comment><![CDATA[get value from json as text with path elements]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="path_elems" jt="2003" type="_text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="json_in" id="Procedure_4438da9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_in(cstring)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_object" id="Procedure_402349d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object(text[], text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_two_arg$function$
;]]></string>
			<comment><![CDATA[map text arrays of keys and values to json object]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_object" id="Procedure_72391" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object(text[])
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to json object]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_object_agg_finalfn" id="Procedure_2c0fb6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_finalfn(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$json_object_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_object_agg_transfn" id="Procedure_37e3ea4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_object_agg_transfn$function$
;]]></string>
			<comment><![CDATA[json object aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<input_param name="$3" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="json_object_field" id="Procedure_4f2e8e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field(from_json json, field_name text)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="field_name" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_object_field_text" id="Procedure_23208ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_field_text(from_json json, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_object_field_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="field_name" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="json_object_keys" id="Procedure_42cf8a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_object_keys(json)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$json_object_keys$function$
;]]></string>
			<comment><![CDATA[get json object keys]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="json_out" id="Procedure_621a0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_out(json)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="json_populate_record" id="Procedure_308f27e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_record(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$json_populate_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a json object]]></comment>
			<input_param name="base" jt="1111" type="anyelement" />
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="use_json_as_text" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="json_populate_recordset" id="Procedure_47ece88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_populate_recordset(base anyelement, from_json json, use_json_as_text boolean DEFAULT false)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_populate_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a json array of objects]]></comment>
			<input_param name="base" jt="1111" type="anyelement" />
			<input_param name="from_json" jt="1111" type="json" />
			<input_param name="use_json_as_text" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="json_recv" id="Procedure_84eba8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_recv(internal)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_send" id="Procedure_437402c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_send(json)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="json_strip_nulls" id="Procedure_98e063" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_strip_nulls(json)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_strip_nulls$function$
;]]></string>
			<comment><![CDATA[remove object fields with null values from json]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="json_to_record" id="Procedure_1ec982d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_record(json)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$json_to_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a json object]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="json_to_recordset" id="Procedure_87f79b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_to_recordset(json)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$json_to_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a json array of objects]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="json_typeof" id="Procedure_560db0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.json_typeof(json)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$json_typeof$function$
;]]></string>
			<comment><![CDATA[get the type of a json value]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_agg_finalfn" id="Procedure_4485f87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[jsonb aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_agg_transfn" id="Procedure_5763a0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_agg_transfn(internal, anyelement)
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_agg_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="jsonb_array_element" id="Procedure_4c8af03" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element(from_json jsonb, element_index integer)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="element_index" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_array_element_text" id="Procedure_45a4b94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_element_text(from_json jsonb, element_index integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_element_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="element_index" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_array_elements" id="Procedure_a99d4b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements(from_json jsonb, OUT value jsonb)
 RETURNS SETOF jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements$function$
;]]></string>
			<comment><![CDATA[elements of a jsonb array]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="value" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_array_elements_text" id="Procedure_ced2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_elements_text(from_json jsonb, OUT value text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_array_elements_text$function$
;]]></string>
			<comment><![CDATA[elements of jsonb array]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="value" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_array_length" id="Procedure_4356575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_array_length(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_array_length$function$
;]]></string>
			<comment><![CDATA[length of jsonb array]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="jsonb_build_array" id="Procedure_354b4ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array()
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array_noargs$function$
;]]></string>
			<comment><![CDATA[build an empty jsonb array]]></comment>
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_build_array" id="Procedure_526842" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_array(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_array$function$
;]]></string>
			<comment><![CDATA[build a jsonb array from any inputs]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_build_object" id="Procedure_34e8fe3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object()
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object_noargs$function$
;]]></string>
			<comment><![CDATA[build an empty jsonb object]]></comment>
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_build_object" id="Procedure_32438ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_build_object(VARIADIC "any")
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_build_object$function$
;]]></string>
			<comment><![CDATA[build a jsonb object from pairwise key/value inputs]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_cmp" id="Procedure_2e605ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_cmp(jsonb, jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="jsonb_concat" id="Procedure_1256ced" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_concat(jsonb, jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_concat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_contained" id="Procedure_1248f7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contained(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_contains" id="Procedure_1a67cce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_contains(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_contains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_delete" id="Procedure_5ccbdbd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(from_json jsonb, VARIADIC path_elems text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_array$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="path_elems" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_delete" id="Procedure_3e9b478" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, integer)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_idx$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_delete" id="Procedure_4ed09c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete(jsonb, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_delete_path" id="Procedure_5c84843" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_delete_path(jsonb, text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_delete_path$function$
;]]></string>
			<comment><![CDATA[implementation of #- operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_each" id="Procedure_2542254" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each(from_json jsonb, OUT key text, OUT value jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each$function$
;]]></string>
			<comment><![CDATA[key value pairs of a jsonb object]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="key" jt="12" type="text" />
			<input_param name="value" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_each_text" id="Procedure_33dfd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_each_text(from_json jsonb, OUT key text, OUT value text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_each_text$function$
;]]></string>
			<comment><![CDATA[key value pairs of a jsonb object]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="key" jt="12" type="text" />
			<input_param name="value" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_eq" id="Procedure_3a0640f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_eq(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_exists" id="Procedure_4ba5591" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists(jsonb, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists$function$
;]]></string>
			<comment><![CDATA[implementation of ? operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_exists_all" id="Procedure_b089c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_all(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_all$function$
;]]></string>
			<comment><![CDATA[implementation of ?& operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_exists_any" id="Procedure_1c5a9a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_exists_any(jsonb, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_exists_any$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_extract_path" id="Procedure_3d5d1e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path(from_json jsonb, VARIADIC path_elems text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path$function$
;]]></string>
			<comment><![CDATA[get value from jsonb with path elements]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="path_elems" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_extract_path_text" id="Procedure_23bfb6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_extract_path_text(from_json jsonb, VARIADIC path_elems text[])
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_extract_path_text$function$
;]]></string>
			<comment><![CDATA[get value from jsonb as text with path elements]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="path_elems" jt="2003" type="_text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_ge" id="Procedure_4a45740" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ge(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_gt" id="Procedure_11f4f43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_gt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_hash" id="Procedure_445672d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_hash(jsonb)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="jsonb_in" id="Procedure_3d101ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_in(cstring)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_insert" id="Procedure_47840ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_insert(jsonb_in jsonb, path text[], replacement jsonb, insert_after boolean DEFAULT false)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_insert$function$
;]]></string>
			<comment><![CDATA[Insert value into a jsonb]]></comment>
			<input_param name="jsonb_in" jt="1111" type="jsonb" />
			<input_param name="path" jt="2003" type="_text" />
			<input_param name="replacement" jt="1111" type="jsonb" />
			<input_param name="insert_after" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_le" id="Procedure_1d601fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_le(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_lt" id="Procedure_9ef338" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_lt(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_ne" id="Procedure_4585437" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_ne(jsonb, jsonb)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="jsonb_object" id="Procedure_aef39f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[], text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_two_arg$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to jsonb object]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_object" id="Procedure_3fcc9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object(text[])
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object$function$
;]]></string>
			<comment><![CDATA[map text array of key value pairs to jsonb object]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_object_agg_finalfn" id="Procedure_5dc09cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_finalfn(internal)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_object_agg_transfn" id="Procedure_1d3afdd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_agg_transfn(internal, "any", "any")
 RETURNS internal
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_object_agg_transfn$function$
;]]></string>
			<comment><![CDATA[jsonb object aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<input_param name="$3" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="jsonb_object_field" id="Procedure_2d23354" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field(from_json jsonb, field_name text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field$function$
;]]></string>
			<comment><![CDATA[implementation of -> operator]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="field_name" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_object_field_text" id="Procedure_4f55e48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_field_text(from_json jsonb, field_name text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_object_field_text$function$
;]]></string>
			<comment><![CDATA[implementation of ->> operator]]></comment>
			<input_param name="from_json" jt="1111" type="jsonb" />
			<input_param name="field_name" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_object_keys" id="Procedure_4e7e841" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_object_keys(jsonb)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$jsonb_object_keys$function$
;]]></string>
			<comment><![CDATA[get jsonb object keys]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_out" id="Procedure_327100c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_out(jsonb)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="jsonb_populate_record" id="Procedure_2434f86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_record(anyelement, jsonb)
 RETURNS anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$jsonb_populate_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a jsonb object]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="jsonb_populate_recordset" id="Procedure_402d367" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_populate_recordset(anyelement, jsonb)
 RETURNS SETOF anyelement
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_populate_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a jsonb array of objects]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="jsonb_pretty" id="Procedure_424f116" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_pretty(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_pretty$function$
;]]></string>
			<comment><![CDATA[Indented text from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="jsonb_recv" id="Procedure_d3aed8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_recv(internal)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_send" id="Procedure_2e833da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_send(jsonb)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="jsonb_set" id="Procedure_1630d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_set(jsonb_in jsonb, path text[], replacement jsonb, create_if_missing boolean DEFAULT true)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_set$function$
;]]></string>
			<comment><![CDATA[Set part of a jsonb]]></comment>
			<input_param name="jsonb_in" jt="1111" type="jsonb" />
			<input_param name="path" jt="2003" type="_text" />
			<input_param name="replacement" jt="1111" type="jsonb" />
			<input_param name="create_if_missing" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_strip_nulls" id="Procedure_10b27c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_strip_nulls(jsonb)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_strip_nulls$function$
;]]></string>
			<comment><![CDATA[remove object fields with null values from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="jsonb_to_record" id="Procedure_1f98394" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_record(jsonb)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$jsonb_to_record$function$
;]]></string>
			<comment><![CDATA[get record fields from a jsonb object]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="jsonb_to_recordset" id="Procedure_aaf7ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_to_recordset(jsonb)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 100
AS $function$jsonb_to_recordset$function$
;]]></string>
			<comment><![CDATA[get set of records with fields from a jsonb array of objects]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="jsonb_typeof" id="Procedure_1c50111" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.jsonb_typeof(jsonb)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$jsonb_typeof$function$
;]]></string>
			<comment><![CDATA[get the type of a jsonb value]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="justify_days" id="Procedure_469edd8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_days(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_days$function$
;]]></string>
			<comment><![CDATA[promote groups of 30 days to numbers of months]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="justify_hours" id="Procedure_14b664c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_hours(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_hours$function$
;]]></string>
			<comment><![CDATA[promote groups of 24 hours to numbers of days]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="justify_interval" id="Procedure_2a8f575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.justify_interval(interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_justify_interval$function$
;]]></string>
			<comment><![CDATA[promote groups of 24 hours to numbers of days and promote groups of 30 days to numbers of months]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="koi8r_to_iso" id="Procedure_45e5100" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to ISO-8859-5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="koi8r_to_mic" id="Procedure_421c163" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="koi8r_to_utf8" id="Procedure_57ced65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8r_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="koi8r_to_win1251" id="Procedure_50516e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to WIN1251]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="koi8r_to_win866" id="Procedure_77776b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8r_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$koi8r_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8R to WIN866]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="koi8u_to_utf8" id="Procedure_12b0a0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.koi8u_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$koi8u_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for KOI8U to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="lag" id="Procedure_2cce665" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lag(anyelement, integer, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lag_with_offset_and_default$function$
;]]></string>
			<comment><![CDATA[fetch the Nth preceding row value with default]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lag" id="Procedure_c271cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lag(anyelement, integer)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lag_with_offset$function$
;]]></string>
			<comment><![CDATA[fetch the Nth preceding row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lag" id="Procedure_2e0499" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lag(anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lag$function$
;]]></string>
			<comment><![CDATA[fetch the preceding row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="language_handler_in" id="Procedure_2830003" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_in(cstring)
 RETURNS language_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$language_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="language_handler" />
		</procedure>
		<procedure name="language_handler_out" id="Procedure_528899a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.language_handler_out(language_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$language_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="language_handler" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="last_value" id="Procedure_9fe0c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.last_value(anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_last_value$function$
;]]></string>
			<comment><![CDATA[fetch the last row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lastval" id="Procedure_260d0dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lastval()
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$lastval$function$
;]]></string>
			<comment><![CDATA[current value from last used sequence]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="latin1_to_mic" id="Procedure_2274ade" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin1_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin1_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN1 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="latin2_to_mic" id="Procedure_536912f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN2 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="latin2_to_win1250" id="Procedure_369d016" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin2_to_win1250(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$latin2_to_win1250$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN2 to WIN1250]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="latin3_to_mic" id="Procedure_243f645" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin3_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin3_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN3 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="latin4_to_mic" id="Procedure_590dc16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.latin4_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$latin4_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for LATIN4 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="lead" id="Procedure_eb74ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lead(anyelement, integer, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lead_with_offset_and_default$function$
;]]></string>
			<comment><![CDATA[fetch the Nth following row value with default]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lead" id="Procedure_2959996" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lead(anyelement, integer)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lead_with_offset$function$
;]]></string>
			<comment><![CDATA[fetch the Nth following row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lead" id="Procedure_91ed47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lead(anyelement)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_lead$function$
;]]></string>
			<comment><![CDATA[fetch the following row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="left" id="Procedure_3d4ec2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."left"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_left$function$
;]]></string>
			<comment><![CDATA[extract the first n characters]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="length" id="Procedure_ed96b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(tsvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_length$function$
;]]></string>
			<comment><![CDATA[number of lexemes]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="length" id="Procedure_2030e5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="length" id="Procedure_3bd6137" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bytea, name)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$length_in_encoding$function$
;]]></string>
			<comment><![CDATA[length of string in specified encoding]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="length" id="Procedure_2a23b5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitlength$function$
;]]></string>
			<comment><![CDATA[bitstring length]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="length" id="Procedure_1290015" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_length$function$
;]]></string>
			<comment><![CDATA[sum of path segments]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="length" id="Procedure_5b5e354" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_length$function$
;]]></string>
			<comment><![CDATA[distance between endpoints]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="length" id="Procedure_444fb7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharlen$function$
;]]></string>
			<comment><![CDATA[character length]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="length" id="Procedure_2986f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="like" id="Procedure_15ad8ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytealike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="like" id="Procedure_6a4ae8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namelike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="like" id="Procedure_3d4d873" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."like"(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[matches LIKE expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="like_escape" id="Procedure_27e3065" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(bytea, bytea)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape_bytea$function$
;]]></string>
			<comment><![CDATA[convert LIKE pattern to use backslash escapes]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="like_escape" id="Procedure_5a9720d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.like_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$like_escape$function$
;]]></string>
			<comment><![CDATA[convert LIKE pattern to use backslash escapes]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="likejoinsel" id="Procedure_27ab8a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of LIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="likesel" id="Procedure_323eef0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.likesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$likesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of LIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="line" id="Procedure_1653b6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line(point, point)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_construct_pp$function$
;]]></string>
			<comment><![CDATA[construct line from points]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="line" />
		</procedure>
		<procedure name="line_distance" id="Procedure_2d9dbc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_distance(line, line)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="line_eq" id="Procedure_440815f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_eq(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="line_horizontal" id="Procedure_13c7910" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_horizontal(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_horizontal$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="line_in" id="Procedure_5c3cc87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_in(cstring)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="line" />
		</procedure>
		<procedure name="line_interpt" id="Procedure_2d2d3f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_interpt(line, line)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_interpt$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="line_intersect" id="Procedure_56417f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_intersect(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="line_out" id="Procedure_5b19f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_out(line)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="line_parallel" id="Procedure_1be14aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_parallel(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_parallel$function$
;]]></string>
			<comment><![CDATA[implementation of ?|| operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="line_perp" id="Procedure_4b4a286" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_perp(line, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_perp$function$
;]]></string>
			<comment><![CDATA[implementation of ?-| operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="line_recv" id="Procedure_9b243b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_recv(internal)
 RETURNS line
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="line" />
		</procedure>
		<procedure name="line_send" id="Procedure_34e71d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_send(line)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="line_vertical" id="Procedure_41d0e1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.line_vertical(line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$line_vertical$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
			<input_param name="$1" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ln" id="Procedure_28a5712" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ln$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="ln" id="Procedure_1185482" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ln(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog1$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="lo_close" id="Procedure_58af700" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_close(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_close$function$
;]]></string>
			<comment><![CDATA[large object close]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_creat" id="Procedure_4553ab7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_creat(integer)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_creat$function$
;]]></string>
			<comment><![CDATA[large object create]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="lo_create" id="Procedure_5f2ee43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_create(oid)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_create$function$
;]]></string>
			<comment><![CDATA[large object create]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="lo_export" id="Procedure_2947efc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_export(oid, text)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_export$function$
;]]></string>
			<comment><![CDATA[large object export]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_from_bytea" id="Procedure_333d2b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_from_bytea(oid, bytea)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_from_bytea$function$
;]]></string>
			<comment><![CDATA[create new large object with given content]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="lo_get" id="Procedure_a048b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid, bigint, integer)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get_fragment$function$
;]]></string>
			<comment><![CDATA[read large object from offset for length]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="lo_get" id="Procedure_bd3f91" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_get(oid)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_lo_get$function$
;]]></string>
			<comment><![CDATA[read entire large object]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="lo_import" id="Procedure_4213e8a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text, oid)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import_with_oid$function$
;]]></string>
			<comment><![CDATA[large object import]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="lo_import" id="Procedure_410515b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_import(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$be_lo_import$function$
;]]></string>
			<comment><![CDATA[large object import]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="lo_lseek" id="Procedure_4c7d74f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek(integer, integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek$function$
;]]></string>
			<comment><![CDATA[large object seek]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_lseek64" id="Procedure_5d3a1f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_lseek64(integer, bigint, integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_lseek64$function$
;]]></string>
			<comment><![CDATA[large object seek (64 bit)]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="lo_open" id="Procedure_383688c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_open(oid, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_open$function$
;]]></string>
			<comment><![CDATA[large object open]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_put" id="Procedure_47e0fc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_put(oid, bigint, bytea)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$be_lo_put$function$
;]]></string>
			<comment><![CDATA[write data at offset]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="lo_tell" id="Procedure_1c7324" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell(integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell$function$
;]]></string>
			<comment><![CDATA[large object position]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_tell64" id="Procedure_19695ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_tell64(integer)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$be_lo_tell64$function$
;]]></string>
			<comment><![CDATA[large object position (64 bit)]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="lo_truncate" id="Procedure_1c03fb4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate(integer, integer)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate$function$
;]]></string>
			<comment><![CDATA[truncate large object]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_truncate64" id="Procedure_571ae4a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_truncate64(integer, bigint)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_truncate64$function$
;]]></string>
			<comment><![CDATA[truncate large object (64 bit)]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lo_unlink" id="Procedure_439f178" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lo_unlink(oid)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lo_unlink$function$
;]]></string>
			<comment><![CDATA[large object unlink (delete)]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="log" id="Procedure_187a02a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.log(10, $1)$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="log" id="Procedure_56095f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_log$function$
;]]></string>
			<comment><![CDATA[logarithm base m of n]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="log" id="Procedure_5308c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.log(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dlog10$function$
;]]></string>
			<comment><![CDATA[base 10 logarithm]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="loread" id="Procedure_3f6c2ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.loread(integer, integer)
 RETURNS bytea
 LANGUAGE internal
 STRICT
AS $function$be_loread$function$
;]]></string>
			<comment><![CDATA[large object read]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="lower" id="Procedure_ee0ae7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lower$function$
;]]></string>
			<comment><![CDATA[lowercase]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="lower" id="Procedure_3161dce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower$function$
;]]></string>
			<comment><![CDATA[lower bound of range]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="lower_inc" id="Procedure_59d5460" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inc$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound inclusive?]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lower_inf" id="Procedure_17151ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lower_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lower_inf$function$
;]]></string>
			<comment><![CDATA[is the range's lower bound infinite?]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lowrite" id="Procedure_6f9414" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lowrite(integer, bytea)
 RETURNS integer
 LANGUAGE internal
 STRICT
AS $function$be_lowrite$function$
;]]></string>
			<comment><![CDATA[large object write]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="lpad" id="Procedure_5e7ad3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.lpad($1, $2, ' ')$function$
;]]></string>
			<comment><![CDATA[left-pad string to length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="lpad" id="Procedure_170ec43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lpad$function$
;]]></string>
			<comment><![CDATA[left-pad string to length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="lseg" id="Procedure_140ccb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(point, point)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_construct$function$
;]]></string>
			<comment><![CDATA[convert points to line segment]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="lseg" />
		</procedure>
		<procedure name="lseg" id="Procedure_5335284" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg(box)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_diagonal$function$
;]]></string>
			<comment><![CDATA[diagonal of]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="lseg" />
		</procedure>
		<procedure name="lseg_center" id="Procedure_13ac425" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_center(lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="lseg_distance" id="Procedure_534d1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_distance(lseg, lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="lseg_eq" id="Procedure_4a6c5cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_eq(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_ge" id="Procedure_ba9792" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ge(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_gt" id="Procedure_1257d8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_gt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_horizontal" id="Procedure_4337f36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_horizontal(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_horizontal$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_in" id="Procedure_59db93e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_in(cstring)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="lseg" />
		</procedure>
		<procedure name="lseg_interpt" id="Procedure_58b52c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_interpt(lseg, lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_interpt$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="lseg_intersect" id="Procedure_2fcea0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_intersect(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_le" id="Procedure_16f085d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_le(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_length" id="Procedure_3199034" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_length(lseg)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_length$function$
;]]></string>
			<comment><![CDATA[implementation of @-@ operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="lseg_lt" id="Procedure_4965f8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_lt(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_ne" id="Procedure_1d917f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_ne(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$lseg_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_out" id="Procedure_4785bb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_out(lseg)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="lseg_parallel" id="Procedure_43236f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_parallel(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_parallel$function$
;]]></string>
			<comment><![CDATA[implementation of ?|| operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_perp" id="Procedure_18c4b75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_perp(lseg, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_perp$function$
;]]></string>
			<comment><![CDATA[implementation of ?-| operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="lseg_recv" id="Procedure_44ee69e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_recv(internal)
 RETURNS lseg
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="lseg" />
		</procedure>
		<procedure name="lseg_send" id="Procedure_109e242" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_send(lseg)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="lseg_vertical" id="Procedure_dd0721" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.lseg_vertical(lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_vertical$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ltrim" id="Procedure_44ce3ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ltrim1$function$
;]]></string>
			<comment><![CDATA[trim spaces from left end of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="ltrim" id="Procedure_562b41f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ltrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ltrim$function$
;]]></string>
			<comment><![CDATA[trim selected characters from left end of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="macaddr" id="Procedure_282a9f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr(macaddr8)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8tomacaddr$function$
;]]></string>
			<comment><![CDATA[convert macaddr8 to macaddr]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr8" id="Procedure_58e907b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8(macaddr)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddrtomacaddr8$function$
;]]></string>
			<comment><![CDATA[convert macaddr to macaddr8]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_and" id="Procedure_4afa4de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_and(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_cmp" id="Procedure_2f1b1ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_cmp(macaddr8, macaddr8)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="macaddr8_eq" id="Procedure_edcf8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_eq(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_ge" id="Procedure_2423589" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ge(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_gt" id="Procedure_326b0ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_gt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_in" id="Procedure_35e6bb1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_in(cstring)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_le" id="Procedure_4807cd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_le(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_lt" id="Procedure_438cac6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_lt(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_ne" id="Procedure_4f79e98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_ne(macaddr8, macaddr8)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr8_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr8_not" id="Procedure_cd5be2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_not(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_or" id="Procedure_54f0c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_or(macaddr8, macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<input_param name="$2" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_out" id="Procedure_ab8895" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_out(macaddr8)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="macaddr8_recv" id="Procedure_ad1b45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_recv(internal)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr8_send" id="Procedure_2e94f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_send(macaddr8)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="macaddr8_set7bit" id="Procedure_59ff296" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr8_set7bit(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_set7bit$function$
;]]></string>
			<comment><![CDATA[set 7th bit in macaddr8]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="macaddr_and" id="Procedure_33e6c54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_and(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_and$function$
;]]></string>
			<comment><![CDATA[implementation of & operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr_cmp" id="Procedure_3cc0fff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_cmp(macaddr, macaddr)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="macaddr_eq" id="Procedure_460d403" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_eq(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_ge" id="Procedure_343f33a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ge(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_gt" id="Procedure_3e858f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_gt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_in" id="Procedure_2024506" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_in(cstring)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr_le" id="Procedure_5f21732" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_le(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_lt" id="Procedure_497b0e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_lt(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_ne" id="Procedure_200ed78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_ne(macaddr, macaddr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$macaddr_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="macaddr_not" id="Procedure_59705e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_not(macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_not$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr_or" id="Procedure_4040103" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_or(macaddr, macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_or$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<input_param name="$2" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr_out" id="Procedure_100cd73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_out(macaddr)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="macaddr_recv" id="Procedure_110c96" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_recv(internal)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="macaddr_send" id="Procedure_1fcbdab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_send(macaddr)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="macaddr_sortsupport" id="Procedure_32b9d9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.macaddr_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="make_date" id="Procedure_463e51c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_date(year integer, month integer, day integer)
 RETURNS date
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_date$function$
;]]></string>
			<comment><![CDATA[construct date]]></comment>
			<input_param name="year" jt="4" type="int4" />
			<input_param name="month" jt="4" type="int4" />
			<input_param name="day" jt="4" type="int4" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="make_interval" id="Procedure_2c12bc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_interval(years integer DEFAULT 0, months integer DEFAULT 0, weeks integer DEFAULT 0, days integer DEFAULT 0, hours integer DEFAULT 0, mins integer DEFAULT 0, secs double precision DEFAULT 0.0)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_interval$function$
;]]></string>
			<comment><![CDATA[construct interval]]></comment>
			<input_param name="years" jt="4" type="int4" />
			<input_param name="months" jt="4" type="int4" />
			<input_param name="weeks" jt="4" type="int4" />
			<input_param name="days" jt="4" type="int4" />
			<input_param name="hours" jt="4" type="int4" />
			<input_param name="mins" jt="4" type="int4" />
			<input_param name="secs" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="make_time" id="Procedure_145bcd5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_time(hour integer, min integer, sec double precision)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_time$function$
;]]></string>
			<comment><![CDATA[construct time]]></comment>
			<input_param name="hour" jt="4" type="int4" />
			<input_param name="min" jt="4" type="int4" />
			<input_param name="sec" jt="8" type="float8" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="make_timestamp" id="Procedure_5c4dbaa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamp(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$make_timestamp$function$
;]]></string>
			<comment><![CDATA[construct timestamp]]></comment>
			<input_param name="year" jt="4" type="int4" />
			<input_param name="month" jt="4" type="int4" />
			<input_param name="mday" jt="4" type="int4" />
			<input_param name="hour" jt="4" type="int4" />
			<input_param name="min" jt="4" type="int4" />
			<input_param name="sec" jt="8" type="float8" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="make_timestamptz" id="Procedure_30e7a54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision, timezone text)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz_at_timezone$function$
;]]></string>
			<comment><![CDATA[construct timestamp with time zone]]></comment>
			<input_param name="year" jt="4" type="int4" />
			<input_param name="month" jt="4" type="int4" />
			<input_param name="mday" jt="4" type="int4" />
			<input_param name="hour" jt="4" type="int4" />
			<input_param name="min" jt="4" type="int4" />
			<input_param name="sec" jt="8" type="float8" />
			<input_param name="timezone" jt="12" type="text" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="make_timestamptz" id="Procedure_5da7044" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.make_timestamptz(year integer, month integer, mday integer, hour integer, min integer, sec double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$make_timestamptz$function$
;]]></string>
			<comment><![CDATA[construct timestamp with time zone]]></comment>
			<input_param name="year" jt="4" type="int4" />
			<input_param name="month" jt="4" type="int4" />
			<input_param name="mday" jt="4" type="int4" />
			<input_param name="hour" jt="4" type="int4" />
			<input_param name="min" jt="4" type="int4" />
			<input_param name="sec" jt="8" type="float8" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="makeaclitem" id="Procedure_4a6925c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.makeaclitem(oid, oid, text, boolean)
 RETURNS aclitem
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$makeaclitem$function$
;]]></string>
			<comment><![CDATA[make ACL item]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="aclitem" />
		</procedure>
		<procedure name="masklen" id="Procedure_467adb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.masklen(inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_masklen$function$
;]]></string>
			<comment><![CDATA[netmask length]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="md5" id="Procedure_3fd7ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(bytea)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$md5_bytea$function$
;]]></string>
			<comment><![CDATA[MD5 hash]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="md5" id="Procedure_2150c77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.md5(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$md5_text$function$
;]]></string>
			<comment><![CDATA[MD5 hash]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="mic_to_ascii" id="Procedure_27e9ddf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_ascii(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/ascii_and_mic', $function$mic_to_ascii$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to SQL_ASCII]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_big5" id="Procedure_871cfb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to BIG5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_euc_cn" id="Procedure_3c297ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_cn(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_cn_and_mic', $function$mic_to_euc_cn$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_CN]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_euc_jp" id="Procedure_d453b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_JP]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_euc_kr" id="Procedure_4438005" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_kr(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_kr_and_mic', $function$mic_to_euc_kr$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_KR]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_euc_tw" id="Procedure_2040ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_tw_and_big5', $function$mic_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to EUC_TW]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_iso" id="Procedure_1aff965" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to ISO-8859-5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_koi8r" id="Procedure_35b3448" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to KOI8R]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_latin1" id="Procedure_2db7bfc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin1(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin1$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN1]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_latin2" id="Procedure_3319954" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin2(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_latin2$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN2]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_latin3" id="Procedure_5149dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin3(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin3$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN3]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_latin4" id="Procedure_24bf2c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_latin4(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin_and_mic', $function$mic_to_latin4$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to LATIN4]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_sjis" id="Procedure_3950a42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$mic_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to SJIS]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_win1250" id="Procedure_11444df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1250(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$mic_to_win1250$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN1250]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_win1251" id="Procedure_2e74e9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN1251]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mic_to_win866" id="Procedure_3bfe367" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mic_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$mic_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for MULE_INTERNAL to WIN866]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="mktinterval" id="Procedure_38952c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mktinterval(abstime, abstime)
 RETURNS tinterval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$mktinterval$function$
;]]></string>
			<comment><![CDATA[implementation of <#> operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="1111" type="tinterval" />
		</procedure>
		<procedure name="mod" id="Procedure_5cf05c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(bigint, bigint)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="mod" id="Procedure_480af15" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(integer, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="mod" id="Procedure_1921d11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(smallint, smallint)
 RETURNS smallint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<input_param name="$2" jt="5" type="int2" />
			<result_param name="returnValue" jt="5" type="int2" />
		</procedure>
		<procedure name="mod" id="Procedure_38f9ba3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[modulus]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="mode_final" id="Procedure_456229a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mode_final(internal, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$mode_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="money" id="Procedure_1b936ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(numeric)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_cash$function$
;]]></string>
			<comment><![CDATA[convert numeric to money]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="money" id="Procedure_3c1d6b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(bigint)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int8_cash$function$
;]]></string>
			<comment><![CDATA[convert int8 to money]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="money" id="Procedure_3361b75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.money(integer)
 RETURNS money
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_cash$function$
;]]></string>
			<comment><![CDATA[convert int4 to money]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="money" />
		</procedure>
		<procedure name="mul_d_interval" id="Procedure_5c2b297" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mul_d_interval(double precision, interval)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$mul_d_interval$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="mxid_age" id="Procedure_595a501" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.mxid_age(xid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$mxid_age$function$
;]]></string>
			<comment><![CDATA[age of a multi-transaction ID, in multi-transactions before current multi-transaction]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="name" id="Procedure_2c2adab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpchar_name$function$
;]]></string>
			<comment><![CDATA[convert char(n) to name]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="name" id="Procedure_27ffe22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(text)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_name$function$
;]]></string>
			<comment><![CDATA[convert text to name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="name" id="Procedure_49cce92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.name(character varying)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_name$function$
;]]></string>
			<comment><![CDATA[convert varchar to name]]></comment>
			<input_param name="$1" jt="12" type="varchar" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="nameeq" id="Procedure_5ebd651" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameeq(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$nameeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namege" id="Procedure_1d61704" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namege(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namege$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namegt" id="Procedure_10e49ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namegt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namegt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameiclike" id="Procedure_3c687f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameiclike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameiclike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameicnlike" id="Procedure_39d05cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicnlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameicregexeq" id="Procedure_41a9891" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameicregexne" id="Procedure_3823de0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameicregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameicregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namein" id="Procedure_32ec844" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namein(cstring)
 RETURNS name
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="namele" id="Procedure_1afb37e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namele(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namele$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namelike" id="Procedure_342861e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namelike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namelt" id="Procedure_5c8d04b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namelt(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namelt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namene" id="Procedure_e77d2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namene(name, name)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$namene$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namenlike" id="Procedure_2e0fdde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namenlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namenlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameout" id="Procedure_ecc8d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameout(name)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="namerecv" id="Procedure_5f3cb0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namerecv(internal)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="nameregexeq" id="Procedure_104f6f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexeq(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="nameregexne" id="Procedure_4d05744" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nameregexne(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$nameregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="namesend" id="Procedure_24f3fb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.namesend(name)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$namesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="neqjoinsel" id="Procedure_1e85dcf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of <> and related operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="neqsel" id="Procedure_439fd81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.neqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$neqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of <> and related operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="netmask" id="Procedure_17391a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.netmask(inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_netmask$function$
;]]></string>
			<comment><![CDATA[netmask of address]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="network" id="Procedure_42a440b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network(inet)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_network$function$
;]]></string>
			<comment><![CDATA[network part of address]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="network_cmp" id="Procedure_7ff66e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_cmp(inet, inet)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="network_eq" id="Procedure_5478a12" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_eq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_ge" id="Procedure_3d7f1a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ge(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_gt" id="Procedure_4a5f450" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_gt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_larger" id="Procedure_d63689" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_larger(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="network_le" id="Procedure_1801497" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_le(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_lt" id="Procedure_3da343a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_lt(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_ne" id="Procedure_5ca3690" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_ne(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$network_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_overlap" id="Procedure_34d8ed6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_overlap(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_smaller" id="Procedure_390052" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_smaller(inet, inet)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="network_sub" id="Procedure_16e8b35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sub(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_sub$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_subeq" id="Procedure_156651c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_subeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_subeq$function$
;]]></string>
			<comment><![CDATA[implementation of <<= operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_sup" id="Procedure_3071d57" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_sup(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_sup$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="network_supeq" id="Procedure_5632922" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.network_supeq(inet, inet)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_supeq$function$
;]]></string>
			<comment><![CDATA[implementation of >>= operator]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="1111" type="inet" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="networkjoinsel" id="Procedure_1eab88d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networkjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networkjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for network operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="networksel" id="Procedure_24208be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.networksel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$networksel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for network operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="nextval" id="Procedure_3ccbafe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nextval(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$nextval_oid$function$
;]]></string>
			<comment><![CDATA[sequence next value]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="nlikejoinsel" id="Procedure_243467b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of NOT LIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="nlikesel" id="Procedure_3a0995d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nlikesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$nlikesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of NOT LIKE]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="notlike" id="Procedure_2aaa4ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(bytea, bytea)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteanlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="notlike" id="Procedure_1f478e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(name, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$namenlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="notlike" id="Procedure_4c3d7c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.notlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[does not match LIKE expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="now" id="Procedure_2d97830" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.now()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$now$function$
;]]></string>
			<comment><![CDATA[current transaction time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="npoints" id="Procedure_329c079" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(polygon)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_npoints$function$
;]]></string>
			<comment><![CDATA[number of points]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="npoints" id="Procedure_5b226b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<comment><![CDATA[number of points]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="nth_value" id="Procedure_4d3d00e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.nth_value(anyelement, integer)
 RETURNS anyelement
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_nth_value$function$
;]]></string>
			<comment><![CDATA[fetch the Nth row value]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="ntile" id="Procedure_2852b18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ntile(integer)
 RETURNS integer
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE STRICT
AS $function$window_ntile$function$
;]]></string>
			<comment><![CDATA[split rows into N groups]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="num_nonnulls" id="Procedure_226969a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nonnulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nonnulls$function$
;]]></string>
			<comment><![CDATA[count the number of non-NULL arguments]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="num_nulls" id="Procedure_140f3ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.num_nulls(VARIADIC "any")
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$pg_num_nulls$function$
;]]></string>
			<comment><![CDATA[count the number of NULL arguments]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="numeric" id="Procedure_5a78069" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(money)
 RETURNS numeric
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$cash_numeric$function$
;]]></string>
			<comment><![CDATA[convert money to numeric]]></comment>
			<input_param name="$1" jt="8" type="money" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_3b258c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(smallint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int2_numeric$function$
;]]></string>
			<comment><![CDATA[convert int2 to numeric]]></comment>
			<input_param name="$1" jt="5" type="int2" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_4b9e071" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int8_numeric$function$
;]]></string>
			<comment><![CDATA[convert int8 to numeric]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_3b7e440" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(double precision)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_numeric$function$
;]]></string>
			<comment><![CDATA[convert float8 to numeric]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_25f5cf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(real)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float4_numeric$function$
;]]></string>
			<comment><![CDATA[convert float4 to numeric]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_2fc431" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$int4_numeric$function$
;]]></string>
			<comment><![CDATA[convert int4 to numeric]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric" id="Procedure_13e2619" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."numeric"(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric$function$
;]]></string>
			<comment><![CDATA[adjust numeric to typmod precision/scale]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_abs" id="Procedure_178914a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_abs(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_abs$function$
;]]></string>
			<comment><![CDATA[implementation of @ operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_accum" id="Procedure_5a8ae73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_accum_inv" id="Procedure_568b19a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_accum_inv(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_accum_inv$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_add" id="Procedure_27a42e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_add(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_avg" id="Procedure_1e12994" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_avg_accum" id="Procedure_116011b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_accum(internal, numeric)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_accum$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_avg_combine" id="Procedure_26920cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_avg_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_avg_deserialize" id="Procedure_416c3a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_avg_serialize" id="Procedure_3c1d35d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_avg_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_avg_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="numeric_cmp" id="Procedure_3a6ac26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_cmp(numeric, numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="numeric_combine" id="Procedure_3230078" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_deserialize" id="Procedure_4d62e9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_div" id="Procedure_2e1e618" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_div_trunc" id="Procedure_2743189" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_div_trunc(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_div_trunc$function$
;]]></string>
			<comment><![CDATA[trunc(x/y)]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_eq" id="Procedure_49b7310" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_eq(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_exp" id="Procedure_43499a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_exp(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_exp$function$
;]]></string>
			<comment><![CDATA[natural exponential (e^x)]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_fac" id="Procedure_1d6a21c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_fac(bigint)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_fac$function$
;]]></string>
			<comment><![CDATA[implementation of ! operator]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_ge" id="Procedure_172239" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ge(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_gt" id="Procedure_446088a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_gt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_in" id="Procedure_5aa78a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_in(cstring, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_inc" id="Procedure_58e0e4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_inc(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_inc$function$
;]]></string>
			<comment><![CDATA[increment by one]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_larger" id="Procedure_1ab694c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_larger(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_le" id="Procedure_5a66683" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_le(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_ln" id="Procedure_54b54ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ln(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ln$function$
;]]></string>
			<comment><![CDATA[natural logarithm]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_log" id="Procedure_a9bdee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_log(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_log$function$
;]]></string>
			<comment><![CDATA[logarithm base m of n]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_lt" id="Procedure_5045d8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_lt(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_mod" id="Procedure_3689106" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mod(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mod$function$
;]]></string>
			<comment><![CDATA[implementation of % operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_mul" id="Procedure_325f019" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_mul(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_ne" id="Procedure_239a5fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_ne(numeric, numeric)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="numeric_out" id="Procedure_4c5f152" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_out(numeric)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="numeric_poly_avg" id="Procedure_206c734" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_avg(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_avg$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_poly_combine" id="Procedure_2ae7581" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_combine(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_combine$function$
;]]></string>
			<comment><![CDATA[aggregate combine function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_poly_deserialize" id="Procedure_4714fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_deserialize(bytea, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_deserialize$function$
;]]></string>
			<comment><![CDATA[aggregate deserial function]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_poly_serialize" id="Procedure_32bad79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_poly_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="numeric_poly_stddev_pop" id="Procedure_5e6ad01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_poly_stddev_samp" id="Procedure_4bec171" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_poly_sum" id="Procedure_497f21f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_poly_var_pop" id="Procedure_501911b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_poly_var_samp" id="Procedure_581d1cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_poly_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_poly_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_power" id="Procedure_3f0422d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_power(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<comment><![CDATA[implementation of ^ operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_recv" id="Procedure_4305cb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_recv(internal, oid, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_send" id="Procedure_56f9b9a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_send(numeric)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="numeric_serialize" id="Procedure_576fe6a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_serialize(internal)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_serialize$function$
;]]></string>
			<comment><![CDATA[aggregate serial function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="numeric_smaller" id="Procedure_3ed6344" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_smaller(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_sortsupport" id="Procedure_98b05a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="numeric_sqrt" id="Procedure_311c7b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sqrt(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_stddev_pop" id="Procedure_ec044b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_stddev_samp" id="Procedure_163aae3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_stddev_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_stddev_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_sub" id="Procedure_5aaf7cc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sub(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_sum" id="Procedure_3f947f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_sum(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_sum$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_transform" id="Procedure_32afcab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_transform$function$
;]]></string>
			<comment><![CDATA[transform a numeric length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="numeric_uminus" id="Procedure_1c86667" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uminus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uminus$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_uplus" id="Procedure_514db14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_uplus(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_uplus$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_var_pop" id="Procedure_3714384" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_pop(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_pop$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numeric_var_samp" id="Procedure_4c9086f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numeric_var_samp(internal)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$numeric_var_samp$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="numerictypmodin" id="Procedure_f698d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="numerictypmodout" id="Procedure_24fb88d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numerictypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numerictypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="numnode" id="Procedure_89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numnode(tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_numnode$function$
;]]></string>
			<comment><![CDATA[number of nodes]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="numrange" id="Procedure_1718651" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric, text)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[numrange constructor]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="numrange" id="Procedure_54a7a61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange(numeric, numeric)
 RETURNS numrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[numrange constructor]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
		</procedure>
		<procedure name="numrange_subdiff" id="Procedure_5035cbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.numrange_subdiff(numeric, numeric)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two numeric values]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="obj_description" id="Procedure_204f427" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and objsubid = 0$function$
;]]></string>
			<comment><![CDATA[deprecated, use two-argument form instead]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="obj_description" id="Procedure_17f9263" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.obj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_description where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11) and objsubid = 0$function$
;]]></string>
			<comment><![CDATA[get description for object id and catalog name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="octet_length" id="Procedure_488c8c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="octet_length" id="Procedure_7d3608" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoctetlength$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="octet_length" id="Procedure_14259ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(character)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bpcharoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="octet_length" id="Procedure_507b18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.octet_length(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoctetlen$function$
;]]></string>
			<comment><![CDATA[octet length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="oid" id="Procedure_1fdeb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oid(bigint)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$i8tooid$function$
;]]></string>
			<comment><![CDATA[convert int8 to oid]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="oideq" id="Procedure_c56fe6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oideq(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidge" id="Procedure_17cff66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidge(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidgt" id="Procedure_46f22dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidgt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidin" id="Procedure_15a7c76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidin(cstring)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="oidlarger" id="Procedure_2cb82f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlarger(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="oidle" id="Procedure_c5fafd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidle(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidlt" id="Procedure_43438a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidlt(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidne" id="Procedure_510a3a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidne(oid, oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$oidne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidout" id="Procedure_e2e80e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidout(oid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="oidrecv" id="Procedure_5a01b59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidrecv(internal)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="oidsend" id="Procedure_53bf3ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsend(oid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="oidsmaller" id="Procedure_c72d45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidsmaller(oid, oid)
 RETURNS oid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="oidvectoreq" id="Procedure_5329103" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectoreq(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectoreq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorge" id="Procedure_14e18d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorge(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorgt" id="Procedure_37118ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorgt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorin" id="Procedure_5c721d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorin(cstring)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="oidvector" />
		</procedure>
		<procedure name="oidvectorle" id="Procedure_1e69482" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorle(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorlt" id="Procedure_5661406" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorlt(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorne" id="Procedure_4aa1391" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorne(oidvector, oidvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<input_param name="$2" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="oidvectorout" id="Procedure_500d66e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorout(oidvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="oidvectorrecv" id="Procedure_3ab438c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorrecv(internal)
 RETURNS oidvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="oidvector" />
		</procedure>
		<procedure name="oidvectorsend" id="Procedure_10c6bb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectorsend(oidvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$oidvectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="oidvectortypes" id="Procedure_2602dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.oidvectortypes(oidvector)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$oidvectortypes$function$
;]]></string>
			<comment><![CDATA[print type names of oidvector field]]></comment>
			<input_param name="$1" jt="1111" type="oidvector" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="on_pb" id="Procedure_366e0c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pb(point, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pb$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="on_pl" id="Procedure_46a0980" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_pl(point, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_pl$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="on_ppath" id="Procedure_1c6957c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ppath(point, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ppath$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="on_ps" id="Procedure_341245a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_ps(point, lseg)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_ps$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="on_sb" id="Procedure_4236f29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sb(lseg, box)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sb$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="box" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="on_sl" id="Procedure_557f569" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.on_sl(lseg, line)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$on_sl$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<input_param name="$2" jt="1111" type="line" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="opaque_in" id="Procedure_dddda2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.opaque_in(cstring)
 RETURNS opaque
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$opaque_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="opaque" />
		</procedure>
		<procedure name="opaque_out" id="Procedure_42c0ea9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.opaque_out(opaque)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$opaque_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="opaque" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="ordered_set_transition" id="Procedure_2be379b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition(internal, "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="ordered_set_transition_multi" id="Procedure_49de186" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ordered_set_transition_multi(internal, VARIADIC "any")
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$ordered_set_transition_multi$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
		</procedure>
		<procedure name="overlaps" id="Procedure_2d00951" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, interval, timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="93" type="timestamp" />
			<input_param name="$4" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_3d344e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, timestamp without time zone, timestamp without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<input_param name="$3" jt="93" type="timestamp" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_48dcad7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, interval, timestamp without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="93" type="timestamp" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_4048d90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp without time zone, timestamp without time zone, timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timestamp$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<input_param name="$3" jt="93" type="timestamp" />
			<input_param name="$4" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_1995c20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, interval, time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="92" type="time" />
			<input_param name="$4" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_36cf1a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, time without time zone, time without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<input_param name="$3" jt="92" type="time" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_536745e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, interval, time without time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="92" type="time" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_12e1f42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time without time zone, time without time zone, time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_time$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<input_param name="$3" jt="92" type="time" />
			<input_param name="$4" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_412c9e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, interval, timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, $4)$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="93" type="timestamptz" />
			<input_param name="$4" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_6c2c94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, timestamp with time zone, timestamp with time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, $2) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<input_param name="$3" jt="93" type="timestamptz" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_21362c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, interval, timestamp with time zone, interval)
 RETURNS boolean
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select ($1, ($1 + $2)) overlaps ($3, ($3 + $4))$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="1111" type="interval" />
			<input_param name="$3" jt="93" type="timestamptz" />
			<input_param name="$4" jt="1111" type="interval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_3aa20dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(timestamp with time zone, timestamp with time zone, timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timestamp$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<input_param name="$3" jt="93" type="timestamptz" />
			<input_param name="$4" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlaps" id="Procedure_4f4fc1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlaps"(time with time zone, time with time zone, time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$overlaps_timetz$function$
;]]></string>
			<comment><![CDATA[intervals overlap?]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<input_param name="$3" jt="92" type="timetz" />
			<input_param name="$4" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="overlay" id="Procedure_5a37186" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bytea, bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoverlay_no_len$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="overlay" id="Procedure_2dc42ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bytea, bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<input_param name="$3" jt="4" type="int4" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="overlay" id="Procedure_414d0df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bit, bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoverlay_no_len$function$
;]]></string>
			<comment><![CDATA[substitute portion of bitstring]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="overlay" id="Procedure_54fd812" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(bit, bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of bitstring]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<input_param name="$3" jt="4" type="int4" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="overlay" id="Procedure_a305db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay_no_len$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="overlay" id="Procedure_5d1e7b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."overlay"(text, text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textoverlay$function$
;]]></string>
			<comment><![CDATA[substitute portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="4" type="int4" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="parse_ident" id="Procedure_3182202" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.parse_ident(str text, strict boolean DEFAULT true)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$parse_ident$function$
;]]></string>
			<comment><![CDATA[parse qualified identifier to array of identifiers]]></comment>
			<input_param name="str" jt="12" type="text" />
			<input_param name="strict" jt="-7" type="bool" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="path" id="Procedure_52aea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path(polygon)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_path$function$
;]]></string>
			<comment><![CDATA[convert polygon to path]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_add" id="Procedure_483b020" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add(path, path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_add_pt" id="Procedure_5159907" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_add_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_add_pt$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_center" id="Procedure_43b4841" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_center(path)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="path_contain_pt" id="Procedure_5d1ece6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_contain_pt(path, point)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.on_ppath($2, $1)$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_distance" id="Procedure_19dd010" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_distance(path, path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="path_div_pt" id="Procedure_2a1a5c5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_div_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_div_pt$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_in" id="Procedure_17327f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_in(cstring)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_inter" id="Procedure_4f72140" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_inter(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_inter$function$
;]]></string>
			<comment><![CDATA[implementation of ?# operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_length" id="Procedure_100fb26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_length(path)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_length$function$
;]]></string>
			<comment><![CDATA[implementation of @-@ operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="path_mul_pt" id="Procedure_29e72e2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_mul_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_mul_pt$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_n_eq" id="Procedure_33ff88f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_eq(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_n_ge" id="Procedure_1e8d4ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_ge(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_n_gt" id="Procedure_3d0b25a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_gt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_n_le" id="Procedure_558b8b8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_le(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_n_lt" id="Procedure_ac3883" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_n_lt(path, path)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_n_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="path" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="path_npoints" id="Procedure_176ef63" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_npoints(path)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_npoints$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="path_out" id="Procedure_3b9472b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_out(path)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="path_recv" id="Procedure_208a33f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_recv(internal)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="path_send" id="Procedure_2b0da10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_send(path)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="path_sub_pt" id="Procedure_366bf58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.path_sub_pt(path, point)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_sub_pt$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="pclose" id="Procedure_5e62e2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pclose(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_close$function$
;]]></string>
			<comment><![CDATA[close path]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="percent_rank" id="Procedure_27131c7" isSystem="false" params_known="y" >
			<string><![CDATA[create function percent_rank window_percent_rank;]]></string>
			<comment><![CDATA[fractional rank of hypothetical row]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="percent_rank" id="Procedure_13792b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percent_rank()
 RETURNS double precision
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE
AS $function$window_percent_rank$function$
;]]></string>
			<comment><![CDATA[fractional rank within partition]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="percent_rank_final" id="Procedure_2990b0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percent_rank_final(internal, VARIADIC "any")
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_percent_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="percentile_cont_float8_final" id="Procedure_5b67bd0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_final(internal, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="percentile_cont_float8_multi_final" id="Procedure_200163" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_float8_multi_final(internal, double precision[])
 RETURNS double precision[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_float8_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="2003" type="_float8" />
		</procedure>
		<procedure name="percentile_cont_interval_final" id="Procedure_f5121d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_final(internal, double precision)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="percentile_cont_interval_multi_final" id="Procedure_343cfcb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_cont_interval_multi_final(internal, double precision[])
 RETURNS interval[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_cont_interval_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2003" type="_float8" />
			<result_param name="returnValue" jt="2003" type="_interval" />
		</procedure>
		<procedure name="percentile_disc_final" id="Procedure_1ad7b79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_final(internal, double precision, anyelement)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="8" type="float8" />
			<input_param name="$3" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="percentile_disc_multi_final" id="Procedure_32409e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.percentile_disc_multi_final(internal, double precision[], anyelement)
 RETURNS anyarray
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$percentile_disc_multi_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="2003" type="_float8" />
			<input_param name="$3" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="anyarray" />
		</procedure>
		<procedure name="pg_advisory_lock" id="Procedure_4308a0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_int4$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_lock" id="Procedure_29e8340" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_lock_shared" id="Procedure_10991e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_shared_int4$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_lock_shared" id="Procedure_c42642" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_unlock" id="Procedure_5da8165" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_int4$function$
;]]></string>
			<comment><![CDATA[release exclusive advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_advisory_unlock" id="Procedure_58165df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_int8$function$
;]]></string>
			<comment><![CDATA[release exclusive advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_advisory_unlock_all" id="Procedure_19a1d7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_all()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_all$function$
;]]></string>
			<comment><![CDATA[release all advisory locks]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_unlock_shared" id="Procedure_712366" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_shared_int4$function$
;]]></string>
			<comment><![CDATA[release shared advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_advisory_unlock_shared" id="Procedure_e31a0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_unlock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_unlock_shared_int8$function$
;]]></string>
			<comment><![CDATA[release shared advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_advisory_xact_lock" id="Procedure_5cef0dc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_int4$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_xact_lock" id="Procedure_58ace45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_xact_lock_shared" id="Procedure_14c9903" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(integer, integer)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_shared_int4$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_advisory_xact_lock_shared" id="Procedure_f38e93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_advisory_xact_lock_shared(bigint)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_available_extension_versions" id="Procedure_4a78096" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extension_versions(OUT name name, OUT version text, OUT superuser boolean, OUT relocatable boolean, OUT schema name, OUT requires name[], OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extension_versions$function$
;]]></string>
			<comment><![CDATA[list available extension versions]]></comment>
			<input_param name="name" jt="12" type="name" />
			<input_param name="version" jt="12" type="text" />
			<input_param name="superuser" jt="-7" type="bool" />
			<input_param name="relocatable" jt="-7" type="bool" />
			<input_param name="schema" jt="12" type="name" />
			<input_param name="requires" jt="2003" type="_name" />
			<input_param name="comment" jt="12" type="text" />
		</procedure>
		<procedure name="pg_available_extensions" id="Procedure_72a339" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_available_extensions(OUT name name, OUT default_version text, OUT comment text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_available_extensions$function$
;]]></string>
			<comment><![CDATA[list available extensions]]></comment>
			<input_param name="name" jt="12" type="name" />
			<input_param name="default_version" jt="12" type="text" />
			<input_param name="comment" jt="12" type="text" />
		</procedure>
		<procedure name="pg_backend_pid" id="Procedure_55054a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backend_pid()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_backend_pid$function$
;]]></string>
			<comment><![CDATA[statistics: current backend PID]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_backup_start_time" id="Procedure_214f4d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_backup_start_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_backup_start_time$function$
;]]></string>
			<comment><![CDATA[start time of an online backup]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_blocking_pids" id="Procedure_35b5613" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_blocking_pids$function$
;]]></string>
			<comment><![CDATA[get array of PIDs of sessions blocking specified backend PID from acquiring a heavyweight lock]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="2003" type="_int4" />
		</procedure>
		<procedure name="pg_cancel_backend" id="Procedure_4a75f73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cancel_backend(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_cancel_backend$function$
;]]></string>
			<comment><![CDATA[cancel a server process' current query]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_char_to_encoding" id="Procedure_4d2bba2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_char_to_encoding(name)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_char_to_encoding$function$
;]]></string>
			<comment><![CDATA[convert encoding name to encoding id]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_client_encoding" id="Procedure_17aaf81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_client_encoding()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_client_encoding$function$
;]]></string>
			<comment><![CDATA[encoding name of current database]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="pg_collation_actual_version" id="Procedure_141d503" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_actual_version(oid)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 100
AS $function$pg_collation_actual_version$function$
;]]></string>
			<comment><![CDATA[get actual version of collation from operating system]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_collation_for" id="Procedure_5b2aada" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_for("any")
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_collation_for$function$
;]]></string>
			<comment><![CDATA[collation of the argument; implementation of the COLLATION FOR expression]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_collation_is_visible" id="Procedure_f3cd6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_collation_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_collation_is_visible$function$
;]]></string>
			<comment><![CDATA[is collation visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_column_is_updatable" id="Procedure_406930b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_is_updatable(regclass, smallint, boolean)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_column_is_updatable$function$
;]]></string>
			<comment><![CDATA[is a column updatable]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="5" type="int2" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_column_size" id="Procedure_317a6ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_column_size("any")
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_column_size$function$
;]]></string>
			<comment><![CDATA[bytes required to store the value, perhaps with compression]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_conf_load_time" id="Procedure_240dcf6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conf_load_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_conf_load_time$function$
;]]></string>
			<comment><![CDATA[configuration load time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_config" id="Procedure_50a9577" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_config(OUT name text, OUT setting text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL RESTRICTED STRICT ROWS 23
AS $function$pg_config$function$
;]]></string>
			<comment><![CDATA[pg_config binary as a function]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="setting" jt="12" type="text" />
		</procedure>
		<procedure name="pg_control_checkpoint" id="Procedure_4453c93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_checkpoint(OUT checkpoint_lsn pg_lsn, OUT prior_lsn pg_lsn, OUT redo_lsn pg_lsn, OUT redo_wal_file text, OUT timeline_id integer, OUT prev_timeline_id integer, OUT full_page_writes boolean, OUT next_xid text, OUT next_oid oid, OUT next_multixact_id xid, OUT next_multi_offset xid, OUT oldest_xid xid, OUT oldest_xid_dbid oid, OUT oldest_active_xid xid, OUT oldest_multi_xid xid, OUT oldest_multi_dbid oid, OUT oldest_commit_ts_xid xid, OUT newest_commit_ts_xid xid, OUT checkpoint_time timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_checkpoint$function$
;]]></string>
			<comment><![CDATA[pg_controldata checkpoint state information as a function]]></comment>
			<input_param name="checkpoint_lsn" jt="1111" type="pg_lsn" />
			<input_param name="prior_lsn" jt="1111" type="pg_lsn" />
			<input_param name="redo_lsn" jt="1111" type="pg_lsn" />
			<input_param name="redo_wal_file" jt="12" type="text" />
			<input_param name="timeline_id" jt="4" type="int4" />
			<input_param name="prev_timeline_id" jt="4" type="int4" />
			<input_param name="full_page_writes" jt="-7" type="bool" />
			<input_param name="next_xid" jt="12" type="text" />
			<input_param name="next_oid" jt="-5" type="oid" />
			<input_param name="next_multixact_id" jt="1111" type="xid" />
			<input_param name="next_multi_offset" jt="1111" type="xid" />
			<input_param name="oldest_xid" jt="1111" type="xid" />
			<input_param name="oldest_xid_dbid" jt="-5" type="oid" />
			<input_param name="oldest_active_xid" jt="1111" type="xid" />
			<input_param name="oldest_multi_xid" jt="1111" type="xid" />
			<input_param name="oldest_multi_dbid" jt="-5" type="oid" />
			<input_param name="oldest_commit_ts_xid" jt="1111" type="xid" />
			<input_param name="newest_commit_ts_xid" jt="1111" type="xid" />
			<input_param name="checkpoint_time" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_control_init" id="Procedure_30c2bad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_init(OUT max_data_alignment integer, OUT database_block_size integer, OUT blocks_per_segment integer, OUT wal_block_size integer, OUT bytes_per_wal_segment integer, OUT max_identifier_length integer, OUT max_index_columns integer, OUT max_toast_chunk_size integer, OUT large_object_chunk_size integer, OUT float4_pass_by_value boolean, OUT float8_pass_by_value boolean, OUT data_page_checksum_version integer)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_init$function$
;]]></string>
			<comment><![CDATA[pg_controldata init state information as a function]]></comment>
			<input_param name="max_data_alignment" jt="4" type="int4" />
			<input_param name="database_block_size" jt="4" type="int4" />
			<input_param name="blocks_per_segment" jt="4" type="int4" />
			<input_param name="wal_block_size" jt="4" type="int4" />
			<input_param name="bytes_per_wal_segment" jt="4" type="int4" />
			<input_param name="max_identifier_length" jt="4" type="int4" />
			<input_param name="max_index_columns" jt="4" type="int4" />
			<input_param name="max_toast_chunk_size" jt="4" type="int4" />
			<input_param name="large_object_chunk_size" jt="4" type="int4" />
			<input_param name="float4_pass_by_value" jt="-7" type="bool" />
			<input_param name="float8_pass_by_value" jt="-7" type="bool" />
			<input_param name="data_page_checksum_version" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_control_recovery" id="Procedure_9ad4ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_recovery(OUT min_recovery_end_lsn pg_lsn, OUT min_recovery_end_timeline integer, OUT backup_start_lsn pg_lsn, OUT backup_end_lsn pg_lsn, OUT end_of_backup_record_required boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_recovery$function$
;]]></string>
			<comment><![CDATA[pg_controldata recovery state information as a function]]></comment>
			<input_param name="min_recovery_end_lsn" jt="1111" type="pg_lsn" />
			<input_param name="min_recovery_end_timeline" jt="4" type="int4" />
			<input_param name="backup_start_lsn" jt="1111" type="pg_lsn" />
			<input_param name="backup_end_lsn" jt="1111" type="pg_lsn" />
			<input_param name="end_of_backup_record_required" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_control_system" id="Procedure_5bff97e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_control_system(OUT pg_control_version integer, OUT catalog_version_no integer, OUT system_identifier bigint, OUT pg_control_last_modified timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_control_system$function$
;]]></string>
			<comment><![CDATA[pg_controldata general state information as a function]]></comment>
			<input_param name="pg_control_version" jt="4" type="int4" />
			<input_param name="catalog_version_no" jt="4" type="int4" />
			<input_param name="system_identifier" jt="-5" type="int8" />
			<input_param name="pg_control_last_modified" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_conversion_is_visible" id="Procedure_74f005" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_conversion_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_conversion_is_visible$function$
;]]></string>
			<comment><![CDATA[is conversion visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_create_logical_replication_slot" id="Procedure_41e2b66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_logical_replication_slot(slot_name name, plugin name, temporary boolean DEFAULT false, OUT slot_name text, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_logical_replication_slot$function$
;]]></string>
			<comment><![CDATA[set up a logical replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="plugin" jt="12" type="name" />
			<input_param name="temporary" jt="-7" type="bool" />
			<input_param name="slot_name" jt="12" type="text" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_create_physical_replication_slot" id="Procedure_fe51a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_physical_replication_slot(slot_name name, immediately_reserve boolean DEFAULT false, temporary boolean DEFAULT false, OUT slot_name name, OUT lsn pg_lsn)
 RETURNS record
 LANGUAGE internal
 STRICT
AS $function$pg_create_physical_replication_slot$function$
;]]></string>
			<comment><![CDATA[create a physical replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="immediately_reserve" jt="-7" type="bool" />
			<input_param name="temporary" jt="-7" type="bool" />
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_create_restore_point" id="Procedure_4478172" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_create_restore_point(text)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_create_restore_point$function$
;]]></string>
			<comment><![CDATA[create a named restore point]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_current_logfile" id="Procedure_4c9caed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile(text)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile_1arg$function$
;]]></string>
			<comment><![CDATA[current logging collector file location]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_current_logfile" id="Procedure_5491860" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_logfile()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_current_logfile$function$
;]]></string>
			<comment><![CDATA[current logging collector file location]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_current_wal_flush_lsn" id="Procedure_33c80f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_flush_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_flush_lsn$function$
;]]></string>
			<comment><![CDATA[current wal flush location]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_current_wal_insert_lsn" id="Procedure_7d6f59" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_insert_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_insert_lsn$function$
;]]></string>
			<comment><![CDATA[current wal insert location]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_current_wal_lsn" id="Procedure_234cc8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_current_wal_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_current_wal_lsn$function$
;]]></string>
			<comment><![CDATA[current wal write location]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_cursor" id="Procedure_14291ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_cursor(OUT name text, OUT statement text, OUT is_holdable boolean, OUT is_binary boolean, OUT is_scrollable boolean, OUT creation_time timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_cursor$function$
;]]></string>
			<comment><![CDATA[get the open cursors for this session]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="statement" jt="12" type="text" />
			<input_param name="is_holdable" jt="-7" type="bool" />
			<input_param name="is_binary" jt="-7" type="bool" />
			<input_param name="is_scrollable" jt="-7" type="bool" />
			<input_param name="creation_time" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_database_size" id="Procedure_9d8595" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_oid$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_database_size" id="Procedure_23b3406" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_database_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_database_size_name$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified database]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_ddl_command_in" id="Procedure_33ac27f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_in(cstring)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="pg_ddl_command" />
		</procedure>
		<procedure name="pg_ddl_command_out" id="Procedure_4316a1a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_out(pg_ddl_command)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_ddl_command" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="pg_ddl_command_recv" id="Procedure_1d865f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_recv(internal)
 RETURNS pg_ddl_command
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="pg_ddl_command" />
		</procedure>
		<procedure name="pg_ddl_command_send" id="Procedure_5851cf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ddl_command_send(pg_ddl_command)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ddl_command_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_ddl_command" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_dependencies_in" id="Procedure_5bf5c99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_in(cstring)
 RETURNS pg_dependencies
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="pg_dependencies" />
		</procedure>
		<procedure name="pg_dependencies_out" id="Procedure_3772f92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_out(pg_dependencies)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_dependencies" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="pg_dependencies_recv" id="Procedure_59c36da" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_recv(internal)
 RETURNS pg_dependencies
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="pg_dependencies" />
		</procedure>
		<procedure name="pg_dependencies_send" id="Procedure_4350372" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_dependencies_send(pg_dependencies)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_dependencies_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_dependencies" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_describe_object" id="Procedure_2c8e666" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_describe_object(oid, oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_describe_object$function$
;]]></string>
			<comment><![CDATA[get identification of SQL object]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_drop_replication_slot" id="Procedure_10123b5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_drop_replication_slot(name)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_drop_replication_slot$function$
;]]></string>
			<comment><![CDATA[drop a replication slot]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_encoding_max_length" id="Procedure_e8150a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_max_length(integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_encoding_max_length_sql$function$
;]]></string>
			<comment><![CDATA[maximum octet length of a character in given encoding]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_encoding_to_char" id="Procedure_220e059" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_encoding_to_char(integer)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$PG_encoding_to_char$function$
;]]></string>
			<comment><![CDATA[convert encoding id to encoding name]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="pg_event_trigger_ddl_commands" id="Procedure_3e670c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_ddl_commands(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT command_tag text, OUT object_type text, OUT schema_name text, OUT object_identity text, OUT in_extension boolean, OUT command pg_ddl_command)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_ddl_commands$function$
;]]></string>
			<comment><![CDATA[list DDL actions being executed by the current command]]></comment>
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="4" type="int4" />
			<input_param name="command_tag" jt="12" type="text" />
			<input_param name="object_type" jt="12" type="text" />
			<input_param name="schema_name" jt="12" type="text" />
			<input_param name="object_identity" jt="12" type="text" />
			<input_param name="in_extension" jt="-7" type="bool" />
			<input_param name="command" jt="1111" type="pg_ddl_command" />
		</procedure>
		<procedure name="pg_event_trigger_dropped_objects" id="Procedure_2baf0e4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_dropped_objects(OUT classid oid, OUT objid oid, OUT objsubid integer, OUT original boolean, OUT normal boolean, OUT is_temporary boolean, OUT object_type text, OUT schema_name text, OUT object_name text, OUT object_identity text, OUT address_names text[], OUT address_args text[])
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 10 ROWS 100
AS $function$pg_event_trigger_dropped_objects$function$
;]]></string>
			<comment><![CDATA[list objects dropped by the current command]]></comment>
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="4" type="int4" />
			<input_param name="original" jt="-7" type="bool" />
			<input_param name="normal" jt="-7" type="bool" />
			<input_param name="is_temporary" jt="-7" type="bool" />
			<input_param name="object_type" jt="12" type="text" />
			<input_param name="schema_name" jt="12" type="text" />
			<input_param name="object_name" jt="12" type="text" />
			<input_param name="object_identity" jt="12" type="text" />
			<input_param name="address_names" jt="2003" type="_text" />
			<input_param name="address_args" jt="2003" type="_text" />
		</procedure>
		<procedure name="pg_event_trigger_table_rewrite_oid" id="Procedure_2d33bc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_oid(OUT oid oid)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_oid$function$
;]]></string>
			<comment><![CDATA[return Oid of the table getting rewritten]]></comment>
			<input_param name="oid" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_event_trigger_table_rewrite_reason" id="Procedure_425a390" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_event_trigger_table_rewrite_reason()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_event_trigger_table_rewrite_reason$function$
;]]></string>
			<comment><![CDATA[return reason code for table getting rewritten]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_export_snapshot" id="Procedure_5c225d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_export_snapshot()
 RETURNS text
 LANGUAGE internal
 STRICT
AS $function$pg_export_snapshot$function$
;]]></string>
			<comment><![CDATA[export a snapshot]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_extension_config_dump" id="Procedure_2e1eefd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_config_dump(regclass, text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_extension_config_dump$function$
;]]></string>
			<comment><![CDATA[flag an extension's table contents to be emitted by pg_dump]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_extension_update_paths" id="Procedure_26251ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_extension_update_paths(name name, OUT source text, OUT target text, OUT path text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 100
AS $function$pg_extension_update_paths$function$
;]]></string>
			<comment><![CDATA[list an extension's version update paths]]></comment>
			<input_param name="name" jt="12" type="name" />
			<input_param name="source" jt="12" type="text" />
			<input_param name="target" jt="12" type="text" />
			<input_param name="path" jt="12" type="text" />
		</procedure>
		<procedure name="pg_filenode_relation" id="Procedure_55f8c8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_filenode_relation(oid, oid)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_filenode_relation$function$
;]]></string>
			<comment><![CDATA[relation OID for filenode and tablespace]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="pg_function_is_visible" id="Procedure_44a05d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_function_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_function_is_visible$function$
;]]></string>
			<comment><![CDATA[is function visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_get_constraintdef" id="Procedure_5b8d0db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef_ext$function$
;]]></string>
			<comment><![CDATA[constraint description with pretty-print option]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_constraintdef" id="Procedure_cb4ad1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_constraintdef$function$
;]]></string>
			<comment><![CDATA[constraint description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_expr" id="Procedure_f26916" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr_ext$function$
;]]></string>
			<comment><![CDATA[deparse an encoded expression with pretty-print option]]></comment>
			<input_param name="$1" jt="1111" type="pg_node_tree" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_expr" id="Procedure_24f17aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_expr(pg_node_tree, oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_expr$function$
;]]></string>
			<comment><![CDATA[deparse an encoded expression]]></comment>
			<input_param name="$1" jt="1111" type="pg_node_tree" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_function_arg_default" id="Procedure_34bbc1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arg_default(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arg_default$function$
;]]></string>
			<comment><![CDATA[function argument default]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_function_arguments" id="Procedure_4946756" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_arguments$function$
;]]></string>
			<comment><![CDATA[argument list of a function]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_function_identity_arguments" id="Procedure_9afa24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_identity_arguments(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_identity_arguments$function$
;]]></string>
			<comment><![CDATA[identity argument list of a function]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_function_result" id="Procedure_2d92a23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_function_result(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_function_result$function$
;]]></string>
			<comment><![CDATA[result type of a function]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_functiondef" id="Procedure_5e51b43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_functiondef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_functiondef$function$
;]]></string>
			<comment><![CDATA[definition of a function]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_indexdef" id="Procedure_78b9c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid, integer, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef_ext$function$
;]]></string>
			<comment><![CDATA[index description (full create statement or single expression) with pretty-print option]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_indexdef" id="Procedure_117fee8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_indexdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_indexdef$function$
;]]></string>
			<comment><![CDATA[index description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_keywords" id="Procedure_6cb2f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_keywords(OUT word text, OUT catcode "char", OUT catdesc text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10 ROWS 400
AS $function$pg_get_keywords$function$
;]]></string>
			<comment><![CDATA[list of SQL keywords]]></comment>
			<input_param name="word" jt="12" type="text" />
			<input_param name="catcode" jt="1" type="char" />
			<input_param name="catdesc" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_multixact_members" id="Procedure_56297e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_multixact_members(multixid xid, OUT xid xid, OUT mode text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_get_multixact_members$function$
;]]></string>
			<comment><![CDATA[view members of a multixactid]]></comment>
			<input_param name="multixid" jt="1111" type="xid" />
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="mode" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_object_address" id="Procedure_11429e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_object_address(type text, name text[], args text[], OUT classid oid, OUT objid oid, OUT objsubid integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_object_address$function$
;]]></string>
			<comment><![CDATA[get OID-based object address from name/args arrays]]></comment>
			<input_param name="type" jt="12" type="text" />
			<input_param name="name" jt="2003" type="_text" />
			<input_param name="args" jt="2003" type="_text" />
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_get_partition_constraintdef" id="Procedure_5c915a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partition_constraintdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partition_constraintdef$function$
;]]></string>
			<comment><![CDATA[partition constraint description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_partkeydef" id="Procedure_38a1e22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_partkeydef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_partkeydef$function$
;]]></string>
			<comment><![CDATA[partition key description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_publication_tables" id="Procedure_2c50ece" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_publication_tables(pubname text, OUT relid oid)
 RETURNS SETOF oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_publication_tables$function$
;]]></string>
			<comment><![CDATA[get OIDs of tables in a publication]]></comment>
			<input_param name="pubname" jt="12" type="text" />
			<input_param name="relid" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_get_replica_identity_index" id="Procedure_3514de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replica_identity_index(regclass)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_get_replica_identity_index$function$
;]]></string>
			<comment><![CDATA[oid of replica identity index if any]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="pg_get_replication_slots" id="Procedure_3c572fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_replication_slots(OUT slot_name name, OUT plugin name, OUT slot_type text, OUT datoid oid, OUT temporary boolean, OUT active boolean, OUT active_pid integer, OUT xmin xid, OUT catalog_xmin xid, OUT restart_lsn pg_lsn, OUT confirmed_flush_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE ROWS 10
AS $function$pg_get_replication_slots$function$
;]]></string>
			<comment><![CDATA[information about replication slots currently in use]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="plugin" jt="12" type="name" />
			<input_param name="slot_type" jt="12" type="text" />
			<input_param name="datoid" jt="-5" type="oid" />
			<input_param name="temporary" jt="-7" type="bool" />
			<input_param name="active" jt="-7" type="bool" />
			<input_param name="active_pid" jt="4" type="int4" />
			<input_param name="xmin" jt="1111" type="xid" />
			<input_param name="catalog_xmin" jt="1111" type="xid" />
			<input_param name="restart_lsn" jt="1111" type="pg_lsn" />
			<input_param name="confirmed_flush_lsn" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_get_ruledef" id="Procedure_5e18ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef_ext$function$
;]]></string>
			<comment><![CDATA[source text of a rule with pretty-print option]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_ruledef" id="Procedure_48f5253" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_ruledef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_ruledef$function$
;]]></string>
			<comment><![CDATA[source text of a rule]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_serial_sequence" id="Procedure_584f942" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_serial_sequence(text, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_serial_sequence$function$
;]]></string>
			<comment><![CDATA[name of sequence for a serial column]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_statisticsobjdef" id="Procedure_49ee03d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_statisticsobjdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_statisticsobjdef$function$
;]]></string>
			<comment><![CDATA[extended statistics object description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_triggerdef" id="Procedure_1e989e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef_ext$function$
;]]></string>
			<comment><![CDATA[trigger description with pretty-print option]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_triggerdef" id="Procedure_569c571" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_triggerdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_triggerdef$function$
;]]></string>
			<comment><![CDATA[trigger description]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_userbyid" id="Procedure_eab94d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_userbyid(oid)
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_get_userbyid$function$
;]]></string>
			<comment><![CDATA[role name by OID (with fallback)]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="pg_get_viewdef" id="Procedure_3ad83fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid, integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_wrap$function$
;]]></string>
			<comment><![CDATA[select statement of a view with pretty-printing and specified line wrapping]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_viewdef" id="Procedure_43c12e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_ext$function$
;]]></string>
			<comment><![CDATA[select statement of a view with pretty-print option]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_viewdef" id="Procedure_145effc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text, boolean)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name_ext$function$
;]]></string>
			<comment><![CDATA[select statement of a view with pretty-print option]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_viewdef" id="Procedure_17490f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_get_viewdef" id="Procedure_428267d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_get_viewdef(text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_get_viewdef_name$function$
;]]></string>
			<comment><![CDATA[select statement of a view]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_1d6a5aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id$function$
;]]></string>
			<comment><![CDATA[current user privilege on role by role oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_1b72792" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name$function$
;]]></string>
			<comment><![CDATA[current user privilege on role by role name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_375d098" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id_id$function$
;]]></string>
			<comment><![CDATA[user privilege on role by user oid, role oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_39379b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(oid, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_id_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by user oid, role name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="name" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_1671eb1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_id$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role oid]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_has_role" id="Procedure_2af914" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_has_role(name, name, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_has_role_name_name$function$
;]]></string>
			<comment><![CDATA[user privilege on role by username, role name]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<input_param name="$2" jt="12" type="name" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_hba_file_rules" id="Procedure_290ae69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_hba_file_rules(OUT line_number integer, OUT type text, OUT database text[], OUT user_name text[], OUT address text, OUT netmask text, OUT auth_method text, OUT options text[], OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_hba_file_rules$function$
;]]></string>
			<comment><![CDATA[show pg_hba.conf rules]]></comment>
			<input_param name="line_number" jt="4" type="int4" />
			<input_param name="type" jt="12" type="text" />
			<input_param name="database" jt="2003" type="_text" />
			<input_param name="user_name" jt="2003" type="_text" />
			<input_param name="address" jt="12" type="text" />
			<input_param name="netmask" jt="12" type="text" />
			<input_param name="auth_method" jt="12" type="text" />
			<input_param name="options" jt="2003" type="_text" />
			<input_param name="error" jt="12" type="text" />
		</procedure>
		<procedure name="pg_identify_object" id="Procedure_3348735" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object(classid oid, objid oid, objsubid integer, OUT type text, OUT schema text, OUT name text, OUT identity text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object$function$
;]]></string>
			<comment><![CDATA[get machine-parseable identification of SQL object]]></comment>
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="4" type="int4" />
			<input_param name="type" jt="12" type="text" />
			<input_param name="schema" jt="12" type="text" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="identity" jt="12" type="text" />
		</procedure>
		<procedure name="pg_identify_object_as_address" id="Procedure_25573c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_identify_object_as_address(classid oid, objid oid, objsubid integer, OUT type text, OUT object_names text[], OUT object_args text[])
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_identify_object_as_address$function$
;]]></string>
			<comment><![CDATA[get identification of SQL object for pg_get_object_address()]]></comment>
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="4" type="int4" />
			<input_param name="type" jt="12" type="text" />
			<input_param name="object_names" jt="2003" type="_text" />
			<input_param name="object_args" jt="2003" type="_text" />
		</procedure>
		<procedure name="pg_import_system_collations" id="Procedure_19e3ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_import_system_collations(regnamespace)
 RETURNS integer
 LANGUAGE internal
 STRICT COST 100
AS $function$pg_import_system_collations$function$
;]]></string>
			<comment><![CDATA[import collations from operating system]]></comment>
			<input_param name="$1" jt="1111" type="regnamespace" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_index_column_has_property" id="Procedure_2ea027b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_column_has_property(regclass, integer, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_column_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index column]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_index_has_property" id="Procedure_13e0561" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_index_has_property(regclass, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_index_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_indexam_has_property" id="Procedure_201c1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexam_has_property(oid, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_indexam_has_property$function$
;]]></string>
			<comment><![CDATA[test property of an index access method]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_indexes_size" id="Procedure_1797be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_indexes_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_indexes_size$function$
;]]></string>
			<comment><![CDATA[disk space usage for all indexes attached to the specified table]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_is_in_backup" id="Procedure_44e7c10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_in_backup()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_in_backup$function$
;]]></string>
			<comment><![CDATA[true if server is in online backup]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_is_in_recovery" id="Procedure_b4f9d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_in_recovery()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_in_recovery$function$
;]]></string>
			<comment><![CDATA[true if server is in recovery]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_is_other_temp_schema" id="Procedure_3e799b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_other_temp_schema(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_is_other_temp_schema$function$
;]]></string>
			<comment><![CDATA[is schema another session's temp schema?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_is_wal_replay_paused" id="Procedure_5c97627" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_is_wal_replay_paused()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_is_wal_replay_paused$function$
;]]></string>
			<comment><![CDATA[true if wal replay is paused]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_isolation_test_session_is_blocked" id="Procedure_4b3176c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_isolation_test_session_is_blocked(integer, integer[])
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_isolation_test_session_is_blocked$function$
;]]></string>
			<comment><![CDATA[isolationtester support function]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="2003" type="_int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_last_committed_xact" id="Procedure_446b33d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_committed_xact(OUT xid xid, OUT "timestamp" timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_committed_xact$function$
;]]></string>
			<comment><![CDATA[get transaction Id and commit timestamp of latest transaction commit]]></comment>
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="timestamp" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_last_wal_receive_lsn" id="Procedure_2c6e2d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_receive_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_receive_lsn$function$
;]]></string>
			<comment><![CDATA[current wal flush location]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_last_wal_replay_lsn" id="Procedure_129564e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_wal_replay_lsn()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_wal_replay_lsn$function$
;]]></string>
			<comment><![CDATA[last wal replay location]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_last_xact_replay_timestamp" id="Procedure_3a9bf09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_last_xact_replay_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_last_xact_replay_timestamp$function$
;]]></string>
			<comment><![CDATA[timestamp of last replay xact]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_listening_channels" id="Procedure_4c1d7e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_listening_channels()
 RETURNS SETOF text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 10
AS $function$pg_listening_channels$function$
;]]></string>
			<comment><![CDATA[get the channels that the current backend listens to]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_lock_status" id="Procedure_aad986" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lock_status(OUT locktype text, OUT database oid, OUT relation oid, OUT page integer, OUT tuple smallint, OUT virtualxid text, OUT transactionid xid, OUT classid oid, OUT objid oid, OUT objsubid smallint, OUT virtualtransaction text, OUT pid integer, OUT mode text, OUT granted boolean, OUT fastpath boolean)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_lock_status$function$
;]]></string>
			<comment><![CDATA[view system lock information]]></comment>
			<input_param name="locktype" jt="12" type="text" />
			<input_param name="database" jt="-5" type="oid" />
			<input_param name="relation" jt="-5" type="oid" />
			<input_param name="page" jt="4" type="int4" />
			<input_param name="tuple" jt="5" type="int2" />
			<input_param name="virtualxid" jt="12" type="text" />
			<input_param name="transactionid" jt="1111" type="xid" />
			<input_param name="classid" jt="-5" type="oid" />
			<input_param name="objid" jt="-5" type="oid" />
			<input_param name="objsubid" jt="5" type="int2" />
			<input_param name="virtualtransaction" jt="12" type="text" />
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="mode" jt="12" type="text" />
			<input_param name="granted" jt="-7" type="bool" />
			<input_param name="fastpath" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_logical_emit_message" id="Procedure_4422a6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(boolean, text, bytea)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_bytea$function$
;]]></string>
			<comment><![CDATA[emit a binary logical decoding message]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_logical_emit_message" id="Procedure_1348fc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_emit_message(boolean, text, text)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_logical_emit_message_text$function$
;]]></string>
			<comment><![CDATA[emit a textual logical decoding message]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_logical_slot_get_binary_changes" id="Procedure_33b1de4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_binary_changes$function$
;]]></string>
			<comment><![CDATA[get binary changes from replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="upto_lsn" jt="1111" type="pg_lsn" />
			<input_param name="upto_nchanges" jt="4" type="int4" />
			<input_param name="options" jt="2003" type="_text" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="data" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_logical_slot_get_changes" id="Procedure_380e0fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_get_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_get_changes$function$
;]]></string>
			<comment><![CDATA[get changes from replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="upto_lsn" jt="1111" type="pg_lsn" />
			<input_param name="upto_nchanges" jt="4" type="int4" />
			<input_param name="options" jt="2003" type="_text" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="data" jt="12" type="text" />
		</procedure>
		<procedure name="pg_logical_slot_peek_binary_changes" id="Procedure_4b92c2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_binary_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data bytea)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_binary_changes$function$
;]]></string>
			<comment><![CDATA[peek at binary changes from replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="upto_lsn" jt="1111" type="pg_lsn" />
			<input_param name="upto_nchanges" jt="4" type="int4" />
			<input_param name="options" jt="2003" type="_text" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="data" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_logical_slot_peek_changes" id="Procedure_5010977" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_logical_slot_peek_changes(slot_name name, upto_lsn pg_lsn, upto_nchanges integer, VARIADIC options text[] DEFAULT '{}'::text[], OUT lsn pg_lsn, OUT xid xid, OUT data text)
 RETURNS SETOF record
 LANGUAGE internal
 COST 1000
AS $function$pg_logical_slot_peek_changes$function$
;]]></string>
			<comment><![CDATA[peek at changes from replication slot]]></comment>
			<input_param name="slot_name" jt="12" type="name" />
			<input_param name="upto_lsn" jt="1111" type="pg_lsn" />
			<input_param name="upto_nchanges" jt="4" type="int4" />
			<input_param name="options" jt="2003" type="_text" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="xid" jt="1111" type="xid" />
			<input_param name="data" jt="12" type="text" />
		</procedure>
		<procedure name="pg_ls_dir" id="Procedure_49219fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text, boolean, boolean)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir$function$
;]]></string>
			<comment><![CDATA[list all files in a directory]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-7" type="bool" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_ls_dir" id="Procedure_2440e69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_dir(text)
 RETURNS SETOF text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_ls_dir_1arg$function$
;]]></string>
			<comment><![CDATA[list all files in a directory]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_ls_logdir" id="Procedure_5510aab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_logdir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_logdir$function$
;]]></string>
			<comment><![CDATA[list files in the log directory]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="size" jt="-5" type="int8" />
			<input_param name="modification" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_ls_waldir" id="Procedure_27e1c8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ls_waldir(OUT name text, OUT size bigint, OUT modification timestamp with time zone)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT COST 10 ROWS 20
AS $function$pg_ls_waldir$function$
;]]></string>
			<comment><![CDATA[list of files in the WAL directory]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="size" jt="-5" type="int8" />
			<input_param name="modification" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_lsn_cmp" id="Procedure_31f2516" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_cmp(pg_lsn, pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_lsn_eq" id="Procedure_4ad5e00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_eq(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_ge" id="Procedure_1e5b6d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ge(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_gt" id="Procedure_3c3cb66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_gt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_hash" id="Procedure_2b6664c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_hash(pg_lsn)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_lsn_in" id="Procedure_5a62814" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_in(cstring)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_lsn_le" id="Procedure_4f40b4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_le(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_lt" id="Procedure_567d88f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_lt(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_mi" id="Procedure_54a70b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_mi(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="pg_lsn_ne" id="Procedure_288a12b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_ne(pg_lsn, pg_lsn)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_lsn_out" id="Procedure_1e80a8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_out(pg_lsn)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="pg_lsn_recv" id="Procedure_699426" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_recv(internal)
 RETURNS pg_lsn
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_lsn_send" id="Procedure_436c23c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_lsn_send(pg_lsn)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_lsn_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_my_temp_schema" id="Procedure_37a6b84" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_my_temp_schema()
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_my_temp_schema$function$
;]]></string>
			<comment><![CDATA[get OID of current session's temp schema, if any]]></comment>
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_ndistinct_in" id="Procedure_473eed3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_in(cstring)
 RETURNS pg_ndistinct
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="pg_ndistinct" />
		</procedure>
		<procedure name="pg_ndistinct_out" id="Procedure_250f5d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_out(pg_ndistinct)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_ndistinct" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="pg_ndistinct_recv" id="Procedure_11b4f61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_recv(internal)
 RETURNS pg_ndistinct
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="pg_ndistinct" />
		</procedure>
		<procedure name="pg_ndistinct_send" id="Procedure_2bd0d22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ndistinct_send(pg_ndistinct)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_ndistinct_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_ndistinct" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_node_tree_in" id="Procedure_30884e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_in(cstring)
 RETURNS pg_node_tree
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="pg_node_tree" />
		</procedure>
		<procedure name="pg_node_tree_out" id="Procedure_1adca99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_out(pg_node_tree)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_node_tree" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="pg_node_tree_recv" id="Procedure_1f60273" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_recv(internal)
 RETURNS pg_node_tree
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="pg_node_tree" />
		</procedure>
		<procedure name="pg_node_tree_send" id="Procedure_3223a26" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_node_tree_send(pg_node_tree)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_node_tree_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="pg_node_tree" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_notification_queue_usage" id="Procedure_1400a20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notification_queue_usage()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_notification_queue_usage$function$
;]]></string>
			<comment><![CDATA[get the fraction of the asynchronous notification queue currently in use]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_notify" id="Procedure_2e05927" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_notify(text, text)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_notify$function$
;]]></string>
			<comment><![CDATA[send a notification event]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_opclass_is_visible" id="Procedure_34b4682" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opclass_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opclass_is_visible$function$
;]]></string>
			<comment><![CDATA[is opclass visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_operator_is_visible" id="Procedure_3a2749e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_operator_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_operator_is_visible$function$
;]]></string>
			<comment><![CDATA[is operator visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_opfamily_is_visible" id="Procedure_2b4469b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_opfamily_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_opfamily_is_visible$function$
;]]></string>
			<comment><![CDATA[is opfamily visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_options_to_table" id="Procedure_845ec4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_options_to_table(options_array text[], OUT option_name text, OUT option_value text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 3
AS $function$pg_options_to_table$function$
;]]></string>
			<comment><![CDATA[convert generic options array to name/value table]]></comment>
			<input_param name="options_array" jt="2003" type="_text" />
			<input_param name="option_name" jt="12" type="text" />
			<input_param name="option_value" jt="12" type="text" />
		</procedure>
		<procedure name="pg_postmaster_start_time" id="Procedure_1e9ecd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_postmaster_start_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_postmaster_start_time$function$
;]]></string>
			<comment><![CDATA[postmaster start time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_prepared_statement" id="Procedure_33df069" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_statement(OUT name text, OUT statement text, OUT prepare_time timestamp with time zone, OUT parameter_types regtype[], OUT from_sql boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_prepared_statement$function$
;]]></string>
			<comment><![CDATA[get the prepared statements for this session]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="statement" jt="12" type="text" />
			<input_param name="prepare_time" jt="93" type="timestamptz" />
			<input_param name="parameter_types" jt="2003" type="_regtype" />
			<input_param name="from_sql" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_prepared_xact" id="Procedure_e391de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_prepared_xact(OUT transaction xid, OUT gid text, OUT prepared timestamp with time zone, OUT ownerid oid, OUT dbid oid)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_prepared_xact$function$
;]]></string>
			<comment><![CDATA[view two-phase transactions]]></comment>
			<input_param name="transaction" jt="1111" type="xid" />
			<input_param name="gid" jt="12" type="text" />
			<input_param name="prepared" jt="93" type="timestamptz" />
			<input_param name="ownerid" jt="-5" type="oid" />
			<input_param name="dbid" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_read_binary_file" id="Procedure_54eefe7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_all$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_read_binary_file" id="Procedure_53594a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file_off_len$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_read_binary_file" id="Procedure_5e27d98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_binary_file(text, bigint, bigint, boolean)
 RETURNS bytea
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_binary_file$function$
;]]></string>
			<comment><![CDATA[read bytea from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-5" type="int8" />
			<input_param name="$4" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="pg_read_file" id="Procedure_1b341e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_all$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_read_file" id="Procedure_535dc36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint, boolean)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-5" type="int8" />
			<input_param name="$4" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_read_file" id="Procedure_5ee8f1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_read_file(text, bigint, bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_read_file_off_len$function$
;]]></string>
			<comment><![CDATA[read text from a file]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-5" type="int8" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_relation_filenode" id="Procedure_5346dd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filenode(regclass)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filenode$function$
;]]></string>
			<comment><![CDATA[filenode identifier of relation]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_relation_filepath" id="Procedure_1a03c68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_filepath(regclass)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_filepath$function$
;]]></string>
			<comment><![CDATA[file path of relation]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_relation_is_publishable" id="Procedure_dfeed7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_publishable(regclass)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_relation_is_publishable$function$
;]]></string>
			<comment><![CDATA[returns whether a relation can be part of a publication]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_relation_is_updatable" id="Procedure_43e6776" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_is_updatable(regclass, boolean)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_relation_is_updatable$function$
;]]></string>
			<comment><![CDATA[is a relation insertable/updatable/deletable]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_relation_size" id="Procedure_4c26d45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass, text)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_relation_size$function$
;]]></string>
			<comment><![CDATA[disk space usage for the specified fork of a table or index]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_relation_size" id="Procedure_2c60217" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_relation_size(regclass)
 RETURNS bigint
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_relation_size($1, 'main')$function$
;]]></string>
			<comment><![CDATA[disk space usage for the main fork of the specified table or index]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_reload_conf" id="Procedure_4c87e73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_reload_conf()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_reload_conf$function$
;]]></string>
			<comment><![CDATA[reload configuration files]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_replication_origin_advance" id="Procedure_132ff1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_advance(text, pg_lsn)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_advance$function$
;]]></string>
			<comment><![CDATA[advance replication identifier to specific location]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_replication_origin_create" id="Procedure_2a48065" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_create(text)
 RETURNS oid
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_create$function$
;]]></string>
			<comment><![CDATA[create a replication origin]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_replication_origin_drop" id="Procedure_5761c31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_drop(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_drop$function$
;]]></string>
			<comment><![CDATA[drop replication origin identified by its name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_replication_origin_oid" id="Procedure_39e046d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_oid(text)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_replication_origin_oid$function$
;]]></string>
			<comment><![CDATA[translate the replication origin's name to its id]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_replication_origin_progress" id="Procedure_8799ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_progress(text, boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_progress$function$
;]]></string>
			<comment><![CDATA[get an individual replication origin's replication progress]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_replication_origin_session_is_setup" id="Procedure_8cc20f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_is_setup()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_session_is_setup$function$
;]]></string>
			<comment><![CDATA[is a replication origin configured in this session]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_replication_origin_session_progress" id="Procedure_42aa3b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_progress(boolean)
 RETURNS pg_lsn
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_progress$function$
;]]></string>
			<comment><![CDATA[get the replication progress of the current session]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_replication_origin_session_reset" id="Procedure_3ba6965" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_reset()
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_reset$function$
;]]></string>
			<comment><![CDATA[teardown configured replication progress tracking]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_replication_origin_session_setup" id="Procedure_3459d53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_session_setup(text)
 RETURNS void
 LANGUAGE internal
 STRICT
AS $function$pg_replication_origin_session_setup$function$
;]]></string>
			<comment><![CDATA[configure session to maintain replication progress tracking for the passed in origin]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_replication_origin_xact_reset" id="Procedure_ff716e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_reset$function$
;]]></string>
			<comment><![CDATA[reset the transaction's origin lsn and timestamp]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_replication_origin_xact_setup" id="Procedure_abf631" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_replication_origin_xact_setup(pg_lsn, timestamp with time zone)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_replication_origin_xact_setup$function$
;]]></string>
			<comment><![CDATA[setup the transaction's origin lsn and timestamp]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_rotate_logfile" id="Procedure_2fff1ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_rotate_logfile()
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_rotate_logfile$function$
;]]></string>
			<comment><![CDATA[rotate log file]]></comment>
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_safe_snapshot_blocking_pids" id="Procedure_2d2d914" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_safe_snapshot_blocking_pids(integer)
 RETURNS integer[]
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_safe_snapshot_blocking_pids$function$
;]]></string>
			<comment><![CDATA[get array of PIDs of sessions blocking specified backend PID from acquiring a safe snapshot]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="2003" type="_int4" />
		</procedure>
		<procedure name="pg_sequence_last_value" id="Procedure_3f4e5bb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_last_value(regclass)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$pg_sequence_last_value$function$
;]]></string>
			<comment><![CDATA[sequence last value]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_sequence_parameters" id="Procedure_47e79d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sequence_parameters(sequence_oid oid, OUT start_value bigint, OUT minimum_value bigint, OUT maximum_value bigint, OUT increment bigint, OUT cycle_option boolean, OUT cache_size bigint, OUT data_type oid)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_sequence_parameters$function$
;]]></string>
			<comment><![CDATA[sequence parameters, for use by information schema]]></comment>
			<input_param name="sequence_oid" jt="-5" type="oid" />
			<input_param name="start_value" jt="-5" type="int8" />
			<input_param name="minimum_value" jt="-5" type="int8" />
			<input_param name="maximum_value" jt="-5" type="int8" />
			<input_param name="increment" jt="-5" type="int8" />
			<input_param name="cycle_option" jt="-7" type="bool" />
			<input_param name="cache_size" jt="-5" type="int8" />
			<input_param name="data_type" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_show_all_file_settings" id="Procedure_441d54b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_file_settings(OUT sourcefile text, OUT sourceline integer, OUT seqno integer, OUT name text, OUT setting text, OUT applied boolean, OUT error text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$show_all_file_settings$function$
;]]></string>
			<comment><![CDATA[show config file settings]]></comment>
			<input_param name="sourcefile" jt="12" type="text" />
			<input_param name="sourceline" jt="4" type="int4" />
			<input_param name="seqno" jt="4" type="int4" />
			<input_param name="name" jt="12" type="text" />
			<input_param name="setting" jt="12" type="text" />
			<input_param name="applied" jt="-7" type="bool" />
			<input_param name="error" jt="12" type="text" />
		</procedure>
		<procedure name="pg_show_all_settings" id="Procedure_474fda6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_all_settings(OUT name text, OUT setting text, OUT unit text, OUT category text, OUT short_desc text, OUT extra_desc text, OUT context text, OUT vartype text, OUT source text, OUT min_val text, OUT max_val text, OUT enumvals text[], OUT boot_val text, OUT reset_val text, OUT sourcefile text, OUT sourceline integer, OUT pending_restart boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$show_all_settings$function$
;]]></string>
			<comment><![CDATA[SHOW ALL as a function]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="setting" jt="12" type="text" />
			<input_param name="unit" jt="12" type="text" />
			<input_param name="category" jt="12" type="text" />
			<input_param name="short_desc" jt="12" type="text" />
			<input_param name="extra_desc" jt="12" type="text" />
			<input_param name="context" jt="12" type="text" />
			<input_param name="vartype" jt="12" type="text" />
			<input_param name="source" jt="12" type="text" />
			<input_param name="min_val" jt="12" type="text" />
			<input_param name="max_val" jt="12" type="text" />
			<input_param name="enumvals" jt="2003" type="_text" />
			<input_param name="boot_val" jt="12" type="text" />
			<input_param name="reset_val" jt="12" type="text" />
			<input_param name="sourcefile" jt="12" type="text" />
			<input_param name="sourceline" jt="4" type="int4" />
			<input_param name="pending_restart" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_show_replication_origin_status" id="Procedure_57baad0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_show_replication_origin_status(OUT local_id oid, OUT external_id text, OUT remote_lsn pg_lsn, OUT local_lsn pg_lsn)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED ROWS 100
AS $function$pg_show_replication_origin_status$function$
;]]></string>
			<comment><![CDATA[get progress for all replication origins]]></comment>
			<input_param name="local_id" jt="-5" type="oid" />
			<input_param name="external_id" jt="12" type="text" />
			<input_param name="remote_lsn" jt="1111" type="pg_lsn" />
			<input_param name="local_lsn" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_size_bytes" id="Procedure_575e843" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_bytes(text)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_bytes$function$
;]]></string>
			<comment><![CDATA[convert a size in human-readable format with size units into bytes]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_size_pretty" id="Procedure_3680070" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(numeric)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty_numeric$function$
;]]></string>
			<comment><![CDATA[convert a numeric to a human readable text using size units]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_size_pretty" id="Procedure_23788b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_size_pretty(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_size_pretty$function$
;]]></string>
			<comment><![CDATA[convert a long int to a human readable text using size units]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_sleep" id="Procedure_388d023" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_sleep$function$
;]]></string>
			<comment><![CDATA[sleep for the specified time in seconds]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_sleep_for" id="Procedure_f2a530" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_for(interval)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_sleep(extract(epoch from pg_catalog.clock_timestamp() operator(pg_catalog.+) $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))$function$
;]]></string>
			<comment><![CDATA[sleep for the specified interval]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_sleep_until" id="Procedure_8bb4f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_sleep_until(timestamp with time zone)
 RETURNS void
 LANGUAGE sql
 PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.pg_sleep(extract(epoch from $1) operator(pg_catalog.-) extract(epoch from pg_catalog.clock_timestamp()))$function$
;]]></string>
			<comment><![CDATA[sleep until the specified time]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_start_backup" id="Procedure_43ceb78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_start_backup(label text, fast boolean DEFAULT false, exclusive boolean DEFAULT true)
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_start_backup$function$
;]]></string>
			<comment><![CDATA[prepare for taking an online backup]]></comment>
			<input_param name="label" jt="12" type="text" />
			<input_param name="fast" jt="-7" type="bool" />
			<input_param name="exclusive" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_stat_clear_snapshot" id="Procedure_7e3308" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_clear_snapshot()
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED
AS $function$pg_stat_clear_snapshot$function$
;]]></string>
			<comment><![CDATA[statistics: discard current transaction's statistics snapshot]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_stat_file" id="Procedure_4e94f2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, missing_ok boolean, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file$function$
;]]></string>
			<comment><![CDATA[get information about file]]></comment>
			<input_param name="filename" jt="12" type="text" />
			<input_param name="missing_ok" jt="-7" type="bool" />
			<input_param name="size" jt="-5" type="int8" />
			<input_param name="access" jt="93" type="timestamptz" />
			<input_param name="modification" jt="93" type="timestamptz" />
			<input_param name="change" jt="93" type="timestamptz" />
			<input_param name="creation" jt="93" type="timestamptz" />
			<input_param name="isdir" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_stat_file" id="Procedure_192ffb3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_file(filename text, OUT size bigint, OUT access timestamp with time zone, OUT modification timestamp with time zone, OUT change timestamp with time zone, OUT creation timestamp with time zone, OUT isdir boolean)
 RETURNS record
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_file_1arg$function$
;]]></string>
			<comment><![CDATA[get information about file]]></comment>
			<input_param name="filename" jt="12" type="text" />
			<input_param name="size" jt="-5" type="int8" />
			<input_param name="access" jt="93" type="timestamptz" />
			<input_param name="modification" jt="93" type="timestamptz" />
			<input_param name="change" jt="93" type="timestamptz" />
			<input_param name="creation" jt="93" type="timestamptz" />
			<input_param name="isdir" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_stat_get_activity" id="Procedure_4897f98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_activity(pid integer, OUT datid oid, OUT pid integer, OUT usesysid oid, OUT application_name text, OUT state text, OUT query text, OUT wait_event_type text, OUT wait_event text, OUT xact_start timestamp with time zone, OUT query_start timestamp with time zone, OUT backend_start timestamp with time zone, OUT state_change timestamp with time zone, OUT client_addr inet, OUT client_hostname text, OUT client_port integer, OUT backend_xid xid, OUT backend_xmin xid, OUT backend_type text, OUT ssl boolean, OUT sslversion text, OUT sslcipher text, OUT sslbits integer, OUT sslcompression boolean, OUT sslclientdn text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 100
AS $function$pg_stat_get_activity$function$
;]]></string>
			<comment><![CDATA[statistics: information about currently active backends]]></comment>
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="datid" jt="-5" type="oid" />
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="usesysid" jt="-5" type="oid" />
			<input_param name="application_name" jt="12" type="text" />
			<input_param name="state" jt="12" type="text" />
			<input_param name="query" jt="12" type="text" />
			<input_param name="wait_event_type" jt="12" type="text" />
			<input_param name="wait_event" jt="12" type="text" />
			<input_param name="xact_start" jt="93" type="timestamptz" />
			<input_param name="query_start" jt="93" type="timestamptz" />
			<input_param name="backend_start" jt="93" type="timestamptz" />
			<input_param name="state_change" jt="93" type="timestamptz" />
			<input_param name="client_addr" jt="1111" type="inet" />
			<input_param name="client_hostname" jt="12" type="text" />
			<input_param name="client_port" jt="4" type="int4" />
			<input_param name="backend_xid" jt="1111" type="xid" />
			<input_param name="backend_xmin" jt="1111" type="xid" />
			<input_param name="backend_type" jt="12" type="text" />
			<input_param name="ssl" jt="-7" type="bool" />
			<input_param name="sslversion" jt="12" type="text" />
			<input_param name="sslcipher" jt="12" type="text" />
			<input_param name="sslbits" jt="4" type="int4" />
			<input_param name="sslcompression" jt="-7" type="bool" />
			<input_param name="sslclientdn" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_analyze_count" id="Procedure_4da023" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_analyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_analyze_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of manual analyzes for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_archiver" id="Procedure_2a023c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_archiver(OUT archived_count bigint, OUT last_archived_wal text, OUT last_archived_time timestamp with time zone, OUT failed_count bigint, OUT last_failed_wal text, OUT last_failed_time timestamp with time zone, OUT stats_reset timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_archiver$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL archiver]]></comment>
			<input_param name="archived_count" jt="-5" type="int8" />
			<input_param name="last_archived_wal" jt="12" type="text" />
			<input_param name="last_archived_time" jt="93" type="timestamptz" />
			<input_param name="failed_count" jt="-5" type="int8" />
			<input_param name="last_failed_wal" jt="12" type="text" />
			<input_param name="last_failed_time" jt="93" type="timestamptz" />
			<input_param name="stats_reset" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_autoanalyze_count" id="Procedure_33fccfb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autoanalyze_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autoanalyze_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of auto analyzes for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_autovacuum_count" id="Procedure_12ea1a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_autovacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_autovacuum_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of auto vacuums for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_backend_activity" id="Procedure_4b1ff7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity$function$
;]]></string>
			<comment><![CDATA[statistics: current query of backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_backend_activity_start" id="Procedure_5735e4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_activity_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_activity_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for current query of backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_backend_client_addr" id="Procedure_10cde50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_addr(integer)
 RETURNS inet
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_addr$function$
;]]></string>
			<comment><![CDATA[statistics: address of client connected to backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="pg_stat_get_backend_client_port" id="Procedure_1adc2f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_client_port(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_client_port$function$
;]]></string>
			<comment><![CDATA[statistics: port number of client connected to backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_stat_get_backend_dbid" id="Procedure_1d82211" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_dbid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_dbid$function$
;]]></string>
			<comment><![CDATA[statistics: database ID of backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_stat_get_backend_idset" id="Procedure_379cd79" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_idset()
 RETURNS SETOF integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_backend_idset$function$
;]]></string>
			<comment><![CDATA[statistics: currently active backend IDs]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_stat_get_backend_pid" id="Procedure_cef8a3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_pid(integer)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_pid$function$
;]]></string>
			<comment><![CDATA[statistics: PID of backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_stat_get_backend_start" id="Procedure_584ae80" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for current backend session]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_backend_userid" id="Procedure_16765bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_userid(integer)
 RETURNS oid
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_userid$function$
;]]></string>
			<comment><![CDATA[statistics: user ID of backend]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_stat_get_backend_wait_event" id="Procedure_170aca1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event$function$
;]]></string>
			<comment><![CDATA[statistics: wait event on which backend is currently waiting]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_backend_wait_event_type" id="Procedure_2da1de6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_wait_event_type(integer)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_wait_event_type$function$
;]]></string>
			<comment><![CDATA[statistics: wait event type on which backend is currently waiting]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_backend_xact_start" id="Procedure_30c83a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_backend_xact_start(integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_backend_xact_start$function$
;]]></string>
			<comment><![CDATA[statistics: start time for backend's current transaction]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_buf_written_checkpoints" id="Procedure_4214c8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_buf_written_checkpoints$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffers written by the bgwriter during checkpoints]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_buf_written_clean" id="Procedure_594ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_buf_written_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_buf_written_clean$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffers written by the bgwriter for cleaning dirty buffers]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_maxwritten_clean" id="Procedure_3f8f81e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_maxwritten_clean()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_maxwritten_clean$function$
;]]></string>
			<comment><![CDATA[statistics: number of times the bgwriter stopped processing when it had written too many buffers while cleaning]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_requested_checkpoints" id="Procedure_15aab34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_requested_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_requested_checkpoints$function$
;]]></string>
			<comment><![CDATA[statistics: number of backend requested checkpoints started by the bgwriter]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_stat_reset_time" id="Procedure_44818d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_stat_reset_time()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_stat_reset_time$function$
;]]></string>
			<comment><![CDATA[statistics: last reset for the bgwriter]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_bgwriter_timed_checkpoints" id="Procedure_5870b6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_bgwriter_timed_checkpoints()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_bgwriter_timed_checkpoints$function$
;]]></string>
			<comment><![CDATA[statistics: number of timed checkpoints started by the bgwriter]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_blocks_fetched" id="Procedure_3c1054c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks fetched]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_blocks_hit" id="Procedure_59da5bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks found in cache]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_buf_alloc" id="Procedure_551ce1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_alloc()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_alloc$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffer allocations]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_buf_fsync_backend" id="Procedure_328f031" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_fsync_backend()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_fsync_backend$function$
;]]></string>
			<comment><![CDATA[statistics: number of backend buffer writes that did their own fsync]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_buf_written_backend" id="Procedure_58d08a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_buf_written_backend()
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_buf_written_backend$function$
;]]></string>
			<comment><![CDATA[statistics: number of buffers written by backends]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_checkpoint_sync_time" id="Procedure_4c4bea1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpoint_sync_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpoint_sync_time$function$
;]]></string>
			<comment><![CDATA[statistics: checkpoint time spent synchronizing buffers to disk, in milliseconds]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_checkpoint_write_time" id="Procedure_15a21a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_checkpoint_write_time()
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_checkpoint_write_time$function$
;]]></string>
			<comment><![CDATA[statistics: checkpoint time spent writing buffers to disk, in milliseconds]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_db_blk_read_time" id="Procedure_4f4d638" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_read_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_read_time$function$
;]]></string>
			<comment><![CDATA[statistics: block read time, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_db_blk_write_time" id="Procedure_31f921d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blk_write_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blk_write_time$function$
;]]></string>
			<comment><![CDATA[statistics: block write time, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_db_blocks_fetched" id="Procedure_41d9ba2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: blocks fetched for database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_blocks_hit" id="Procedure_3db99aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: blocks found in cache for database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_all" id="Procedure_4c11b40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_all(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_all$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_bufferpin" id="Procedure_4cd92b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_bufferpin(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_bufferpin$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by shared buffer pin]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_lock" id="Procedure_3098efd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_lock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_lock$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by relation lock]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_snapshot" id="Procedure_495ea70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_snapshot(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_snapshot$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by snapshot expiry]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_startup_deadlock" id="Procedure_37132b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_startup_deadlock(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_startup_deadlock$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by buffer deadlock]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_conflict_tablespace" id="Procedure_27bf495" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_conflict_tablespace(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_conflict_tablespace$function$
;]]></string>
			<comment><![CDATA[statistics: recovery conflicts in database caused by drop tablespace]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_deadlocks" id="Procedure_3deed7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_deadlocks(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_deadlocks$function$
;]]></string>
			<comment><![CDATA[statistics: deadlocks detected in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_numbackends" id="Procedure_4682a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_numbackends(oid)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_numbackends$function$
;]]></string>
			<comment><![CDATA[statistics: number of backends in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_stat_get_db_stat_reset_time" id="Procedure_44a771a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_stat_reset_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_stat_reset_time$function$
;]]></string>
			<comment><![CDATA[statistics: last reset for a database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_db_temp_bytes" id="Procedure_2fbab2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_bytes(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_bytes$function$
;]]></string>
			<comment><![CDATA[statistics: number of bytes in temporary files written]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_temp_files" id="Procedure_2d1c6fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_temp_files(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_temp_files$function$
;]]></string>
			<comment><![CDATA[statistics: number of temporary files written]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_tuples_deleted" id="Procedure_4a9a579" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: tuples deleted in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_tuples_fetched" id="Procedure_3ccfd58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: tuples fetched for database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_tuples_inserted" id="Procedure_5b1def6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: tuples inserted in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_tuples_returned" id="Procedure_3b81922" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: tuples returned for database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_tuples_updated" id="Procedure_5b0cf95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: tuples updated in database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_xact_commit" id="Procedure_5a5bf01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_commit(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_commit$function$
;]]></string>
			<comment><![CDATA[statistics: transactions committed]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_db_xact_rollback" id="Procedure_3381042" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_db_xact_rollback(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_db_xact_rollback$function$
;]]></string>
			<comment><![CDATA[statistics: transactions rolled back]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_dead_tuples" id="Procedure_55826fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_dead_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_dead_tuples$function$
;]]></string>
			<comment><![CDATA[statistics: number of dead tuples]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_function_calls" id="Procedure_18e4d5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_calls$function$
;]]></string>
			<comment><![CDATA[statistics: number of function calls]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_function_self_time" id="Procedure_5b0256b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_self_time$function$
;]]></string>
			<comment><![CDATA[statistics: self execution time of function, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_function_total_time" id="Procedure_35a74ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_function_total_time$function$
;]]></string>
			<comment><![CDATA[statistics: total execution time of function, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_last_analyze_time" id="Procedure_4cc65f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_analyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_analyze_time$function$
;]]></string>
			<comment><![CDATA[statistics: last manual analyze time for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_last_autoanalyze_time" id="Procedure_1e75753" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autoanalyze_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autoanalyze_time$function$
;]]></string>
			<comment><![CDATA[statistics: last auto analyze time for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_last_autovacuum_time" id="Procedure_2d1181d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_autovacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_autovacuum_time$function$
;]]></string>
			<comment><![CDATA[statistics: last auto vacuum time for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_last_vacuum_time" id="Procedure_1b5bc42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_last_vacuum_time(oid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_last_vacuum_time$function$
;]]></string>
			<comment><![CDATA[statistics: last manual vacuum time for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_live_tuples" id="Procedure_25100e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_live_tuples(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_live_tuples$function$
;]]></string>
			<comment><![CDATA[statistics: number of live tuples]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_mod_since_analyze" id="Procedure_2eba722" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_mod_since_analyze(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_mod_since_analyze$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples changed since last analyze]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_numscans" id="Procedure_244f244" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_numscans$function$
;]]></string>
			<comment><![CDATA[statistics: number of scans done for table/index]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_progress_info" id="Procedure_b03aac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_progress_info(cmdtype text, OUT pid integer, OUT datid oid, OUT relid oid, OUT param1 bigint, OUT param2 bigint, OUT param3 bigint, OUT param4 bigint, OUT param5 bigint, OUT param6 bigint, OUT param7 bigint, OUT param8 bigint, OUT param9 bigint, OUT param10 bigint)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT ROWS 100
AS $function$pg_stat_get_progress_info$function$
;]]></string>
			<comment><![CDATA[statistics: information about progress of backends running maintenance command]]></comment>
			<input_param name="cmdtype" jt="12" type="text" />
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="datid" jt="-5" type="oid" />
			<input_param name="relid" jt="-5" type="oid" />
			<input_param name="param1" jt="-5" type="int8" />
			<input_param name="param2" jt="-5" type="int8" />
			<input_param name="param3" jt="-5" type="int8" />
			<input_param name="param4" jt="-5" type="int8" />
			<input_param name="param5" jt="-5" type="int8" />
			<input_param name="param6" jt="-5" type="int8" />
			<input_param name="param7" jt="-5" type="int8" />
			<input_param name="param8" jt="-5" type="int8" />
			<input_param name="param9" jt="-5" type="int8" />
			<input_param name="param10" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_snapshot_timestamp" id="Procedure_de1840" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_snapshot_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_snapshot_timestamp$function$
;]]></string>
			<comment><![CDATA[statistics: timestamp of the current statistics snapshot]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_subscription" id="Procedure_21e1837" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_subscription(subid oid, OUT subid oid, OUT relid oid, OUT pid integer, OUT received_lsn pg_lsn, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_subscription$function$
;]]></string>
			<comment><![CDATA[statistics: information about subscription]]></comment>
			<input_param name="subid" jt="-5" type="oid" />
			<input_param name="subid" jt="-5" type="oid" />
			<input_param name="relid" jt="-5" type="oid" />
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="received_lsn" jt="1111" type="pg_lsn" />
			<input_param name="last_msg_send_time" jt="93" type="timestamptz" />
			<input_param name="last_msg_receipt_time" jt="93" type="timestamptz" />
			<input_param name="latest_end_lsn" jt="1111" type="pg_lsn" />
			<input_param name="latest_end_time" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="pg_stat_get_tuples_deleted" id="Procedure_4b5dca0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples deleted]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_tuples_fetched" id="Procedure_70c71e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples fetched by idxscan]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_tuples_hot_updated" id="Procedure_44b275a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_hot_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples hot updated]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_tuples_inserted" id="Procedure_2fbb99f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples inserted]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_tuples_returned" id="Procedure_2d94b7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples read by seqscan]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_tuples_updated" id="Procedure_aaea8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_vacuum_count" id="Procedure_37df74a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_vacuum_count(oid)
 RETURNS bigint
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_vacuum_count$function$
;]]></string>
			<comment><![CDATA[statistics: number of manual vacuums for a table]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_wal_receiver" id="Procedure_52ef3f8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_receiver(OUT pid integer, OUT status text, OUT receive_start_lsn pg_lsn, OUT receive_start_tli integer, OUT received_lsn pg_lsn, OUT received_tli integer, OUT last_msg_send_time timestamp with time zone, OUT last_msg_receipt_time timestamp with time zone, OUT latest_end_lsn pg_lsn, OUT latest_end_time timestamp with time zone, OUT slot_name text, OUT conninfo text)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED
AS $function$pg_stat_get_wal_receiver$function$
;]]></string>
			<comment><![CDATA[statistics: information about WAL receiver]]></comment>
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="status" jt="12" type="text" />
			<input_param name="receive_start_lsn" jt="1111" type="pg_lsn" />
			<input_param name="receive_start_tli" jt="4" type="int4" />
			<input_param name="received_lsn" jt="1111" type="pg_lsn" />
			<input_param name="received_tli" jt="4" type="int4" />
			<input_param name="last_msg_send_time" jt="93" type="timestamptz" />
			<input_param name="last_msg_receipt_time" jt="93" type="timestamptz" />
			<input_param name="latest_end_lsn" jt="1111" type="pg_lsn" />
			<input_param name="latest_end_time" jt="93" type="timestamptz" />
			<input_param name="slot_name" jt="12" type="text" />
			<input_param name="conninfo" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_wal_senders" id="Procedure_1a68322" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_wal_senders(OUT pid integer, OUT state text, OUT sent_lsn pg_lsn, OUT write_lsn pg_lsn, OUT flush_lsn pg_lsn, OUT replay_lsn pg_lsn, OUT write_lag interval, OUT flush_lag interval, OUT replay_lag interval, OUT sync_priority integer, OUT sync_state text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED ROWS 10
AS $function$pg_stat_get_wal_senders$function$
;]]></string>
			<comment><![CDATA[statistics: information about currently active replication]]></comment>
			<input_param name="pid" jt="4" type="int4" />
			<input_param name="state" jt="12" type="text" />
			<input_param name="sent_lsn" jt="1111" type="pg_lsn" />
			<input_param name="write_lsn" jt="1111" type="pg_lsn" />
			<input_param name="flush_lsn" jt="1111" type="pg_lsn" />
			<input_param name="replay_lsn" jt="1111" type="pg_lsn" />
			<input_param name="write_lag" jt="1111" type="interval" />
			<input_param name="flush_lag" jt="1111" type="interval" />
			<input_param name="replay_lag" jt="1111" type="interval" />
			<input_param name="sync_priority" jt="4" type="int4" />
			<input_param name="sync_state" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stat_get_xact_blocks_fetched" id="Procedure_1933bab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks fetched in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_blocks_hit" id="Procedure_18a1e7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_blocks_hit(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_blocks_hit$function$
;]]></string>
			<comment><![CDATA[statistics: number of blocks found in cache in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_function_calls" id="Procedure_3caaecc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_calls(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_calls$function$
;]]></string>
			<comment><![CDATA[statistics: number of function calls in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_function_self_time" id="Procedure_2b1c393" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_self_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_self_time$function$
;]]></string>
			<comment><![CDATA[statistics: self execution time of function in current transaction, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_xact_function_total_time" id="Procedure_48f7a42" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_function_total_time(oid)
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_function_total_time$function$
;]]></string>
			<comment><![CDATA[statistics: total execution time of function in current transaction, in milliseconds]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="pg_stat_get_xact_numscans" id="Procedure_5cb8ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_numscans(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_numscans$function$
;]]></string>
			<comment><![CDATA[statistics: number of scans done for table/index in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_deleted" id="Procedure_15850ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_deleted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_deleted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples deleted in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_fetched" id="Procedure_424e0ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_fetched(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_fetched$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples fetched by idxscan in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_hot_updated" id="Procedure_4c9c864" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_hot_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_hot_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples hot updated in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_inserted" id="Procedure_337dd9e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_inserted(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_inserted$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples inserted in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_returned" id="Procedure_516543a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_returned(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_returned$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples read by seqscan in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_get_xact_tuples_updated" id="Procedure_197faf9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_get_xact_tuples_updated(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stat_get_xact_tuples_updated$function$
;]]></string>
			<comment><![CDATA[statistics: number of tuples updated in current transaction]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_stat_reset" id="Procedure_445f45c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE
AS $function$pg_stat_reset$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for current database]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_stat_reset_shared" id="Procedure_1cb3698" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_shared(text)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_shared$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics shared across the cluster]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_stat_reset_single_function_counters" id="Procedure_42c9a07" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_function_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_function_counters$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single function in the current database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_stat_reset_single_table_counters" id="Procedure_5e22e8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stat_reset_single_table_counters(oid)
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_stat_reset_single_table_counters$function$
;]]></string>
			<comment><![CDATA[statistics: reset collected statistics for a single table or index in the current database]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_statistics_obj_is_visible" id="Procedure_7a4600" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_statistics_obj_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_statistics_obj_is_visible$function$
;]]></string>
			<comment><![CDATA[is statistics object visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_stop_backup" id="Procedure_3cd9bb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stop_backup(exclusive boolean, wait_for_archive boolean DEFAULT true, OUT lsn pg_lsn, OUT labelfile text, OUT spcmapfile text)
 RETURNS SETOF record
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stop_backup_v2$function$
;]]></string>
			<comment><![CDATA[finish taking an online backup]]></comment>
			<input_param name="exclusive" jt="-7" type="bool" />
			<input_param name="wait_for_archive" jt="-7" type="bool" />
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="labelfile" jt="12" type="text" />
			<input_param name="spcmapfile" jt="12" type="text" />
		</procedure>
		<procedure name="pg_stop_backup" id="Procedure_443f77c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_stop_backup()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$pg_stop_backup$function$
;]]></string>
			<comment><![CDATA[finish taking an online backup]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_switch_wal" id="Procedure_150eca5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_switch_wal()
 RETURNS pg_lsn
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_switch_wal$function$
;]]></string>
			<comment><![CDATA[switch to new wal file]]></comment>
			<result_param name="returnValue" jt="1111" type="pg_lsn" />
		</procedure>
		<procedure name="pg_table_is_visible" id="Procedure_1defe5d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_table_is_visible$function$
;]]></string>
			<comment><![CDATA[is table visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_table_size" id="Procedure_28c7224" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_table_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_table_size$function$
;]]></string>
			<comment><![CDATA[disk space usage for the specified table, including TOAST, free space and visibility map]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_tablespace_databases" id="Procedure_16ec1bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_databases(oid)
 RETURNS SETOF oid
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_databases$function$
;]]></string>
			<comment><![CDATA[get OIDs of databases in a tablespace]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="oid" />
		</procedure>
		<procedure name="pg_tablespace_location" id="Procedure_48c006c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_location(oid)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_tablespace_location$function$
;]]></string>
			<comment><![CDATA[tablespace location]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_tablespace_size" id="Procedure_4f1e4a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(name)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_name$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified tablespace]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_tablespace_size" id="Procedure_fa8f16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_tablespace_size(oid)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_tablespace_size_oid$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified tablespace]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_terminate_backend" id="Procedure_3f4cdd4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_terminate_backend(integer)
 RETURNS boolean
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_terminate_backend$function$
;]]></string>
			<comment><![CDATA[terminate a server process]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_timezone_abbrevs" id="Procedure_30d5ca7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_abbrevs(OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_abbrevs$function$
;]]></string>
			<comment><![CDATA[get the available time zone abbreviations]]></comment>
			<input_param name="abbrev" jt="12" type="text" />
			<input_param name="utc_offset" jt="1111" type="interval" />
			<input_param name="is_dst" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_timezone_names" id="Procedure_3c8346a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_timezone_names(OUT name text, OUT abbrev text, OUT utc_offset interval, OUT is_dst boolean)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pg_timezone_names$function$
;]]></string>
			<comment><![CDATA[get the available time zone names]]></comment>
			<input_param name="name" jt="12" type="text" />
			<input_param name="abbrev" jt="12" type="text" />
			<input_param name="utc_offset" jt="1111" type="interval" />
			<input_param name="is_dst" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_total_relation_size" id="Procedure_44b7db5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_total_relation_size(regclass)
 RETURNS bigint
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_total_relation_size$function$
;]]></string>
			<comment><![CDATA[total disk space usage for the specified table and associated indexes]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="pg_trigger_depth" id="Procedure_52f93a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_trigger_depth()
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$pg_trigger_depth$function$
;]]></string>
			<comment><![CDATA[current trigger depth]]></comment>
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_try_advisory_lock" id="Procedure_460a2f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_int4$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_lock" id="Procedure_e332b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_lock_shared" id="Procedure_36d52e7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_shared_int4$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_lock_shared" id="Procedure_f7e179" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_xact_lock" id="Procedure_43ca485" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_int4$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_xact_lock" id="Procedure_38c9551" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_int8$function$
;]]></string>
			<comment><![CDATA[obtain exclusive advisory lock if available]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_xact_lock_shared" id="Procedure_184d994" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(integer, integer)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_shared_int4$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_try_advisory_xact_lock_shared" id="Procedure_ea1214" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_try_advisory_xact_lock_shared(bigint)
 RETURNS boolean
 LANGUAGE internal
 STRICT
AS $function$pg_try_advisory_xact_lock_shared_int8$function$
;]]></string>
			<comment><![CDATA[obtain shared advisory lock if available]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_ts_config_is_visible" id="Procedure_5611a9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_config_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_config_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search configuration visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_ts_dict_is_visible" id="Procedure_19629d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_dict_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_dict_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search dictionary visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_ts_parser_is_visible" id="Procedure_a47fe2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_parser_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_parser_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search parser visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_ts_template_is_visible" id="Procedure_319dba2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_ts_template_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_ts_template_is_visible$function$
;]]></string>
			<comment><![CDATA[is text search template visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_type_is_visible" id="Procedure_212d9ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_type_is_visible(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 10
AS $function$pg_type_is_visible$function$
;]]></string>
			<comment><![CDATA[is type visible in search path?]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pg_typeof" id="Procedure_3c990ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_typeof("any")
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE
AS $function$pg_typeof$function$
;]]></string>
			<comment><![CDATA[type of the argument]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="1111" type="regtype" />
		</procedure>
		<procedure name="pg_wal_lsn_diff" id="Procedure_1be532c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_lsn_diff(pg_lsn, pg_lsn)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_wal_lsn_diff$function$
;]]></string>
			<comment><![CDATA[difference in bytes, given two wal locations]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<input_param name="$2" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="pg_wal_replay_pause" id="Procedure_10ab347" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_pause()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_pause$function$
;]]></string>
			<comment><![CDATA[pause wal replay]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_wal_replay_resume" id="Procedure_5b053ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_wal_replay_resume()
 RETURNS void
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_wal_replay_resume$function$
;]]></string>
			<comment><![CDATA[resume wal replay, if it was paused]]></comment>
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="pg_walfile_name" id="Procedure_1bfb2b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name(pg_lsn)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name$function$
;]]></string>
			<comment><![CDATA[wal filename, given a wal location]]></comment>
			<input_param name="$1" jt="1111" type="pg_lsn" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="pg_walfile_name_offset" id="Procedure_1d31068" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_walfile_name_offset(lsn pg_lsn, OUT file_name text, OUT file_offset integer)
 RETURNS record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pg_walfile_name_offset$function$
;]]></string>
			<comment><![CDATA[wal filename and byte offset, given a wal location]]></comment>
			<input_param name="lsn" jt="1111" type="pg_lsn" />
			<input_param name="file_name" jt="12" type="text" />
			<input_param name="file_offset" jt="4" type="int4" />
		</procedure>
		<procedure name="pg_xact_commit_timestamp" id="Procedure_1e2dd66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pg_xact_commit_timestamp(xid)
 RETURNS timestamp with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$pg_xact_commit_timestamp$function$
;]]></string>
			<comment><![CDATA[get commit timestamp of a transaction]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="phraseto_tsquery" id="Procedure_2f34782" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="phraseto_tsquery" id="Procedure_205092a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.phraseto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$phraseto_tsquery$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="pi" id="Procedure_26f1e37" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pi()
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpi$function$
;]]></string>
			<comment><![CDATA[PI]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="plainto_tsquery" id="Procedure_4b4d4b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="plainto_tsquery" id="Procedure_56ed831" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plainto_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$plainto_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsquery]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="plpgsql_call_handler" id="Procedure_4d671e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_call_handler()
 RETURNS language_handler
 LANGUAGE c
AS '$libdir/plpgsql', $function$plpgsql_call_handler$function$
;]]></string>
			<result_param name="returnValue" jt="1111" type="language_handler" />
		</procedure>
		<procedure name="plpgsql_inline_handler" id="Procedure_bb589" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_inline_handler(internal)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_inline_handler$function$
;]]></string>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="plpgsql_validator" id="Procedure_2379803" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.plpgsql_validator(oid)
 RETURNS void
 LANGUAGE c
 STRICT
AS '$libdir/plpgsql', $function$plpgsql_validator$function$
;]]></string>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="point" id="Procedure_d3ba94" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(polygon)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point" id="Procedure_1f1487f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(box)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point" id="Procedure_4c8e3f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(path)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point" id="Procedure_557d5b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(lseg)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$lseg_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="lseg" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point" id="Procedure_1eb831b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(double precision, double precision)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$construct_point$function$
;]]></string>
			<comment><![CDATA[convert x, y to point]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point" id="Procedure_4642394" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point(circle)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_center$function$
;]]></string>
			<comment><![CDATA[center of]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_above" id="Procedure_54b5c5c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_above(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_above$function$
;]]></string>
			<comment><![CDATA[implementation of >^ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_add" id="Procedure_4764b5b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_add(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_add$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_below" id="Procedure_3cca4e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_below(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_below$function$
;]]></string>
			<comment><![CDATA[implementation of <^ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_distance" id="Procedure_304fe45" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_distance(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="point_div" id="Procedure_21df770" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_div(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_div$function$
;]]></string>
			<comment><![CDATA[implementation of / operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_eq" id="Procedure_2cab328" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_eq(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_eq$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_horiz" id="Procedure_132e065" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_horiz(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_horiz$function$
;]]></string>
			<comment><![CDATA[implementation of ?- operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_in" id="Procedure_4c457af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_in(cstring)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_left" id="Procedure_4b426ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_left(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_mul" id="Procedure_5e7014c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_mul(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_mul$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_ne" id="Procedure_510f7ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_ne(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_out" id="Procedure_22194ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_out(point)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="point_recv" id="Procedure_57abdaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_recv(internal)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_right" id="Procedure_2c0a31c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_right(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="point_send" id="Procedure_3bedb61" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_send(point)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="point_sub" id="Procedure_1802bac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_sub(point, point)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_sub$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="point_vert" id="Procedure_a06cd3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.point_vert(point, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_vert$function$
;]]></string>
			<comment><![CDATA[implementation of ?| operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_above" id="Procedure_39025af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_above(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_above$function$
;]]></string>
			<comment><![CDATA[implementation of |>> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_below" id="Procedure_2875864" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_below(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_below$function$
;]]></string>
			<comment><![CDATA[implementation of <<| operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_center" id="Procedure_484d2bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_center(polygon)
 RETURNS point
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_center$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="point" />
		</procedure>
		<procedure name="poly_contain" id="Procedure_424e1ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_contain_pt" id="Procedure_216b25e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contain_pt(polygon, point)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contain_pt$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_contained" id="Procedure_15f5c7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_contained(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_contained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_distance" id="Procedure_3134c90" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_distance(polygon, polygon)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_distance$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="poly_in" id="Procedure_4b904d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_in(cstring)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="poly_left" id="Procedure_1a99e68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_left(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_left$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_npoints" id="Procedure_2b824e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_npoints(polygon)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_npoints$function$
;]]></string>
			<comment><![CDATA[implementation of # operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="poly_out" id="Procedure_9e5352" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_out(polygon)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="poly_overabove" id="Procedure_25e3e67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overabove(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overabove$function$
;]]></string>
			<comment><![CDATA[implementation of |&> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_overbelow" id="Procedure_2dbd11a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overbelow(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overbelow$function$
;]]></string>
			<comment><![CDATA[implementation of &<| operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_overlap" id="Procedure_30c4748" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overlap(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overlap$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_overleft" id="Procedure_31e3d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overleft(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_overright" id="Procedure_14e58fb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_overright(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_recv" id="Procedure_21909b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_recv(internal)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="poly_right" id="Procedure_5b27fdb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_right(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_right$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_same" id="Procedure_5c16d71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_same(polygon, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_same$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="poly_send" id="Procedure_32ab234" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.poly_send(polygon)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$poly_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="polygon" id="Procedure_1fb0feb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(circle)
 RETURNS polygon
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.polygon(12, $1)$function$
;]]></string>
			<comment><![CDATA[convert circle to 12-vertex polygon]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="polygon" id="Procedure_1d33642" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(integer, circle)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_poly$function$
;]]></string>
			<comment><![CDATA[convert vertex count and circle to polygon]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="polygon" id="Procedure_53edc36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(path)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_poly$function$
;]]></string>
			<comment><![CDATA[convert path to polygon]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="polygon" id="Procedure_58101d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.polygon(box)
 RETURNS polygon
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_poly$function$
;]]></string>
			<comment><![CDATA[convert box to polygon]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="1111" type="polygon" />
		</procedure>
		<procedure name="popen" id="Procedure_58e498f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.popen(path)
 RETURNS path
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$path_open$function$
;]]></string>
			<comment><![CDATA[open path]]></comment>
			<input_param name="$1" jt="1111" type="path" />
			<result_param name="returnValue" jt="1111" type="path" />
		</procedure>
		<procedure name="position" id="Procedure_450e615" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textpos$function$
;]]></string>
			<comment><![CDATA[position of substring]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="position" id="Procedure_1048e10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bytea, bytea)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteapos$function$
;]]></string>
			<comment><![CDATA[position of substring]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="-2" type="bytea" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="position" id="Procedure_4d7ae56" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."position"(bit, bit)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitposition$function$
;]]></string>
			<comment><![CDATA[position of sub-bitstring]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="-7" type="bit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="positionjoinsel" id="Procedure_23e6b17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity for position-comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="positionsel" id="Procedure_24285d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.positionsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$positionsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for position-comparison operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="postgresql_fdw_validator" id="Procedure_ecf4aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.postgresql_fdw_validator(text[], oid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$postgresql_fdw_validator$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="2003" type="_text" />
			<input_param name="$2" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pow" id="Procedure_4a5f23b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="pow" id="Procedure_522dbaa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pow(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="power" id="Procedure_16e40ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(numeric, numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_power$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="power" id="Procedure_da70a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.power(double precision, double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dpow$function$
;]]></string>
			<comment><![CDATA[exponentiation]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="prsd_end" id="Procedure_469bea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_end(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_end$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="prsd_headline" id="Procedure_5e795d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_headline(internal, internal, tsquery)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_headline$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="prsd_lextype" id="Procedure_3316a0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_lextype(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_lextype$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="prsd_nexttoken" id="Procedure_3cb6068" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_nexttoken(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_nexttoken$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="prsd_start" id="Procedure_330cc34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.prsd_start(internal, integer)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$prsd_start$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="pt_contained_circle" id="Procedure_59994d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_circle(point, circle)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_circle$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="circle" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="pt_contained_poly" id="Procedure_3558575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.pt_contained_poly(point, polygon)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$pt_contained_poly$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="polygon" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="query_to_xml" id="Procedure_23d0bf0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml$function$
;]]></string>
			<comment><![CDATA[map query result to XML]]></comment>
			<input_param name="query" jt="12" type="text" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="query_to_xml_and_xmlschema" id="Procedure_2894d93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xml_and_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map query result and structure to XML and XML Schema]]></comment>
			<input_param name="query" jt="12" type="text" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="query_to_xmlschema" id="Procedure_27293e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.query_to_xmlschema(query text, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STRICT COST 100
AS $function$query_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map query result structure to XML Schema]]></comment>
			<input_param name="query" jt="12" type="text" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="querytree" id="Procedure_5e7284b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.querytree(tsquery)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerytree$function$
;]]></string>
			<comment><![CDATA[show real useful query for GiST index]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="quote_ident" id="Procedure_5b37bc8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_ident(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_ident$function$
;]]></string>
			<comment><![CDATA[quote an identifier for usage in a querystring]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="quote_literal" id="Procedure_343a280" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(anyelement)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.quote_literal($1::pg_catalog.text)$function$
;]]></string>
			<comment><![CDATA[quote a data value for usage in a querystring]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="quote_literal" id="Procedure_3259f4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_literal(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$quote_literal$function$
;]]></string>
			<comment><![CDATA[quote a literal for usage in a querystring]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="quote_nullable" id="Procedure_29da953" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(anyelement)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE COST 1
AS $function$select pg_catalog.quote_nullable($1::pg_catalog.text)$function$
;]]></string>
			<comment><![CDATA[quote a possibly-null data value for usage in a querystring]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="quote_nullable" id="Procedure_cfe115" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.quote_nullable(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$quote_nullable$function$
;]]></string>
			<comment><![CDATA[quote a possibly-null literal for usage in a querystring]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="radians" id="Procedure_2f929b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radians(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$radians$function$
;]]></string>
			<comment><![CDATA[degrees to radians]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="radius" id="Procedure_30d7177" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.radius(circle)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$circle_radius$function$
;]]></string>
			<comment><![CDATA[radius of circle]]></comment>
			<input_param name="$1" jt="1111" type="circle" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="random" id="Procedure_4dd19e1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.random()
 RETURNS double precision
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$drandom$function$
;]]></string>
			<comment><![CDATA[random value]]></comment>
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="range_adjacent" id="Procedure_597b9ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_adjacent(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_adjacent$function$
;]]></string>
			<comment><![CDATA[implementation of -|- operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_after" id="Procedure_3ac7ab8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_after(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_after$function$
;]]></string>
			<comment><![CDATA[implementation of >> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_before" id="Procedure_29eb9e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_before(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_before$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_cmp" id="Procedure_b82e65" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_cmp(anyrange, anyrange)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="range_contained_by" id="Procedure_3a4cabe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contained_by(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contained_by$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_contains" id="Procedure_2fbf590" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_contains_elem" id="Procedure_38e4ffc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_contains_elem(anyrange, anyelement)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_contains_elem$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_eq" id="Procedure_4171117" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_eq(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_ge" id="Procedure_522201f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ge(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_gist_compress" id="Procedure_48b4c77" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_compress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_compress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_consistent" id="Procedure_2954ae0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_consistent(internal, anyrange, smallint, oid, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_consistent$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<input_param name="$3" jt="5" type="int2" />
			<input_param name="$4" jt="-5" type="oid" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_gist_decompress" id="Procedure_3f3802c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_decompress(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_decompress$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_fetch" id="Procedure_40a858c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_fetch(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_fetch$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_penalty" id="Procedure_358ce9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_penalty(internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_penalty$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_picksplit" id="Procedure_471864" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_picksplit(internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_picksplit$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_same" id="Procedure_1cf29ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_same(anyrange, anyrange, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_same$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<input_param name="$3" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="range_gist_union" id="Procedure_464f0d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gist_union(internal, internal)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gist_union$function$
;]]></string>
			<comment><![CDATA[GiST support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_gt" id="Procedure_961006" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_gt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_in" id="Procedure_2810c58" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_in(cstring, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_intersect" id="Procedure_a215c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_intersect(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_intersect$function$
;]]></string>
			<comment><![CDATA[implementation of * operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_le" id="Procedure_c1568f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_le(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_lt" id="Procedure_4f18ec5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_lt(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_merge" id="Procedure_4256990" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_merge(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_merge$function$
;]]></string>
			<comment><![CDATA[the smallest range which includes both of the given ranges]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_minus" id="Procedure_474e733" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_minus(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_minus$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_ne" id="Procedure_20a899d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_ne(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_out" id="Procedure_331de76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_out(anyrange)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="range_overlaps" id="Procedure_3cf093b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overlaps(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overlaps$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_overleft" id="Procedure_3b40322" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overleft(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overleft$function$
;]]></string>
			<comment><![CDATA[implementation of &< operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_overright" id="Procedure_30027b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_overright(anyrange, anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_overright$function$
;]]></string>
			<comment><![CDATA[implementation of &> operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_recv" id="Procedure_4de645a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_recv(internal, oid, integer)
 RETURNS anyrange
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="range_send" id="Procedure_27ac014" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_send(anyrange)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="range_typanalyze" id="Procedure_3e5d9d6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$range_typanalyze$function$
;]]></string>
			<comment><![CDATA[range typanalyze]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="range_union" id="Procedure_364bc70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.range_union(anyrange, anyrange)
 RETURNS anyrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_union$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<input_param name="$2" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyrange" />
		</procedure>
		<procedure name="rangesel" id="Procedure_2d0d204" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rangesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$rangesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity for range operators]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="rank" id="Procedure_14dccb5" isSystem="false" params_known="y" >
			<string><![CDATA[create function rank window_rank;]]></string>
			<comment><![CDATA[rank of hypothetical row]]></comment>
			<input_param name="$1" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="rank" id="Procedure_492068d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rank()
 RETURNS bigint
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE
AS $function$window_rank$function$
;]]></string>
			<comment><![CDATA[integer rank with gaps]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="rank_final" id="Procedure_4438dc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rank_final(internal, VARIADIC "any")
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$hypothetical_rank_final$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="any" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="record_eq" id="Procedure_df2990" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_ge" id="Procedure_40c8bcb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_gt" id="Procedure_246812b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_eq" id="Procedure_57618b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_eq(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_eq$function$
;]]></string>
			<comment><![CDATA[implementation of *= operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_ge" id="Procedure_1e0e17e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ge(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ge$function$
;]]></string>
			<comment><![CDATA[implementation of *>= operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_gt" id="Procedure_42c1ef4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_gt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_gt$function$
;]]></string>
			<comment><![CDATA[implementation of *> operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_le" id="Procedure_28a91c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_le$function$
;]]></string>
			<comment><![CDATA[implementation of *<= operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_lt" id="Procedure_1550545" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_lt$function$
;]]></string>
			<comment><![CDATA[implementation of *< operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_image_ne" id="Procedure_5c22fdc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_image_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_image_ne$function$
;]]></string>
			<comment><![CDATA[implementation of *<> operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_in" id="Procedure_8d8d6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_in(cstring, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="record_le" id="Procedure_37aefbf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_le(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_lt" id="Procedure_1139f70" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_lt(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_ne" id="Procedure_4c44793" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_ne(record, record)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$record_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="1111" type="record" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="record_out" id="Procedure_f2a2ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_out(record)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="record_recv" id="Procedure_fbfc7a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_recv(internal, oid, integer)
 RETURNS record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="record" />
		</procedure>
		<procedure name="record_send" id="Procedure_1e17462" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.record_send(record)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$record_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regclass" id="Procedure_7b3d72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$text_regclass$function$
;]]></string>
			<comment><![CDATA[convert text to regclass]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="regclassin" id="Procedure_fcc3f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassin(cstring)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="regclassout" id="Procedure_4fbeb1d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassout(regclass)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regclassout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regclassrecv" id="Procedure_401af55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclassrecv(internal)
 RETURNS regclass
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclassrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="regclasssend" id="Procedure_1ea7aed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regclasssend(regclass)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regclasssend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regconfigin" id="Procedure_2f00ae5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigin(cstring)
 RETURNS regconfig
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regconfig" />
		</procedure>
		<procedure name="regconfigout" id="Procedure_3a31cee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigout(regconfig)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regconfigout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regconfigrecv" id="Procedure_55ed73c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigrecv(internal)
 RETURNS regconfig
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regconfig" />
		</procedure>
		<procedure name="regconfigsend" id="Procedure_4ecddf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regconfigsend(regconfig)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regconfigsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regdictionaryin" id="Procedure_4d3997a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryin(cstring)
 RETURNS regdictionary
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regdictionary" />
		</procedure>
		<procedure name="regdictionaryout" id="Procedure_16b3152" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryout(regdictionary)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regdictionaryout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regdictionary" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regdictionaryrecv" id="Procedure_30e5c51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionaryrecv(internal)
 RETURNS regdictionary
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionaryrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regdictionary" />
		</procedure>
		<procedure name="regdictionarysend" id="Procedure_47fd78d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regdictionarysend(regdictionary)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regdictionarysend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regdictionary" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regexeqjoinsel" id="Procedure_1deb49a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of regex match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="regexeqsel" id="Procedure_6c5fdc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexeqsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexeqsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of regex match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="regexnejoinsel" id="Procedure_3193e3c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnejoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnejoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of regex non-match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="regexnesel" id="Procedure_48e0c23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexnesel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regexnesel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of regex non-match]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="regexp_match" id="Procedure_db452e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match$function$
;]]></string>
			<comment><![CDATA[find first match for regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_match" id="Procedure_1f3fbf7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_match(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_match_no_flags$function$
;]]></string>
			<comment><![CDATA[find first match for regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_matches" id="Procedure_2e1530e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 10
AS $function$regexp_matches$function$
;]]></string>
			<comment><![CDATA[find match(es) for regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_matches" id="Procedure_4ffc9f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_matches(text, text)
 RETURNS SETOF text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 1
AS $function$regexp_matches_no_flags$function$
;]]></string>
			<comment><![CDATA[find match(es) for regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_replace" id="Procedure_10d3276" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="regexp_replace" id="Procedure_501b5c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexreplace_noopt$function$
;]]></string>
			<comment><![CDATA[replace text using regexp]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="regexp_split_to_array" id="Procedure_3c4c4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_split_to_array" id="Procedure_3039734" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_array_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="regexp_split_to_table" id="Procedure_297b1b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="regexp_split_to_table" id="Procedure_55238dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regexp_split_to_table(text, text)
 RETURNS SETOF text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regexp_split_to_table_no_flags$function$
;]]></string>
			<comment><![CDATA[split string by pattern]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="regnamespacein" id="Procedure_5cd214e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacein(cstring)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespacein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regnamespace" />
		</procedure>
		<procedure name="regnamespaceout" id="Procedure_3a35c7b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespaceout(regnamespace)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regnamespaceout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regnamespace" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regnamespacerecv" id="Procedure_7500ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacerecv(internal)
 RETURNS regnamespace
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regnamespace" />
		</procedure>
		<procedure name="regnamespacesend" id="Procedure_55cb21c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regnamespacesend(regnamespace)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regnamespacesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regnamespace" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regoperatorin" id="Procedure_2f3e44c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorin(cstring)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regoperator" />
		</procedure>
		<procedure name="regoperatorout" id="Procedure_2fedc6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorout(regoperator)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperatorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regoperator" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regoperatorrecv" id="Procedure_49e56bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorrecv(internal)
 RETURNS regoperator
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regoperator" />
		</procedure>
		<procedure name="regoperatorsend" id="Procedure_5edc102" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperatorsend(regoperator)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperatorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regoperator" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regoperin" id="Procedure_544a1a0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperin(cstring)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regoper" />
		</procedure>
		<procedure name="regoperout" id="Procedure_3728f00" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperout(regoper)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regoperout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regoper" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regoperrecv" id="Procedure_1441d8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regoperrecv(internal)
 RETURNS regoper
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regoperrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regoper" />
		</procedure>
		<procedure name="regopersend" id="Procedure_13da48a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regopersend(regoper)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regopersend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regoper" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regprocedurein" id="Procedure_454982d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurein(cstring)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedurein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regprocedure" />
		</procedure>
		<procedure name="regprocedureout" id="Procedure_59ada36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedureout(regprocedure)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocedureout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regprocedure" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regprocedurerecv" id="Procedure_4dc8e34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocedurerecv(internal)
 RETURNS regprocedure
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocedurerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regprocedure" />
		</procedure>
		<procedure name="regproceduresend" id="Procedure_1bd87bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regproceduresend(regprocedure)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regproceduresend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regprocedure" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regprocin" id="Procedure_2ee6512" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocin(cstring)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regproc" />
		</procedure>
		<procedure name="regprocout" id="Procedure_3f35fb7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocout(regproc)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regprocout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regproc" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regprocrecv" id="Procedure_5227e0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocrecv(internal)
 RETURNS regproc
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regproc" />
		</procedure>
		<procedure name="regprocsend" id="Procedure_23b1f69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regprocsend(regproc)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regprocsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regproc" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regrolein" id="Procedure_4912bfe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolein(cstring)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regrolein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regrole" />
		</procedure>
		<procedure name="regroleout" id="Procedure_2d9e32d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regroleout(regrole)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regroleout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regrole" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regrolerecv" id="Procedure_45803df" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolerecv(internal)
 RETURNS regrole
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regrole" />
		</procedure>
		<procedure name="regrolesend" id="Procedure_520a290" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regrolesend(regrole)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regrolesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regrole" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="regtypein" id="Procedure_393ec50" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypein(cstring)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="regtype" />
		</procedure>
		<procedure name="regtypeout" id="Procedure_5947442" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypeout(regtype)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$regtypeout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regtype" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="regtyperecv" id="Procedure_565373e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtyperecv(internal)
 RETURNS regtype
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtyperecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="regtype" />
		</procedure>
		<procedure name="regtypesend" id="Procedure_41de632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.regtypesend(regtype)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$regtypesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="regtype" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="reltime" id="Procedure_472d889" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltime(interval)
 RETURNS reltime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_reltime$function$
;]]></string>
			<comment><![CDATA[convert interval to reltime]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="1111" type="reltime" />
		</procedure>
		<procedure name="reltimeeq" id="Procedure_171112c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimeeq(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimeeq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimege" id="Procedure_313d237" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimege(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimege$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimegt" id="Procedure_2ca3f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimegt(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimegt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimein" id="Procedure_bfa194" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimein(cstring)
 RETURNS reltime
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$reltimein$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="reltime" />
		</procedure>
		<procedure name="reltimele" id="Procedure_5ba845" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimele(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimele$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimelt" id="Procedure_4ebe359" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimelt(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimelt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimene" id="Procedure_52a0e39" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimene(reltime, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$reltimene$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="reltimeout" id="Procedure_118ca6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimeout(reltime)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$reltimeout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="reltimerecv" id="Procedure_43744b3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimerecv(internal)
 RETURNS reltime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$reltimerecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="reltime" />
		</procedure>
		<procedure name="reltimesend" id="Procedure_216085c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reltimesend(reltime)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$reltimesend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="repeat" id="Procedure_51f5888" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.repeat(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$repeat$function$
;]]></string>
			<comment><![CDATA[replicate string n times]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="replace" id="Procedure_1dacb48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.replace(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$replace_text$function$
;]]></string>
			<comment><![CDATA[replace all occurrences in string of old_substr with new_substr]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="reverse" id="Procedure_57e05b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.reverse(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_reverse$function$
;]]></string>
			<comment><![CDATA[reverse text]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="right" id="Procedure_1df307" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."right"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_right$function$
;]]></string>
			<comment><![CDATA[extract the last n characters]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="round" id="Procedure_1445893" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.round($1,0)$function$
;]]></string>
			<comment><![CDATA[value rounded to 'scale' of zero]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="round" id="Procedure_453a2f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_round$function$
;]]></string>
			<comment><![CDATA[value rounded to 'scale']]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="round" id="Procedure_d2ae7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.round(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dround$function$
;]]></string>
			<comment><![CDATA[round to nearest integer]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="row_number" id="Procedure_313e3fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_number()
 RETURNS bigint
 LANGUAGE internal
 WINDOW IMMUTABLE PARALLEL SAFE
AS $function$window_row_number$function$
;]]></string>
			<comment><![CDATA[row number within partition]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="row_security_active" id="Procedure_2111a40" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active_name$function$
;]]></string>
			<comment><![CDATA[row security for current context active on table by table name]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="row_security_active" id="Procedure_3f080e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_security_active(oid)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_security_active$function$
;]]></string>
			<comment><![CDATA[row security for current context active on table by table oid]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="row_to_json" id="Procedure_69e48" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record, boolean)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json_pretty$function$
;]]></string>
			<comment><![CDATA[map row to json with optional pretty printing]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<input_param name="$2" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="row_to_json" id="Procedure_2742c95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.row_to_json(record)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$row_to_json$function$
;]]></string>
			<comment><![CDATA[map row to json]]></comment>
			<input_param name="$1" jt="1111" type="record" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="rpad" id="Procedure_3c5f2d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.rpad($1, $2, ' ')$function$
;]]></string>
			<comment><![CDATA[right-pad string to length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="rpad" id="Procedure_1e17f55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rpad(text, integer, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rpad$function$
;]]></string>
			<comment><![CDATA[right-pad string to length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="rtrim" id="Procedure_13b8428" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim1$function$
;]]></string>
			<comment><![CDATA[trim spaces from right end of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="rtrim" id="Procedure_2da69a6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.rtrim(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim$function$
;]]></string>
			<comment><![CDATA[trim selected characters from right end of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="scalargtjoinsel" id="Procedure_3fdf037" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of > and related operators on scalar datatypes]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="scalargtsel" id="Procedure_3c85793" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalargtsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalargtsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of > and related operators on scalar datatypes]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="scalarltjoinsel" id="Procedure_5aec10b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of < and related operators on scalar datatypes]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="scalarltsel" id="Procedure_4bf46c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scalarltsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$scalarltsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of < and related operators on scalar datatypes]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="scale" id="Procedure_31dd3a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.scale(numeric)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_scale$function$
;]]></string>
			<comment><![CDATA[number of decimal digits in the fractional part]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="schema_to_xml" id="Procedure_3192fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml$function$
;]]></string>
			<comment><![CDATA[map schema contents to XML]]></comment>
			<input_param name="schema" jt="12" type="name" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="schema_to_xml_and_xmlschema" id="Procedure_59c9fdf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xml_and_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map schema contents and structure to XML and XML Schema]]></comment>
			<input_param name="schema" jt="12" type="name" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="schema_to_xmlschema" id="Procedure_22f7456" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.schema_to_xmlschema(schema name, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$schema_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map schema structure to XML Schema]]></comment>
			<input_param name="schema" jt="12" type="name" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="session_user" id="Procedure_1149bed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."session_user"()
 RETURNS name
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$session_user$function$
;]]></string>
			<comment><![CDATA[session user name]]></comment>
			<result_param name="returnValue" jt="12" type="name" />
		</procedure>
		<procedure name="set_bit" id="Procedure_3c1c330" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaSetBit$function$
;]]></string>
			<comment><![CDATA[set bit]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="set_bit" id="Procedure_3f6fc0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_bit(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsetbit$function$
;]]></string>
			<comment><![CDATA[set bit]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="set_byte" id="Procedure_4ef7e6d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_byte(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$byteaSetByte$function$
;]]></string>
			<comment><![CDATA[set byte]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="set_config" id="Procedure_418a4b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_config(text, text, boolean)
 RETURNS text
 LANGUAGE internal
AS $function$set_config_by_name$function$
;]]></string>
			<comment><![CDATA[SET X as a function]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="set_masklen" id="Procedure_22b9ebe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(cidr, integer)
 RETURNS cidr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$cidr_set_masklen$function$
;]]></string>
			<comment><![CDATA[change netmask of cidr]]></comment>
			<input_param name="$1" jt="1111" type="cidr" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cidr" />
		</procedure>
		<procedure name="set_masklen" id="Procedure_5de5292" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.set_masklen(inet, integer)
 RETURNS inet
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$inet_set_masklen$function$
;]]></string>
			<comment><![CDATA[change netmask of inet]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="inet" />
		</procedure>
		<procedure name="setseed" id="Procedure_596102c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setseed(double precision)
 RETURNS void
 LANGUAGE internal
 PARALLEL RESTRICTED STRICT
AS $function$setseed$function$
;]]></string>
			<comment><![CDATA[set random seed]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="setval" id="Procedure_34a567f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint, boolean)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval3_oid$function$
;]]></string>
			<comment><![CDATA[set sequence value and is_called status]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="-5" type="int8" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="setval" id="Procedure_678aa2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setval(regclass, bigint)
 RETURNS bigint
 LANGUAGE internal
 STRICT
AS $function$setval_oid$function$
;]]></string>
			<comment><![CDATA[set sequence value]]></comment>
			<input_param name="$1" jt="1111" type="regclass" />
			<input_param name="$2" jt="-5" type="int8" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="setweight" id="Procedure_4cb41ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char")
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight$function$
;]]></string>
			<comment><![CDATA[set given weight for whole tsvector]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1" type="char" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="setweight" id="Procedure_e73312" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.setweight(tsvector, "char", text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_setweight_by_filter$function$
;]]></string>
			<comment><![CDATA[set given weight for given lexemes]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1" type="char" />
			<input_param name="$3" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="shell_in" id="Procedure_3af688" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_in(cstring)
 RETURNS opaque
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$shell_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="opaque" />
		</procedure>
		<procedure name="shell_out" id="Procedure_4591abf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shell_out(opaque)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$shell_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="opaque" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="shift_jis_2004_to_euc_jis_2004" id="Procedure_2e2b5cb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_euc_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc2004_sjis2004', $function$shift_jis_2004_to_euc_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SHIFT_JIS_2004 to EUC_JIS_2004]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="shift_jis_2004_to_utf8" id="Procedure_3e028ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shift_jis_2004_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$shift_jis_2004_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SHIFT_JIS_2004 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="shobj_description" id="Procedure_2f44fb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.shobj_description(oid, name)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$select description from pg_catalog.pg_shdescription where objoid = $1 and classoid = (select oid from pg_catalog.pg_class where relname = $2 and relnamespace = 11)$function$
;]]></string>
			<comment><![CDATA[get description for object id and shared catalog name]]></comment>
			<input_param name="$1" jt="-5" type="oid" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="sign" id="Procedure_2502242" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsign$function$
;]]></string>
			<comment><![CDATA[sign of value]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="sign" id="Procedure_5a7aa89" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sign(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sign$function$
;]]></string>
			<comment><![CDATA[sign of value]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="similar_escape" id="Procedure_4b1d8b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.similar_escape(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$similar_escape$function$
;]]></string>
			<comment><![CDATA[convert SQL99 regexp pattern to POSIX style]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="sin" id="Procedure_357f60a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sin(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsin$function$
;]]></string>
			<comment><![CDATA[sine]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="sind" id="Procedure_1ae3f4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sind(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsind$function$
;]]></string>
			<comment><![CDATA[sine, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="sjis_to_euc_jp" id="Procedure_42b1bf5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to EUC_JP]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="sjis_to_mic" id="Procedure_4aea731" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/euc_jp_and_sjis', $function$sjis_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="sjis_to_utf8" id="Procedure_5696f29" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sjis_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$sjis_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for SJIS to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="slope" id="Procedure_1e8add3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.slope(point, point)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$point_slope$function$
;]]></string>
			<comment><![CDATA[slope between points]]></comment>
			<input_param name="$1" jt="1111" type="point" />
			<input_param name="$2" jt="1111" type="point" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="smgreq" id="Procedure_3eb6e73" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.smgreq(smgr, smgr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$smgreq$function$
;]]></string>
			<comment><![CDATA[storage manager]]></comment>
			<input_param name="$1" jt="1111" type="smgr" />
			<input_param name="$2" jt="1111" type="smgr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="smgrin" id="Procedure_42d966" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.smgrin(cstring)
 RETURNS smgr
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$smgrin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="smgr" />
		</procedure>
		<procedure name="smgrne" id="Procedure_37eb29c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.smgrne(smgr, smgr)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$smgrne$function$
;]]></string>
			<comment><![CDATA[storage manager]]></comment>
			<input_param name="$1" jt="1111" type="smgr" />
			<input_param name="$2" jt="1111" type="smgr" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="smgrout" id="Procedure_35d2adb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.smgrout(smgr)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$smgrout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="smgr" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="spg_box_quad_choose" id="Procedure_46b3f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_box_quad_config" id="Procedure_34a0c43" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_box_quad_inner_consistent" id="Procedure_385b3fd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_box_quad_leaf_consistent" id="Procedure_4b7cda4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="spg_box_quad_picksplit" id="Procedure_19fccfe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_box_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_box_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over box]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_kd_choose" id="Procedure_2976020" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_kd_config" id="Procedure_5ce50fe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_kd_inner_consistent" id="Procedure_142788b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_kd_picksplit" id="Procedure_5cffa18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_kd_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_kd_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for k-d tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_quad_choose" id="Procedure_ce11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_quad_config" id="Procedure_250bd9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_quad_inner_consistent" id="Procedure_463d55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_quad_leaf_consistent" id="Procedure_5d726d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree and k-d tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="spg_quad_picksplit" id="Procedure_258ae93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over point]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_range_quad_choose" id="Procedure_35ea04b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_range_quad_config" id="Procedure_5d77a8b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_range_quad_inner_consistent" id="Procedure_4054b1f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_range_quad_leaf_consistent" id="Procedure_3c6227c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="spg_range_quad_picksplit" id="Procedure_2473ad6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_range_quad_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_range_quad_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for quad tree over range]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_text_choose" id="Procedure_5f0bc17" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_choose(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_choose$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_text_config" id="Procedure_107b4ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_config(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_config$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_text_inner_consistent" id="Procedure_492c7f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_inner_consistent(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_inner_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spg_text_leaf_consistent" id="Procedure_5193cc9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_leaf_consistent(internal, internal)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_leaf_consistent$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="spg_text_picksplit" id="Procedure_21b741b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spg_text_picksplit(internal, internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$spg_text_picksplit$function$
;]]></string>
			<comment><![CDATA[SP-GiST support for radix tree over text]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="spghandler" id="Procedure_5abb8ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.spghandler(internal)
 RETURNS index_am_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$spghandler$function$
;]]></string>
			<comment><![CDATA[spgist index access method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="index_am_handler" />
		</procedure>
		<procedure name="split_part" id="Procedure_ab90b2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.split_part(text, text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$split_text$function$
;]]></string>
			<comment><![CDATA[split string by field_sep and return field_num]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="sqrt" id="Procedure_1341214" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(numeric)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_sqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="sqrt" id="Procedure_3994d93" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.sqrt(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dsqrt$function$
;]]></string>
			<comment><![CDATA[square root]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="statement_timestamp" id="Procedure_286bd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.statement_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT
AS $function$statement_timestamp$function$
;]]></string>
			<comment><![CDATA[current statement time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="string_agg_finalfn" id="Procedure_3188f16" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_finalfn(internal)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_finalfn$function$
;]]></string>
			<comment><![CDATA[aggregate final function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="string_agg_transfn" id="Procedure_40e9392" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_agg_transfn(internal, text, text)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$string_agg_transfn$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="string_to_array" id="Procedure_38061ec" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array$function$
;]]></string>
			<comment><![CDATA[split delimited text into text[]]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="string_to_array" id="Procedure_2e6489f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.string_to_array(text, text, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$text_to_array_null$function$
;]]></string>
			<comment><![CDATA[split delimited text into text[], with null string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="strip" id="Procedure_1cd4b1b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strip(tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_strip$function$
;]]></string>
			<comment><![CDATA[strip position information]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="strpos" id="Procedure_5793a49" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.strpos(text, text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textpos$function$
;]]></string>
			<comment><![CDATA[position of substring]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="substr" id="Procedure_267b06b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr_no_len$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substr" id="Procedure_23673f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substr" id="Procedure_c740aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr_no_len$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="substr" id="Procedure_3401252" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.substr(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="substring" id="Procedure_499708d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr_no_len$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substring" id="Procedure_ad0b23" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, integer, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substring" id="Procedure_478e196" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, text, text)
 RETURNS text
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.substring($1, pg_catalog.similar_escape($2, $3))$function$
;]]></string>
			<comment><![CDATA[extract text matching SQL99 regular expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substring" id="Procedure_149a591" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexsubstr$function$
;]]></string>
			<comment><![CDATA[extract text matching regular expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="substring" id="Procedure_3e8a451" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bytea, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr_no_len$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="substring" id="Procedure_3377c67" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bytea, integer, integer)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bytea_substr$function$
;]]></string>
			<comment><![CDATA[extract portion of string]]></comment>
			<input_param name="$1" jt="-2" type="bytea" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="substring" id="Procedure_44e3362" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr_no_len$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="substring" id="Procedure_13df486" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."substring"(bit, integer, integer)
 RETURNS bit
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitsubstr$function$
;]]></string>
			<comment><![CDATA[extract portion of bitstring]]></comment>
			<input_param name="$1" jt="-7" type="bit" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bit" />
		</procedure>
		<procedure name="suppress_redundant_updates_trigger" id="Procedure_3e8d3f2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.suppress_redundant_updates_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$suppress_redundant_updates_trigger$function$
;]]></string>
			<comment><![CDATA[trigger to suppress updates when new and old records match]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="system" id="Procedure_4acc627" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.system(internal)
 RETURNS tsm_handler
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$tsm_system_handler$function$
;]]></string>
			<comment><![CDATA[SYSTEM tablesample method handler]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tsm_handler" />
		</procedure>
		<procedure name="table_to_xml" id="Procedure_30a2df2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml$function$
;]]></string>
			<comment><![CDATA[map table contents to XML]]></comment>
			<input_param name="tbl" jt="1111" type="regclass" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="table_to_xml_and_xmlschema" id="Procedure_5d26a3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xml_and_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xml_and_xmlschema$function$
;]]></string>
			<comment><![CDATA[map table contents and structure to XML and XML Schema]]></comment>
			<input_param name="tbl" jt="1111" type="regclass" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="table_to_xmlschema" id="Procedure_5d7f682" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.table_to_xmlschema(tbl regclass, nulls boolean, tableforest boolean, targetns text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL RESTRICTED STRICT COST 100
AS $function$table_to_xmlschema$function$
;]]></string>
			<comment><![CDATA[map table structure to XML Schema]]></comment>
			<input_param name="tbl" jt="1111" type="regclass" />
			<input_param name="nulls" jt="-7" type="bool" />
			<input_param name="tableforest" jt="-7" type="bool" />
			<input_param name="targetns" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="tan" id="Procedure_32eca2e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tan(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtan$function$
;]]></string>
			<comment><![CDATA[tangent]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tand" id="Procedure_27db90a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tand(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtand$function$
;]]></string>
			<comment><![CDATA[tangent, degrees]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="text" id="Procedure_3c68fc6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text("char")
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$char_text$function$
;]]></string>
			<comment><![CDATA[convert char to text]]></comment>
			<input_param name="$1" jt="1" type="char" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text" id="Procedure_37161a8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(inet)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$network_show$function$
;]]></string>
			<comment><![CDATA[show all parts of inet/cidr value]]></comment>
			<input_param name="$1" jt="1111" type="inet" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text" id="Procedure_2abfe06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(name)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_text$function$
;]]></string>
			<comment><![CDATA[convert name to text]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text" id="Procedure_a6aeaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(character)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$rtrim1$function$
;]]></string>
			<comment><![CDATA[convert char(n) to text]]></comment>
			<input_param name="$1" jt="1" type="bpchar" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text" id="Procedure_57f383b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(boolean)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$booltext$function$
;]]></string>
			<comment><![CDATA[convert boolean to text]]></comment>
			<input_param name="$1" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text" id="Procedure_3f81bfa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text(xml)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmltotext$function$
;]]></string>
			<comment><![CDATA[serialize an XML value to a character string]]></comment>
			<input_param name="$1" jt="2009" type="xml" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text_ge" id="Procedure_341a3bf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_gt" id="Procedure_2037b99" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_larger" id="Procedure_574f445" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_larger(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="text_le" id="Procedure_2148663" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_lt" id="Procedure_5aac9b4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_pattern_ge" id="Procedure_3e4511" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_ge(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_pattern_ge$function$
;]]></string>
			<comment><![CDATA[implementation of ~>=~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_pattern_gt" id="Procedure_3928880" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_gt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_pattern_gt$function$
;]]></string>
			<comment><![CDATA[implementation of ~>~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_pattern_le" id="Procedure_49a6571" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_le(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_pattern_le$function$
;]]></string>
			<comment><![CDATA[implementation of ~<=~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_pattern_lt" id="Procedure_2ba9a55" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_pattern_lt(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_pattern_lt$function$
;]]></string>
			<comment><![CDATA[implementation of ~<~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="text_smaller" id="Procedure_31731d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.text_smaller(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$text_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="textanycat" id="Procedure_5122e01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textanycat(text, anynonarray)
 RETURNS text
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select $1 || $2::pg_catalog.text$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="anynonarray" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="textcat" id="Procedure_1357b2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textcat(text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textcat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="texteq" id="Procedure_1f52846" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texteq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$texteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="texticlike" id="Procedure_4a0acd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~* operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="texticnlike" id="Procedure_2c9f836" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~* operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="texticregexeq" id="Procedure_3ab5050" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~* operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="texticregexne" id="Procedure_51a64d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.texticregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$texticregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~* operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textin" id="Procedure_546c376" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textin(cstring)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="textlen" id="Procedure_d0689a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlen(text)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlen$function$
;]]></string>
			<comment><![CDATA[length]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="textlike" id="Procedure_1a6977d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textlike$function$
;]]></string>
			<comment><![CDATA[implementation of ~~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textne" id="Procedure_465c37d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$textne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textnlike" id="Procedure_5288f66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textnlike(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textnlike$function$
;]]></string>
			<comment><![CDATA[implementation of !~~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textout" id="Procedure_2f1d7ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textout(text)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="textrecv" id="Procedure_3d07960" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textrecv(internal)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="textregexeq" id="Procedure_364b632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexeq(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexeq$function$
;]]></string>
			<comment><![CDATA[implementation of ~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textregexne" id="Procedure_4628031" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textregexne(text, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$textregexne$function$
;]]></string>
			<comment><![CDATA[implementation of !~ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="textsend" id="Procedure_356f547" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.textsend(text)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$textsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="thesaurus_init" id="Procedure_130a996" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_init(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_init$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="thesaurus_lexize" id="Procedure_10208b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.thesaurus_lexize(internal, internal, internal, internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$thesaurus_lexize$function$
;]]></string>
			<comment><![CDATA[(internal)]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="1111" type="internal" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="tideq" id="Procedure_45c400f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tideq(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidge" id="Procedure_379f6aa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidge(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidgt" id="Procedure_43a9af2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidgt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidin" id="Procedure_2fc5ed9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidin(cstring)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="tidlarger" id="Procedure_41696ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlarger(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidlarger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="tidle" id="Procedure_1d18566" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidle(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidlt" id="Procedure_3eec524" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidlt(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidne" id="Procedure_6f19a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidne(tid, tid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tidne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tidout" id="Procedure_4ee1c51" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidout(tid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="tidrecv" id="Procedure_e70b8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidrecv(internal)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="tidsend" id="Procedure_135a340" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsend(tid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="tidsmaller" id="Procedure_4e406d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tidsmaller(tid, tid)
 RETURNS tid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tidsmaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="1111" type="tid" />
			<input_param name="$2" jt="1111" type="tid" />
			<result_param name="returnValue" jt="1111" type="tid" />
		</procedure>
		<procedure name="time" id="Procedure_419011f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(time with time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_time$function$
;]]></string>
			<comment><![CDATA[convert time with time zone to time]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time" id="Procedure_3547a09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp with time zone)
 RETURNS time without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to time]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time" id="Procedure_3e0ab3a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(time without time zone, integer)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_scale$function$
;]]></string>
			<comment><![CDATA[adjust time precision]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time" id="Procedure_499e55c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$interval_time$function$
;]]></string>
			<comment><![CDATA[convert interval to time]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time" id="Procedure_52cb575" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(abstime)
 RETURNS time without time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select cast(cast($1 as timestamp without time zone) as pg_catalog.time)$function$
;]]></string>
			<comment><![CDATA[convert abstime to time]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time" id="Procedure_4c83eb6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."time"(timestamp without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_time$function$
;]]></string>
			<comment><![CDATA[convert timestamp to time]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_cmp" id="Procedure_2e433a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_cmp(time without time zone, time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="time_eq" id="Procedure_136f9d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_eq(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_ge" id="Procedure_4f0c56e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ge(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_gt" id="Procedure_122fe10" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_gt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_hash" id="Procedure_527881" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_hash(time without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="time_in" id="Procedure_9a3632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_in(cstring, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$time_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_larger" id="Procedure_21fda24" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_larger(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_le" id="Procedure_3e6a59b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_le(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_lt" id="Procedure_1ea2608" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_lt(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_mi_interval" id="Procedure_3372025" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_mi_time" id="Procedure_3ff1a34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_mi_time(time without time zone, time without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_mi_time$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="time_ne" id="Procedure_4dc63ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_ne(time without time zone, time without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$time_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="time_out" id="Procedure_4691f38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_out(time without time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="time_pl_interval" id="Procedure_42b55d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_pl_interval(time without time zone, interval)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_recv" id="Procedure_10955c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_recv(internal, oid, integer)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_send" id="Procedure_3ff274e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_send(time without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="time_smaller" id="Procedure_7bb2f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_smaller(time without time zone, time without time zone)
 RETURNS time without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="92" type="time" />
		</procedure>
		<procedure name="time_transform" id="Procedure_b4fb81" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.time_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$time_transform$function$
;]]></string>
			<comment><![CDATA[transform a time length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="timedate_pl" id="Procedure_33bd4d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timedate_pl(time without time zone, date)
 RETURNS timestamp without time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select ($2 + $1)$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timemi" id="Procedure_d4380f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timemi(abstime, reltime)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timemi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="timenow" id="Procedure_2621cde" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timenow()
 RETURNS abstime
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timenow$function$
;]]></string>
			<comment><![CDATA[current date and time (abstime)]]></comment>
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="timeofday" id="Procedure_50091e3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timeofday()
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$timeofday$function$
;]]></string>
			<comment><![CDATA[current date and time - increments during transactions]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="timepl" id="Procedure_5ad2149" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timepl(abstime, reltime)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timepl$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="timestamp" id="Procedure_713e71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timestamp$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to timestamp]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp" id="Procedure_2a9256a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(date, time without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetime_timestamp$function$
;]]></string>
			<comment><![CDATA[convert date and time to timestamp]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp" id="Procedure_5355103" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(date)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$date_timestamp$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp" id="Procedure_4f3edb5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(abstime)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$abstime_timestamp$function$
;]]></string>
			<comment><![CDATA[convert abstime to timestamp]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp" id="Procedure_f5bb3b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."timestamp"(timestamp without time zone, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamp precision]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_cmp" id="Procedure_8a3098" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp(timestamp without time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamp_cmp_date" id="Procedure_2797946" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_date(timestamp without time zone, date)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_date$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamp_cmp_timestamptz" id="Procedure_4fa4a1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_cmp_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp_timestamptz$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamp_eq" id="Procedure_58124d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_eq_date" id="Procedure_3f0d36f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_date$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_eq_timestamptz" id="Procedure_51da796" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_eq_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_eq_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_ge" id="Procedure_54158ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_ge_date" id="Procedure_41cd333" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_date$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_ge_timestamptz" id="Procedure_30972c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ge_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ge_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_gt" id="Procedure_10e1b68" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_gt_date" id="Procedure_ffa1c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_date$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_gt_timestamptz" id="Procedure_1c44dda" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_gt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_gt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_hash" id="Procedure_50b6cac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_hash(timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamp_in" id="Procedure_437c35b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_in(cstring, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_izone_transform" id="Procedure_5b0cf01" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_izone_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_izone_transform$function$
;]]></string>
			<comment><![CDATA[transform a time zone adjustment]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="timestamp_larger" id="Procedure_3d82959" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_larger(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_le" id="Procedure_535342b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_le_date" id="Procedure_58e6098" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_date$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_le_timestamptz" id="Procedure_360c4c8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_le_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_le_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_lt" id="Procedure_5354092" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_lt_date" id="Procedure_4181737" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_date$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_lt_timestamptz" id="Procedure_287e22d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_lt_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_lt_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_mi" id="Procedure_1c080e9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi(timestamp without time zone, timestamp without time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="timestamp_mi_interval" id="Procedure_2dd6e0f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_mi_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_ne" id="Procedure_2f725f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne(timestamp without time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_ne_date" id="Procedure_4543123" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_date(timestamp without time zone, date)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_date$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_ne_timestamptz" id="Procedure_38f9494" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_ne_timestamptz(timestamp without time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_ne_timestamptz$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamp_out" id="Procedure_5b2f115" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_out(timestamp without time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timestamp_pl_interval" id="Procedure_c3ae2a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_pl_interval(timestamp without time zone, interval)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_recv" id="Procedure_347eb53" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_recv(internal, oid, integer)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_send" id="Procedure_29305a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_send(timestamp without time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="timestamp_smaller" id="Procedure_8ab54d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_smaller(timestamp without time zone, timestamp without time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timestamp_sortsupport" id="Procedure_1bbe670" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="timestamp_transform" id="Procedure_2455f5f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_transform$function$
;]]></string>
			<comment><![CDATA[transform a timestamp length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="timestamp_zone_transform" id="Procedure_4febe31" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamp_zone_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_zone_transform$function$
;]]></string>
			<comment><![CDATA[transform a time zone adjustment]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="timestamptypmodin" id="Procedure_1133f74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamptypmodout" id="Procedure_3054168" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_2392075" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert timestamp to timestamp with time zone]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_1b2552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(timestamp with time zone, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_scale$function$
;]]></string>
			<comment><![CDATA[adjust timestamptz precision]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_3e2a5c7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date, time with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$datetimetz_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date and time with time zone to timestamp with time zone]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_591be08" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date, time without time zone)
 RETURNS timestamp with time zone
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT COST 1
AS $function$select cast(($1 + $2) as timestamp with time zone)$function$
;]]></string>
			<comment><![CDATA[convert date and time to timestamp with time zone]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<input_param name="$2" jt="92" type="time" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_35d9742" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(date)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$date_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert date to timestamp with time zone]]></comment>
			<input_param name="$1" jt="91" type="date" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz" id="Procedure_159709d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz(abstime)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$abstime_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert abstime to timestamp with time zone]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_cmp" id="Procedure_1cbe92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp(timestamp with time zone, timestamp with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamptz_cmp_date" id="Procedure_1ccc0a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_date(timestamp with time zone, date)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_date$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamptz_cmp_timestamp" id="Procedure_55be7be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_cmp_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS integer
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_cmp_timestamp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamptz_eq" id="Procedure_50de782" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_eq_date" id="Procedure_4cddda0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_date$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_eq_timestamp" id="Procedure_2d416cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_eq_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_eq_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_ge" id="Procedure_2a8bda1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_ge_date" id="Procedure_5ef3f36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_date$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_ge_timestamp" id="Procedure_88b870" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ge_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ge_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_gt" id="Procedure_48a655d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_gt_date" id="Procedure_404e28b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_date$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_gt_timestamp" id="Procedure_3d22fbe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_gt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_gt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_in" id="Procedure_1651996" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_in(cstring, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_larger" id="Procedure_1789517" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_larger(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_le" id="Procedure_340e0c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_le_date" id="Procedure_3eba589" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_date$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_le_timestamp" id="Procedure_2cc4a0d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_le_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_le_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_lt" id="Procedure_2a4348d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_lt_date" id="Procedure_3692969" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_date$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_lt_timestamp" id="Procedure_221d5fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_lt_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_lt_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_mi" id="Procedure_4e1a78c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi(timestamp with time zone, timestamp with time zone)
 RETURNS interval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_mi$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="interval" />
		</procedure>
		<procedure name="timestamptz_mi_interval" id="Procedure_2bc56d5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_mi_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_ne" id="Procedure_2139b9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne(timestamp with time zone, timestamp with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timestamp_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_ne_date" id="Procedure_5a95cf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_date(timestamp with time zone, date)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_date$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_ne_timestamp" id="Procedure_2af54f0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_ne_timestamp(timestamp with time zone, timestamp without time zone)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_ne_timestamp$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timestamptz_out" id="Procedure_a3e115" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_out(timestamp with time zone)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timestamptz_pl_interval" id="Procedure_120674e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_pl_interval(timestamp with time zone, interval)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_recv" id="Procedure_4fa49b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_recv(internal, oid, integer)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptz_send" id="Procedure_7b9c2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_send(timestamp with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="timestamptz_smaller" id="Procedure_4c046d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptz_smaller(timestamp with time zone, timestamp with time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timestamptztypmodin" id="Procedure_f46ce7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timestamptztypmodout" id="Procedure_3dd825c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timestamptztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptztypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timetypmodin" id="Procedure_2938d4d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timetypmodout" id="Procedure_2d6d789" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timetz" id="Procedure_3c4769a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(time without time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$time_timetz$function$
;]]></string>
			<comment><![CDATA[convert time to time with time zone]]></comment>
			<input_param name="$1" jt="92" type="time" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz" id="Procedure_2447992" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(time with time zone, integer)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_scale$function$
;]]></string>
			<comment><![CDATA[adjust time with time zone precision]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz" id="Procedure_315b6c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz(timestamp with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_timetz$function$
;]]></string>
			<comment><![CDATA[convert timestamp with time zone to time with time zone]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_cmp" id="Procedure_50635f1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_cmp(time with time zone, time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timetz_eq" id="Procedure_2c6289d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_eq(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_ge" id="Procedure_3aa0f0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ge(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_gt" id="Procedure_54ef63c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_gt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_hash" id="Procedure_47b3b54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_hash(time with time zone)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timetz_in" id="Procedure_58e9905" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_in(cstring, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timetz_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_larger" id="Procedure_5656616" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_larger(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_larger$function$
;]]></string>
			<comment><![CDATA[larger of two]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_le" id="Procedure_467db44" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_le(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_lt" id="Procedure_182e933" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_lt(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_mi_interval" id="Procedure_1d2da8c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_mi_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_mi_interval$function$
;]]></string>
			<comment><![CDATA[implementation of - operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_ne" id="Procedure_374d6ce" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_ne(time with time zone, time with time zone)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$timetz_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="timetz_out" id="Procedure_3a99e47" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_out(time with time zone)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timetz_pl_interval" id="Procedure_5d4698d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_pl_interval(time with time zone, interval)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_pl_interval$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="1111" type="interval" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_recv" id="Procedure_3868f54" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_recv(internal, oid, integer)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetz_send" id="Procedure_4d1ec18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_send(time with time zone)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="timetz_smaller" id="Procedure_38c2c7c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetz_smaller(time with time zone, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_smaller$function$
;]]></string>
			<comment><![CDATA[smaller of two]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timetzdate_pl" id="Procedure_3d5854f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetzdate_pl(time with time zone, date)
 RETURNS timestamp with time zone
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select ($2 + $1)$function$
;]]></string>
			<comment><![CDATA[implementation of + operator]]></comment>
			<input_param name="$1" jt="92" type="timetz" />
			<input_param name="$2" jt="91" type="date" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timetztypmodin" id="Procedure_5a7cf2c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="timetztypmodout" id="Procedure_3975552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timetztypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetztypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="timezone" id="Procedure_3d0a63b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timezone" id="Procedure_5262d14" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, timestamp without time zone)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamp_zone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="timezone" id="Procedure_31589a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timetz_izone$function$
;]]></string>
			<comment><![CDATA[adjust time with time zone to new zone]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timezone" id="Procedure_488b8a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, time with time zone)
 RETURNS time with time zone
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$timetz_zone$function$
;]]></string>
			<comment><![CDATA[adjust time with time zone to new zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="92" type="timetz" />
			<result_param name="returnValue" jt="92" type="timetz" />
		</procedure>
		<procedure name="timezone" id="Procedure_1da7fed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(text, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_zone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="timezone" id="Procedure_3e36a8d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.timezone(interval, timestamp with time zone)
 RETURNS timestamp without time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$timestamptz_izone$function$
;]]></string>
			<comment><![CDATA[adjust timestamp to new time zone]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="93" type="timestamp" />
		</procedure>
		<procedure name="tinterval" id="Procedure_3a455d1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tinterval(abstime, abstime)
 RETURNS tinterval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$mktinterval$function$
;]]></string>
			<comment><![CDATA[convert to tinterval]]></comment>
			<input_param name="$1" jt="1111" type="abstime" />
			<input_param name="$2" jt="1111" type="abstime" />
			<result_param name="returnValue" jt="1111" type="tinterval" />
		</procedure>
		<procedure name="tintervalct" id="Procedure_163c853" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalct(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalct$function$
;]]></string>
			<comment><![CDATA[implementation of << operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalend" id="Procedure_3eea317" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalend(tinterval)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalend$function$
;]]></string>
			<comment><![CDATA[end of interval]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="tintervaleq" id="Procedure_4b9c47e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervaleq(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervaleq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalge" id="Procedure_4d6ca9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalge(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervalge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalgt" id="Procedure_50aea36" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalgt(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervalgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalin" id="Procedure_1e0afca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalin(cstring)
 RETURNS tinterval
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tintervalin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="tinterval" />
		</procedure>
		<procedure name="tintervalle" id="Procedure_501e234" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalle(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervalle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalleneq" id="Procedure_26cf4f3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalleneq(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervalleneq$function$
;]]></string>
			<comment><![CDATA[implementation of #= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallenge" id="Procedure_40018e0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallenge(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallenge$function$
;]]></string>
			<comment><![CDATA[implementation of #>= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallengt" id="Procedure_3824515" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallengt(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallengt$function$
;]]></string>
			<comment><![CDATA[implementation of #> operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallenle" id="Procedure_2db68be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallenle(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallenle$function$
;]]></string>
			<comment><![CDATA[implementation of #<= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallenlt" id="Procedure_55fc89f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallenlt(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallenlt$function$
;]]></string>
			<comment><![CDATA[implementation of #< operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallenne" id="Procedure_37b59f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallenne(tinterval, reltime)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallenne$function$
;]]></string>
			<comment><![CDATA[implementation of #<> operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="reltime" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervallt" id="Procedure_3acaf76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervallt(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervallt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalne" id="Procedure_3c42d20" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalne(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$tintervalne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalout" id="Procedure_1e9ebd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalout(tinterval)
 RETURNS cstring
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tintervalout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="tintervalov" id="Procedure_2ac5f28" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalov(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalov$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalrecv" id="Procedure_56f043f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalrecv(internal)
 RETURNS tinterval
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tinterval" />
		</procedure>
		<procedure name="tintervalrel" id="Procedure_19c314" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalrel(tinterval)
 RETURNS reltime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalrel$function$
;]]></string>
			<comment><![CDATA[tinterval to reltime]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="1111" type="reltime" />
		</procedure>
		<procedure name="tintervalsame" id="Procedure_3793bd2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalsame(tinterval, tinterval)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalsame$function$
;]]></string>
			<comment><![CDATA[implementation of ~= operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<input_param name="$2" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tintervalsend" id="Procedure_5cd9801" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalsend(tinterval)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="tintervalstart" id="Procedure_392ca1e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tintervalstart(tinterval)
 RETURNS abstime
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tintervalstart$function$
;]]></string>
			<comment><![CDATA[implementation of | operator]]></comment>
			<input_param name="$1" jt="1111" type="tinterval" />
			<result_param name="returnValue" jt="1111" type="abstime" />
		</procedure>
		<procedure name="to_ascii" id="Procedure_28b3d60" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text, name)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_encname$function$
;]]></string>
			<comment><![CDATA[encode text from encoding to ASCII text]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_ascii" id="Procedure_37b5add" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text, integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_enc$function$
;]]></string>
			<comment><![CDATA[encode text from encoding to ASCII text]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_ascii" id="Procedure_ad487b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_ascii(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_ascii_default$function$
;]]></string>
			<comment><![CDATA[encode text from DB encoding to ASCII text]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_d7e4cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(timestamp without time zone, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamp_to_char$function$
;]]></string>
			<comment><![CDATA[format timestamp to text]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_7dcbaf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(double precision, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$float8_to_char$function$
;]]></string>
			<comment><![CDATA[format float8 to text]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_36e4ff4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(real, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$float4_to_char$function$
;]]></string>
			<comment><![CDATA[format float4 to text]]></comment>
			<input_param name="$1" jt="7" type="float4" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_35bf76d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(bigint, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int8_to_char$function$
;]]></string>
			<comment><![CDATA[format int8 to text]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_5dce0db" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(integer, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$int4_to_char$function$
;]]></string>
			<comment><![CDATA[format int4 to text]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_514f9de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(numeric, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_to_char$function$
;]]></string>
			<comment><![CDATA[format numeric to text]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_1b42e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(timestamp with time zone, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$timestamptz_to_char$function$
;]]></string>
			<comment><![CDATA[format timestamp with time zone to text]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_char" id="Procedure_4e2a286" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_char(interval, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$interval_to_char$function$
;]]></string>
			<comment><![CDATA[format interval to text]]></comment>
			<input_param name="$1" jt="1111" type="interval" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_date" id="Procedure_8603b0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_date(text, text)
 RETURNS date
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_date$function$
;]]></string>
			<comment><![CDATA[convert text to date]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="91" type="date" />
		</procedure>
		<procedure name="to_hex" id="Procedure_2570ecd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(bigint)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex64$function$
;]]></string>
			<comment><![CDATA[convert int8 number to hex]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_hex" id="Procedure_4f4bdcd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_hex(integer)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$to_hex32$function$
;]]></string>
			<comment><![CDATA[convert int4 number to hex]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="to_json" id="Procedure_3408313" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_json(anyelement)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_json$function$
;]]></string>
			<comment><![CDATA[map input to json]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="to_jsonb" id="Procedure_29b462f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_jsonb(anyelement)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_jsonb$function$
;]]></string>
			<comment><![CDATA[map input to jsonb]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="to_number" id="Procedure_19e8e98" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_number(text, text)
 RETURNS numeric
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$numeric_to_number$function$
;]]></string>
			<comment><![CDATA[convert text to numeric]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="to_regclass" id="Procedure_40b3c78" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regclass(text)
 RETURNS regclass
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regclass$function$
;]]></string>
			<comment><![CDATA[convert classname to regclass]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regclass" />
		</procedure>
		<procedure name="to_regnamespace" id="Procedure_4a510f9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regnamespace(text)
 RETURNS regnamespace
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regnamespace$function$
;]]></string>
			<comment><![CDATA[convert namespace name to regnamespace]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regnamespace" />
		</procedure>
		<procedure name="to_regoper" id="Procedure_34510be" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoper(text)
 RETURNS regoper
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoper$function$
;]]></string>
			<comment><![CDATA[convert operator name to regoper]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regoper" />
		</procedure>
		<procedure name="to_regoperator" id="Procedure_3531c95" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regoperator(text)
 RETURNS regoperator
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regoperator$function$
;]]></string>
			<comment><![CDATA[convert operator name to regoperator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regoperator" />
		</procedure>
		<procedure name="to_regproc" id="Procedure_40df5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regproc(text)
 RETURNS regproc
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regproc$function$
;]]></string>
			<comment><![CDATA[convert proname to regproc]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regproc" />
		</procedure>
		<procedure name="to_regprocedure" id="Procedure_ef4b34" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regprocedure(text)
 RETURNS regprocedure
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regprocedure$function$
;]]></string>
			<comment><![CDATA[convert proname to regprocedure]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regprocedure" />
		</procedure>
		<procedure name="to_regrole" id="Procedure_522ddda" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regrole(text)
 RETURNS regrole
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regrole$function$
;]]></string>
			<comment><![CDATA[convert role name to regrole]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regrole" />
		</procedure>
		<procedure name="to_regtype" id="Procedure_2af1223" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_regtype(text)
 RETURNS regtype
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_regtype$function$
;]]></string>
			<comment><![CDATA[convert type name to regtype]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="regtype" />
		</procedure>
		<procedure name="to_timestamp" id="Procedure_1ed5f85" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(text, text)
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$to_timestamp$function$
;]]></string>
			<comment><![CDATA[convert text to timestamp with time zone]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="to_timestamp" id="Procedure_3696ee2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_timestamp(double precision)
 RETURNS timestamp with time zone
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$float8_timestamptz$function$
;]]></string>
			<comment><![CDATA[convert UNIX epoch to timestamptz]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="to_tsquery" id="Procedure_26653ea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(text)
 RETURNS tsquery
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery$function$
;]]></string>
			<comment><![CDATA[make tsquery]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="to_tsquery" id="Procedure_22b5419" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsquery(regconfig, text)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsquery_byid$function$
;]]></string>
			<comment><![CDATA[make tsquery]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_3e2c55e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, json)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform json to tsvector]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_7edc18" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, jsonb)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform jsonb to tsvector]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_52f46b6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(json)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$json_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform json to tsvector]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_30de93d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(jsonb)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$jsonb_to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform jsonb to tsvector]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_30fbba6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(text)
 RETURNS tsvector
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="to_tsvector" id="Procedure_2e30909" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.to_tsvector(regconfig, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$to_tsvector_byid$function$
;]]></string>
			<comment><![CDATA[transform to tsvector]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="transaction_timestamp" id="Procedure_33689e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.transaction_timestamp()
 RETURNS timestamp with time zone
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$now$function$
;]]></string>
			<comment><![CDATA[current transaction time]]></comment>
			<result_param name="returnValue" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="translate" id="Procedure_44c3331" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.translate(text, text, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$translate$function$
;]]></string>
			<comment><![CDATA[map a set of characters appearing in string]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="trigger_in" id="Procedure_2d759c6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_in(cstring)
 RETURNS trigger
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$trigger_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="trigger_out" id="Procedure_80375b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trigger_out(trigger)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$trigger_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="trigger" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="trunc" id="Procedure_2310d05" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(macaddr)
 RETURNS macaddr
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr_trunc$function$
;]]></string>
			<comment><![CDATA[MACADDR manufacturer fields]]></comment>
			<input_param name="$1" jt="1111" type="macaddr" />
			<result_param name="returnValue" jt="1111" type="macaddr" />
		</procedure>
		<procedure name="trunc" id="Procedure_3b9ec0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(macaddr8)
 RETURNS macaddr8
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$macaddr8_trunc$function$
;]]></string>
			<comment><![CDATA[MACADDR8 manufacturer fields]]></comment>
			<input_param name="$1" jt="1111" type="macaddr8" />
			<result_param name="returnValue" jt="1111" type="macaddr8" />
		</procedure>
		<procedure name="trunc" id="Procedure_2d85c72" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(numeric)
 RETURNS numeric
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.trunc($1,0)$function$
;]]></string>
			<comment><![CDATA[value truncated to 'scale' of zero]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="trunc" id="Procedure_19c014b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(numeric, integer)
 RETURNS numeric
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$numeric_trunc$function$
;]]></string>
			<comment><![CDATA[value truncated to 'scale']]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="2" type="numeric" />
		</procedure>
		<procedure name="trunc" id="Procedure_15a78d9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.trunc(double precision)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$dtrunc$function$
;]]></string>
			<comment><![CDATA[truncate to integer]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="ts_debug" id="Procedure_5f3e2ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$
    SELECT * FROM pg_catalog.ts_debug( pg_catalog.get_current_ts_config(), $1);
$function$
;]]></string>
			<comment><![CDATA[debug function for current text search configuration]]></comment>
			<input_param name="document" jt="12" type="text" />
			<input_param name="alias" jt="12" type="text" />
			<input_param name="description" jt="12" type="text" />
			<input_param name="token" jt="12" type="text" />
			<input_param name="dictionaries" jt="2003" type="_regdictionary" />
			<input_param name="dictionary" jt="1111" type="regdictionary" />
			<input_param name="lexemes" jt="2003" type="_text" />
		</procedure>
		<procedure name="ts_debug" id="Procedure_21188b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_debug(config regconfig, document text, OUT alias text, OUT description text, OUT token text, OUT dictionaries regdictionary[], OUT dictionary regdictionary, OUT lexemes text[])
 RETURNS SETOF record
 LANGUAGE sql
 STABLE PARALLEL SAFE STRICT
AS $function$
SELECT
    tt.alias AS alias,
    tt.description AS description,
    parse.token AS token,
    ARRAY ( SELECT m.mapdict::pg_catalog.regdictionary
            FROM pg_catalog.pg_ts_config_map AS m
            WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
            ORDER BY m.mapseqno )
    AS dictionaries,
    ( SELECT mapdict::pg_catalog.regdictionary
      FROM pg_catalog.pg_ts_config_map AS m
      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno
      LIMIT 1
    ) AS dictionary,
    ( SELECT pg_catalog.ts_lexize(mapdict, parse.token)
      FROM pg_catalog.pg_ts_config_map AS m
      WHERE m.mapcfg = $1 AND m.maptokentype = parse.tokid
      ORDER BY pg_catalog.ts_lexize(mapdict, parse.token) IS NULL, m.mapseqno
      LIMIT 1
    ) AS lexemes
FROM pg_catalog.ts_parse(
        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 ), $2
    ) AS parse,
     pg_catalog.ts_token_type(
        (SELECT cfgparser FROM pg_catalog.pg_ts_config WHERE oid = $1 )
    ) AS tt
WHERE tt.tokid = parse.tokid
$function$
;]]></string>
			<comment><![CDATA[debug function for text search configuration]]></comment>
			<input_param name="config" jt="1111" type="regconfig" />
			<input_param name="document" jt="12" type="text" />
			<input_param name="alias" jt="12" type="text" />
			<input_param name="description" jt="12" type="text" />
			<input_param name="token" jt="12" type="text" />
			<input_param name="dictionaries" jt="2003" type="_regdictionary" />
			<input_param name="dictionary" jt="1111" type="regdictionary" />
			<input_param name="lexemes" jt="2003" type="_text" />
		</procedure>
		<procedure name="ts_delete" id="Procedure_47ecb7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_arr$function$
;]]></string>
			<comment><![CDATA[delete given lexemes]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="2003" type="_text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="ts_delete" id="Procedure_4a64a22" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_delete(tsvector, text)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_delete_str$function$
;]]></string>
			<comment><![CDATA[delete lexeme]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="ts_filter" id="Procedure_31be661" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_filter(tsvector, "char"[])
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_filter$function$
;]]></string>
			<comment><![CDATA[delete lexemes that do not have one of the given weights]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="2003" type="_char" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_19424c0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(json, tsquery)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json$function$
;]]></string>
			<comment><![CDATA[generate headline from json]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_37a043c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(json, tsquery, text)
 RETURNS json
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_opt$function$
;]]></string>
			<comment><![CDATA[generate headline from json]]></comment>
			<input_param name="$1" jt="1111" type="json" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_4ec7253" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, json, tsquery)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_byid$function$
;]]></string>
			<comment><![CDATA[generate headline from json]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="json" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_1e5bc4f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, json, tsquery, text)
 RETURNS json
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_json_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline from json]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="json" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="json" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_28d25dd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(jsonb, tsquery)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb$function$
;]]></string>
			<comment><![CDATA[generate headline from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_1229740" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(jsonb, tsquery, text)
 RETURNS jsonb
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_opt$function$
;]]></string>
			<comment><![CDATA[generate headline from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="jsonb" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_d59221" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, jsonb, tsquery)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_byid$function$
;]]></string>
			<comment><![CDATA[generate headline from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_42fad87" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, jsonb, tsquery, text)
 RETURNS jsonb
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_jsonb_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline from jsonb]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="1111" type="jsonb" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="jsonb" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_570708" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(text, tsquery)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_47a6ba0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_2a78d75" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="ts_headline" id="Procedure_454217f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_headline(regconfig, text, tsquery, text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_headline_byid_opt$function$
;]]></string>
			<comment><![CDATA[generate headline]]></comment>
			<input_param name="$1" jt="1111" type="regconfig" />
			<input_param name="$2" jt="12" type="text" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="ts_lexize" id="Procedure_89254a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_lexize(regdictionary, text)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_lexize$function$
;]]></string>
			<comment><![CDATA[normalize one word by dictionary]]></comment>
			<input_param name="$1" jt="1111" type="regdictionary" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="ts_match_qv" id="Procedure_40df9c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_qv(tsquery, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_qv$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ts_match_tq" id="Procedure_28407d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tq(text, tsquery)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tq$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ts_match_tt" id="Procedure_263c032" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_tt(text, text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT COST 100
AS $function$ts_match_tt$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ts_match_vq" id="Procedure_306527d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_match_vq(tsvector, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_match_vq$function$
;]]></string>
			<comment><![CDATA[implementation of @@ operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="ts_parse" id="Procedure_3cf81c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_name text, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byname$function$
;]]></string>
			<comment><![CDATA[parse text to tokens]]></comment>
			<input_param name="parser_name" jt="12" type="text" />
			<input_param name="txt" jt="12" type="text" />
			<input_param name="tokid" jt="4" type="int4" />
			<input_param name="token" jt="12" type="text" />
		</procedure>
		<procedure name="ts_parse" id="Procedure_47fc428" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_parse(parser_oid oid, txt text, OUT tokid integer, OUT token text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_parse_byid$function$
;]]></string>
			<comment><![CDATA[parse text to tokens]]></comment>
			<input_param name="parser_oid" jt="-5" type="oid" />
			<input_param name="txt" jt="12" type="text" />
			<input_param name="tokid" jt="4" type="int4" />
			<input_param name="token" jt="12" type="text" />
		</procedure>
		<procedure name="ts_rank" id="Procedure_d17fd6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_tt$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank" id="Procedure_1f4871c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_ttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank" id="Procedure_130a6ff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wtt$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="2003" type="_float4" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank" id="Procedure_1c39847" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rank_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="2003" type="_float4" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank_cd" id="Procedure_3f807ed" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_tt$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank_cd" id="Procedure_5467e86" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_ttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank_cd" id="Procedure_3b9202e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wtt$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="2003" type="_float4" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rank_cd" id="Procedure_2dfba09" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rank_cd(real[], tsvector, tsquery, integer)
 RETURNS real
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$ts_rankcd_wttf$function$
;]]></string>
			<comment><![CDATA[relevance]]></comment>
			<input_param name="$1" jt="2003" type="_float4" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="7" type="float4" />
		</procedure>
		<procedure name="ts_rewrite" id="Procedure_310480b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, text)
 RETURNS tsquery
 LANGUAGE internal
 STRICT COST 100
AS $function$tsquery_rewrite_query$function$
;]]></string>
			<comment><![CDATA[rewrite tsquery]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="ts_rewrite" id="Procedure_4ff44ca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_rewrite(tsquery, tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_rewrite$function$
;]]></string>
			<comment><![CDATA[rewrite tsquery]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="ts_stat" id="Procedure_158d29b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, weights text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat2$function$
;]]></string>
			<comment><![CDATA[statistics of tsvector column]]></comment>
			<input_param name="query" jt="12" type="text" />
			<input_param name="weights" jt="12" type="text" />
			<input_param name="word" jt="12" type="text" />
			<input_param name="ndoc" jt="4" type="int4" />
			<input_param name="nentry" jt="4" type="int4" />
		</procedure>
		<procedure name="ts_stat" id="Procedure_8ec5a5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_stat(query text, OUT word text, OUT ndoc integer, OUT nentry integer)
 RETURNS SETOF record
 LANGUAGE internal
 STRICT COST 10 ROWS 10000
AS $function$ts_stat1$function$
;]]></string>
			<comment><![CDATA[statistics of tsvector column]]></comment>
			<input_param name="query" jt="12" type="text" />
			<input_param name="word" jt="12" type="text" />
			<input_param name="ndoc" jt="4" type="int4" />
			<input_param name="nentry" jt="4" type="int4" />
		</procedure>
		<procedure name="ts_token_type" id="Procedure_1fc2c0e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_name text, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byname$function$
;]]></string>
			<comment><![CDATA[get parser's token types]]></comment>
			<input_param name="parser_name" jt="12" type="text" />
			<input_param name="tokid" jt="4" type="int4" />
			<input_param name="alias" jt="12" type="text" />
			<input_param name="description" jt="12" type="text" />
		</procedure>
		<procedure name="ts_token_type" id="Procedure_298f62c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_token_type(parser_oid oid, OUT tokid integer, OUT alias text, OUT description text)
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 16
AS $function$ts_token_type_byid$function$
;]]></string>
			<comment><![CDATA[get parser's token types]]></comment>
			<input_param name="parser_oid" jt="-5" type="oid" />
			<input_param name="tokid" jt="4" type="int4" />
			<input_param name="alias" jt="12" type="text" />
			<input_param name="description" jt="12" type="text" />
		</procedure>
		<procedure name="ts_typanalyze" id="Procedure_50490d2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.ts_typanalyze(internal)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$ts_typanalyze$function$
;]]></string>
			<comment><![CDATA[tsvector typanalyze]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsm_handler_in" id="Procedure_39f5312" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_in(cstring)
 RETURNS tsm_handler
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$tsm_handler_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="tsm_handler" />
		</procedure>
		<procedure name="tsm_handler_out" id="Procedure_27e39a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsm_handler_out(tsm_handler)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsm_handler_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tsm_handler" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="tsmatchjoinsel" id="Procedure_8e4e4c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchjoinsel(internal, oid, internal, smallint, internal)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchjoinsel$function$
;]]></string>
			<comment><![CDATA[join selectivity of tsvector @@ tsquery]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="5" type="int2" />
			<input_param name="$5" jt="1111" type="internal" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tsmatchsel" id="Procedure_25826ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsmatchsel(internal, oid, internal, integer)
 RETURNS double precision
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$tsmatchsel$function$
;]]></string>
			<comment><![CDATA[restriction selectivity of tsvector @@ tsquery]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="1111" type="internal" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tsq_mcontained" id="Procedure_3c5d5a4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontained(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontained$function$
;]]></string>
			<comment><![CDATA[implementation of <@ operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsq_mcontains" id="Procedure_5411b82" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsq_mcontains(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsq_mcontains$function$
;]]></string>
			<comment><![CDATA[implementation of @> operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_and" id="Procedure_5b0b810" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_and(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_and$function$
;]]></string>
			<comment><![CDATA[implementation of && operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsquery_cmp" id="Procedure_5d31001" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_cmp(tsquery, tsquery)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tsquery_eq" id="Procedure_fd952b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_eq(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_ge" id="Procedure_5f1f646" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ge(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_gt" id="Procedure_122053c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_gt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_le" id="Procedure_412f7ee" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_le(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_lt" id="Procedure_5d9a1ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_lt(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_ne" id="Procedure_421e112" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_ne(tsquery, tsquery)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsquery_not" id="Procedure_17a5363" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_not(tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_not$function$
;]]></string>
			<comment><![CDATA[implementation of !! operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsquery_or" id="Procedure_2249cd1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_or(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_or$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsquery_phrase" id="Procedure_3e3721" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery, integer)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase_distance$function$
;]]></string>
			<comment><![CDATA[phrase-concatenate with distance]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsquery_phrase" id="Procedure_c53b97" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquery_phrase(tsquery, tsquery)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquery_phrase$function$
;]]></string>
			<comment><![CDATA[implementation of <-> operator]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<input_param name="$2" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsqueryin" id="Procedure_50ccec4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryin(cstring)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsqueryout" id="Procedure_1e0174c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryout(tsquery)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="tsqueryrecv" id="Procedure_32d62f5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsqueryrecv(internal)
 RETURNS tsquery
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsqueryrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tsquery" />
		</procedure>
		<procedure name="tsquerysend" id="Procedure_cde0a2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsquerysend(tsquery)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsquerysend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tsquery" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="tsrange" id="Procedure_328c9b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone, text)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[tsrange constructor]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="tsrange" id="Procedure_193e2f7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange(timestamp without time zone, timestamp without time zone)
 RETURNS tsrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tsrange constructor]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
		</procedure>
		<procedure name="tsrange_subdiff" id="Procedure_fc581e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsrange_subdiff(timestamp without time zone, timestamp without time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two timestamp values]]></comment>
			<input_param name="$1" jt="93" type="timestamp" />
			<input_param name="$2" jt="93" type="timestamp" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tstzrange" id="Procedure_164d63e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone, text)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor3$function$
;]]></string>
			<comment><![CDATA[tstzrange constructor]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<input_param name="$3" jt="12" type="text" />
		</procedure>
		<procedure name="tstzrange" id="Procedure_3e17d83" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange(timestamp with time zone, timestamp with time zone)
 RETURNS tstzrange
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$range_constructor2$function$
;]]></string>
			<comment><![CDATA[tstzrange constructor]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
		</procedure>
		<procedure name="tstzrange_subdiff" id="Procedure_491c461" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tstzrange_subdiff(timestamp with time zone, timestamp with time zone)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tstzrange_subdiff$function$
;]]></string>
			<comment><![CDATA[float8 difference of two timestamp with time zone values]]></comment>
			<input_param name="$1" jt="93" type="timestamptz" />
			<input_param name="$2" jt="93" type="timestamptz" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="tsvector_cmp" id="Procedure_1ca376b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_cmp(tsvector, tsvector)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="tsvector_concat" id="Procedure_2b7d552" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_concat(tsvector, tsvector)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_concat$function$
;]]></string>
			<comment><![CDATA[implementation of || operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="tsvector_eq" id="Procedure_fd3e71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_eq(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_ge" id="Procedure_4f546b1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ge(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_gt" id="Procedure_216be3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_gt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_le" id="Procedure_3b096ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_le(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_lt" id="Procedure_44edf7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_lt(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_ne" id="Procedure_406809a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_ne(tsvector, tsvector)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<input_param name="$2" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="tsvector_to_array" id="Procedure_2424786" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_to_array(tsvector)
 RETURNS text[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvector_to_array$function$
;]]></string>
			<comment><![CDATA[convert tsvector to array of lexemes]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="2003" type="_text" />
		</procedure>
		<procedure name="tsvector_update_trigger" id="Procedure_57c6e38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_byid$function$
;]]></string>
			<comment><![CDATA[trigger for automatic update of tsvector column]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="tsvector_update_trigger_column" id="Procedure_beed6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvector_update_trigger_column()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE
AS $function$tsvector_update_trigger_bycolumn$function$
;]]></string>
			<comment><![CDATA[trigger for automatic update of tsvector column]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="tsvectorin" id="Procedure_1afefd9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorin(cstring)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="tsvectorout" id="Procedure_1e82098" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorout(tsvector)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="tsvectorrecv" id="Procedure_2e54cba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorrecv(internal)
 RETURNS tsvector
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="tsvector" />
		</procedure>
		<procedure name="tsvectorsend" id="Procedure_5bf2b33" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.tsvectorsend(tsvector)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$tsvectorsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="tsvector" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="txid_current" id="Procedure_1d95efc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$txid_current$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="txid_current_if_assigned" id="Procedure_4dcee38" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_if_assigned()
 RETURNS bigint
 LANGUAGE internal
 STABLE STRICT
AS $function$txid_current_if_assigned$function$
;]]></string>
			<comment><![CDATA[get current transaction ID]]></comment>
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="txid_current_snapshot" id="Procedure_2eb9aff" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_current_snapshot()
 RETURNS txid_snapshot
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$txid_current_snapshot$function$
;]]></string>
			<comment><![CDATA[get current snapshot]]></comment>
			<result_param name="returnValue" jt="1111" type="txid_snapshot" />
		</procedure>
		<procedure name="txid_snapshot_in" id="Procedure_4281f76" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_in(cstring)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="txid_snapshot" />
		</procedure>
		<procedure name="txid_snapshot_out" id="Procedure_24e1c7f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_out(txid_snapshot)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="txid_snapshot_recv" id="Procedure_24dd4f6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_recv(internal)
 RETURNS txid_snapshot
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="txid_snapshot" />
		</procedure>
		<procedure name="txid_snapshot_send" id="Procedure_5c25ebe" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_send(txid_snapshot)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="txid_snapshot_xip" id="Procedure_2bb30d3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xip(txid_snapshot)
 RETURNS SETOF bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 50
AS $function$txid_snapshot_xip$function$
;]]></string>
			<comment><![CDATA[get set of in-progress txids in snapshot]]></comment>
			<input_param name="$1" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="txid_snapshot_xmax" id="Procedure_2767daa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmax(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_xmax$function$
;]]></string>
			<comment><![CDATA[get xmax of snapshot]]></comment>
			<input_param name="$1" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="txid_snapshot_xmin" id="Procedure_372ee49" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_snapshot_xmin(txid_snapshot)
 RETURNS bigint
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_snapshot_xmin$function$
;]]></string>
			<comment><![CDATA[get xmin of snapshot]]></comment>
			<input_param name="$1" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="-5" type="int8" />
		</procedure>
		<procedure name="txid_status" id="Procedure_3cb05d7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_status(bigint)
 RETURNS text
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$txid_status$function$
;]]></string>
			<comment><![CDATA[commit status of transaction]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="txid_visible_in_snapshot" id="Procedure_1b24320" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.txid_visible_in_snapshot(bigint, txid_snapshot)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$txid_visible_in_snapshot$function$
;]]></string>
			<comment><![CDATA[is txid visible in snapshot?]]></comment>
			<input_param name="$1" jt="-5" type="int8" />
			<input_param name="$2" jt="1111" type="txid_snapshot" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uhc_to_utf8" id="Procedure_1d05480" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uhc_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$uhc_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UHC to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="unique_key_recheck" id="Procedure_4de245d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unique_key_recheck()
 RETURNS trigger
 LANGUAGE internal
 PARALLEL SAFE STRICT
AS $function$unique_key_recheck$function$
;]]></string>
			<comment><![CDATA[deferred UNIQUE constraint check]]></comment>
			<result_param name="returnValue" jt="1111" type="trigger" />
		</procedure>
		<procedure name="unknownin" id="Procedure_1f77d8e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownin(cstring)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="unknown" />
		</procedure>
		<procedure name="unknownout" id="Procedure_2469bc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownout(unknown)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="unknown" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="unknownrecv" id="Procedure_3556f13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownrecv(internal)
 RETURNS unknown
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="unknown" />
		</procedure>
		<procedure name="unknownsend" id="Procedure_2a5d6c2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unknownsend(unknown)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$unknownsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="unknown" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="unnest" id="Procedure_36c3ff4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(tsvector tsvector, OUT lexeme text, OUT positions smallint[], OUT weights text[])
 RETURNS SETOF record
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 10
AS $function$tsvector_unnest$function$
;]]></string>
			<comment><![CDATA[expand tsvector to set of rows]]></comment>
			<input_param name="tsvector" jt="1111" type="tsvector" />
			<input_param name="lexeme" jt="12" type="text" />
			<input_param name="positions" jt="2003" type="_int2" />
			<input_param name="weights" jt="2003" type="_text" />
		</procedure>
		<procedure name="unnest" id="Procedure_5a06f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.unnest(anyarray)
 RETURNS SETOF anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT ROWS 100
AS $function$array_unnest$function$
;]]></string>
			<comment><![CDATA[expand array to set of rows]]></comment>
			<input_param name="$1" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="upper" id="Procedure_4333721" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(text)
 RETURNS text
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$upper$function$
;]]></string>
			<comment><![CDATA[uppercase]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="upper" id="Procedure_1735fc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper(anyrange)
 RETURNS anyelement
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper$function$
;]]></string>
			<comment><![CDATA[upper bound of range]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="1111" type="anyelement" />
		</procedure>
		<procedure name="upper_inc" id="Procedure_381c0d0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inc(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inc$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound inclusive?]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="upper_inf" id="Procedure_40181a1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.upper_inf(anyrange)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$range_upper_inf$function$
;]]></string>
			<comment><![CDATA[is the range's upper bound infinite?]]></comment>
			<input_param name="$1" jt="1111" type="anyrange" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="utf8_to_ascii" id="Procedure_2ad0f11" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_ascii(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_ascii', $function$utf8_to_ascii$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to SQL_ASCII]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_big5" id="Procedure_5330174" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_big5(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_big5', $function$utf8_to_big5$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to BIG5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_euc_cn" id="Procedure_5541ec6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_cn(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_cn', $function$utf8_to_euc_cn$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_CN]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_euc_jis_2004" id="Procedure_7c715f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc2004', $function$utf8_to_euc_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_JIS_2004]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_euc_jp" id="Procedure_6f0007" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_jp(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_jp', $function$utf8_to_euc_jp$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_JP]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_euc_kr" id="Procedure_46696c3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_kr(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_kr', $function$utf8_to_euc_kr$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_KR]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_euc_tw" id="Procedure_37c417f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_euc_tw(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_euc_tw', $function$utf8_to_euc_tw$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to EUC_TW]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_gb18030" id="Procedure_3b466cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gb18030(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gb18030', $function$utf8_to_gb18030$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to GB18030]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_gbk" id="Procedure_4b89180" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_gbk(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_gbk', $function$utf8_to_gbk$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to GBK]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_iso8859" id="Procedure_1125cc2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859', $function$utf8_to_iso8859$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to ISO-8859-8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_iso8859_1" id="Procedure_4c363cf" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_iso8859_1(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_iso8859_1', $function$utf8_to_iso8859_1$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to LATIN1]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_johab" id="Procedure_108a4a7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_johab(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_johab', $function$utf8_to_johab$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to JOHAB]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_koi8r" id="Procedure_2b34c88" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to KOI8R]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_koi8u" id="Procedure_38d826d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_koi8u(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_cyrillic', $function$utf8_to_koi8u$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to KOI8U]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_shift_jis_2004" id="Procedure_2006cea" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_shift_jis_2004(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis2004', $function$utf8_to_shift_jis_2004$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to SHIFT_JIS_2004]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_sjis" id="Procedure_2e95489" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_sjis(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_sjis', $function$utf8_to_sjis$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to SJIS]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_uhc" id="Procedure_4231033" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_uhc(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_uhc', $function$utf8_to_uhc$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to UHC]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="utf8_to_win" id="Procedure_37a6c13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.utf8_to_win(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$utf8_to_win$function$
;]]></string>
			<comment><![CDATA[internal conversion function for UTF8 to WIN1258]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="uuid_cmp" id="Procedure_2b05670" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_cmp(uuid, uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_cmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="uuid_eq" id="Procedure_136a4ab" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_eq(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_eq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_ge" id="Procedure_3170e6c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ge(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_gt" id="Procedure_204ad0c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_gt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_gt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_hash" id="Procedure_15212c4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_hash(uuid)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_hash$function$
;]]></string>
			<comment><![CDATA[hash]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="uuid_in" id="Procedure_538db6b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_in(cstring)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_le" id="Procedure_432e22a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_le(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_le$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_lt" id="Procedure_585e5ac" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_lt(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_lt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_ne" id="Procedure_ad5157" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_ne(uuid, uuid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$uuid_ne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<input_param name="$2" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="uuid_out" id="Procedure_3cc3fef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_out(uuid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="uuid_recv" id="Procedure_2594319" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_recv(internal)
 RETURNS uuid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="uuid" />
		</procedure>
		<procedure name="uuid_send" id="Procedure_464981d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_send(uuid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="uuid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="uuid_sortsupport" id="Procedure_531fef4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.uuid_sortsupport(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$uuid_sortsupport$function$
;]]></string>
			<comment><![CDATA[sort support]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="varbit" id="Procedure_8b8443" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit(bit varying, integer, boolean)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit$function$
;]]></string>
			<comment><![CDATA[adjust varbit() to typmod length]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="1111" type="varbit" />
		</procedure>
		<procedure name="varbit_in" id="Procedure_31a40d4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_in(cstring, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="varbit" />
		</procedure>
		<procedure name="varbit_out" id="Procedure_29cd9a9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_out(bit varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="varbit_recv" id="Procedure_2b75731" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_recv(internal, oid, integer)
 RETURNS bit varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="varbit" />
		</procedure>
		<procedure name="varbit_send" id="Procedure_1948a66" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_send(bit varying)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="varbit_transform" id="Procedure_a6b004" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbit_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbit_transform$function$
;]]></string>
			<comment><![CDATA[transform a varbit length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="varbitcmp" id="Procedure_2d0a1b7" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitcmp(bit varying, bit varying)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$bitcmp$function$
;]]></string>
			<comment><![CDATA[less-equal-greater]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="varbiteq" id="Procedure_57e3050" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbiteq(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$biteq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbitge" id="Procedure_56a0203" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitge(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitge$function$
;]]></string>
			<comment><![CDATA[implementation of >= operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbitgt" id="Procedure_4b8bc0b" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitgt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitgt$function$
;]]></string>
			<comment><![CDATA[implementation of > operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbitle" id="Procedure_2cc49c9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitle(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitle$function$
;]]></string>
			<comment><![CDATA[implementation of <= operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbitlt" id="Procedure_1f28c2f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitlt(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitlt$function$
;]]></string>
			<comment><![CDATA[implementation of < operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbitne" id="Procedure_2108074" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbitne(bit varying, bit varying)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$bitne$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="varbit" />
			<input_param name="$2" jt="1111" type="varbit" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="varbittypmodin" id="Procedure_e5f1af" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="varbittypmodout" id="Procedure_5115bf1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varbittypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varbittypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="varchar" id="Procedure_2c0b403" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(character varying, integer, boolean)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchar$function$
;]]></string>
			<comment><![CDATA[adjust varchar() to typmod length]]></comment>
			<input_param name="$1" jt="12" type="varchar" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="-7" type="bool" />
			<result_param name="returnValue" jt="12" type="varchar" />
		</procedure>
		<procedure name="varchar" id="Procedure_1e4c914" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."varchar"(name)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$name_text$function$
;]]></string>
			<comment><![CDATA[convert name to varchar]]></comment>
			<input_param name="$1" jt="12" type="name" />
			<result_param name="returnValue" jt="12" type="varchar" />
		</procedure>
		<procedure name="varchar_transform" id="Procedure_528339d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchar_transform(internal)
 RETURNS internal
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchar_transform$function$
;]]></string>
			<comment><![CDATA[transform a varchar length coercion]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="internal" />
		</procedure>
		<procedure name="varcharin" id="Procedure_2497dc0" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharin(cstring, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="varchar" />
		</procedure>
		<procedure name="varcharout" id="Procedure_340d665" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharout(character varying)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varcharout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="varchar" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="varcharrecv" id="Procedure_4764b5a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharrecv(internal, oid, integer)
 RETURNS character varying
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<input_param name="$2" jt="-5" type="oid" />
			<input_param name="$3" jt="4" type="int4" />
			<result_param name="returnValue" jt="12" type="varchar" />
		</procedure>
		<procedure name="varcharsend" id="Procedure_28dd6ef" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varcharsend(character varying)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$varcharsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="12" type="varchar" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="varchartypmodin" id="Procedure_2c58b2d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodin(cstring[])
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodin$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="2003" type="_cstring" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="varchartypmodout" id="Procedure_3fbdc5e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.varchartypmodout(integer)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$varchartypmodout$function$
;]]></string>
			<comment><![CDATA[I/O typmod]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="version" id="Procedure_21d486e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.version()
 RETURNS text
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$pgsql_version$function$
;]]></string>
			<comment><![CDATA[PostgreSQL version string]]></comment>
			<result_param name="returnValue" jt="12" type="text" />
		</procedure>
		<procedure name="void_in" id="Procedure_b2bb9f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_in(cstring)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="void_out" id="Procedure_24ee65f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_out(void)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="void" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="void_recv" id="Procedure_4be9c7d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_recv(internal)
 RETURNS void
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="void_send" id="Procedure_2af0e6" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.void_send(void)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$void_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="void" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="width" id="Procedure_442bb35" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width(box)
 RETURNS double precision
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$box_width$function$
;]]></string>
			<comment><![CDATA[box width]]></comment>
			<input_param name="$1" jt="1111" type="box" />
			<result_param name="returnValue" jt="8" type="float8" />
		</procedure>
		<procedure name="width_bucket" id="Procedure_30106e8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(anyelement, anyarray)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_array$function$
;]]></string>
			<comment><![CDATA[bucket number of operand given a sorted array of bucket lower bounds]]></comment>
			<input_param name="$1" jt="1111" type="anyelement" />
			<input_param name="$2" jt="1111" type="anyarray" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="width_bucket" id="Procedure_580717a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(double precision, double precision, double precision, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_float8$function$
;]]></string>
			<comment><![CDATA[bucket number of operand in equal-width histogram]]></comment>
			<input_param name="$1" jt="8" type="float8" />
			<input_param name="$2" jt="8" type="float8" />
			<input_param name="$3" jt="8" type="float8" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="width_bucket" id="Procedure_41deea9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.width_bucket(numeric, numeric, numeric, integer)
 RETURNS integer
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$width_bucket_numeric$function$
;]]></string>
			<comment><![CDATA[bucket number of operand in equal-width histogram]]></comment>
			<input_param name="$1" jt="2" type="numeric" />
			<input_param name="$2" jt="2" type="numeric" />
			<input_param name="$3" jt="2" type="numeric" />
			<input_param name="$4" jt="4" type="int4" />
			<result_param name="returnValue" jt="4" type="int4" />
		</procedure>
		<procedure name="win1250_to_latin2" id="Procedure_205a3ba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_latin2(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_latin2$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1250 to LATIN2]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win1250_to_mic" id="Procedure_3ce0de8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1250_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/latin2_and_win1250', $function$win1250_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1250 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win1251_to_iso" id="Procedure_2fc4927" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to ISO-8859-5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win1251_to_koi8r" id="Procedure_2c9b077" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to KOI8R]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win1251_to_mic" id="Procedure_2673067" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win1251_to_win866" id="Procedure_2626fc4" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win1251_to_win866(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win1251_to_win866$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1251 to WIN866]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win866_to_iso" id="Procedure_552f8f" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_iso(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_iso$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to ISO-8859-5]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win866_to_koi8r" id="Procedure_2965acb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_koi8r(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_koi8r$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to KOI8R]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win866_to_mic" id="Procedure_4a4b756" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_mic(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_mic$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to MULE_INTERNAL]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win866_to_win1251" id="Procedure_45b8ba1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win866_to_win1251(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/cyrillic_and_mic', $function$win866_to_win1251$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN866 to WIN1251]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="win_to_utf8" id="Procedure_32371cd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.win_to_utf8(integer, integer, cstring, internal, integer)
 RETURNS void
 LANGUAGE c
 PARALLEL SAFE STRICT
AS '$libdir/utf8_and_win', $function$win_to_utf8$function$
;]]></string>
			<comment><![CDATA[internal conversion function for WIN1258 to UTF8]]></comment>
			<input_param name="$1" jt="4" type="int4" />
			<input_param name="$2" jt="4" type="int4" />
			<input_param name="$3" jt="1111" type="cstring" />
			<input_param name="$4" jt="1111" type="internal" />
			<input_param name="$5" jt="4" type="int4" />
			<result_param name="returnValue" jt="1111" type="void" />
		</procedure>
		<procedure name="xideq" id="Procedure_eefc06" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<input_param name="$2" jt="1111" type="xid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xideqint4" id="Procedure_24a8235" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xideqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xideq$function$
;]]></string>
			<comment><![CDATA[implementation of = operator]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xidin" id="Procedure_57adf69" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidin(cstring)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidin$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="1111" type="xid" />
		</procedure>
		<procedure name="xidneq" id="Procedure_4f76bb2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneq(xid, xid)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<input_param name="$2" jt="1111" type="xid" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xidneqint4" id="Procedure_72bdfd" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidneqint4(xid, integer)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT LEAKPROOF
AS $function$xidneq$function$
;]]></string>
			<comment><![CDATA[implementation of <> operator]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<input_param name="$2" jt="4" type="int4" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xidout" id="Procedure_542a590" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidout(xid)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidout$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="xidrecv" id="Procedure_5381994" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidrecv(internal)
 RETURNS xid
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidrecv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="1111" type="xid" />
		</procedure>
		<procedure name="xidsend" id="Procedure_4cc9e5" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xidsend(xid)
 RETURNS bytea
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xidsend$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="xid" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="xml" id="Procedure_14a43ad" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml(text)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$texttoxml$function$
;]]></string>
			<comment><![CDATA[perform a non-validating parse of a character string to produce an XML value]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="xml_in" id="Procedure_3edb652" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_in(cstring)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_in$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="cstring" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="xml_is_well_formed" id="Procedure_5734ab8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed(text)
 RETURNS boolean
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xml_is_well_formed_content" id="Procedure_383ca13" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_content(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_content$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML content]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xml_is_well_formed_document" id="Procedure_1693dca" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_is_well_formed_document(text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_is_well_formed_document$function$
;]]></string>
			<comment><![CDATA[determine if a string is well formed XML document]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xml_out" id="Procedure_343f260" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_out(xml)
 RETURNS cstring
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xml_out$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="2009" type="xml" />
			<result_param name="returnValue" jt="1111" type="cstring" />
		</procedure>
		<procedure name="xml_recv" id="Procedure_1222a7e" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_recv(internal)
 RETURNS xml
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_recv$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="1111" type="internal" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="xml_send" id="Procedure_53fada2" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xml_send(xml)
 RETURNS bytea
 LANGUAGE internal
 STABLE PARALLEL SAFE STRICT
AS $function$xml_send$function$
;]]></string>
			<comment><![CDATA[I/O]]></comment>
			<input_param name="$1" jt="2009" type="xml" />
			<result_param name="returnValue" jt="-2" type="bytea" />
		</procedure>
		<procedure name="xmlcomment" id="Procedure_5371223" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlcomment(text)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlcomment$function$
;]]></string>
			<comment><![CDATA[generate XML comment]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="xmlconcat2" id="Procedure_12cdc3c" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlconcat2(xml, xml)
 RETURNS xml
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE
AS $function$xmlconcat2$function$
;]]></string>
			<comment><![CDATA[aggregate transition function]]></comment>
			<input_param name="$1" jt="2009" type="xml" />
			<input_param name="$2" jt="2009" type="xml" />
			<result_param name="returnValue" jt="2009" type="xml" />
		</procedure>
		<procedure name="xmlexists" id="Procedure_2574fa9" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog."xmlexists"(text, xml)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlexists$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="2009" type="xml" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xmlvalidate" id="Procedure_171b31d" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xmlvalidate(xml, text)
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xmlvalidate$function$
;]]></string>
			<comment><![CDATA[validate an XML value]]></comment>
			<input_param name="$1" jt="2009" type="xml" />
			<input_param name="$2" jt="12" type="text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xpath" id="Procedure_151b6ae" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml)
 RETURNS xml[]
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.xpath($1, $2, '{}'::pg_catalog.text[])$function$
;]]></string>
			<comment><![CDATA[evaluate XPath expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="2009" type="xml" />
			<result_param name="returnValue" jt="2003" type="_xml" />
		</procedure>
		<procedure name="xpath" id="Procedure_195f8de" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath(text, xml, text[])
 RETURNS xml[]
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath$function$
;]]></string>
			<comment><![CDATA[evaluate XPath expression, with namespaces support]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="2009" type="xml" />
			<input_param name="$3" jt="2003" type="_text" />
			<result_param name="returnValue" jt="2003" type="_xml" />
		</procedure>
		<procedure name="xpath_exists" id="Procedure_5257e71" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml)
 RETURNS boolean
 LANGUAGE sql
 IMMUTABLE PARALLEL SAFE STRICT COST 1
AS $function$select pg_catalog.xpath_exists($1, $2, '{}'::pg_catalog.text[])$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="2009" type="xml" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
		<procedure name="xpath_exists" id="Procedure_2eca89a" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE OR REPLACE FUNCTION pg_catalog.xpath_exists(text, xml, text[])
 RETURNS boolean
 LANGUAGE internal
 IMMUTABLE PARALLEL SAFE STRICT
AS $function$xpath_exists$function$
;]]></string>
			<comment><![CDATA[test XML value against XPath expression, with namespace support]]></comment>
			<input_param name="$1" jt="12" type="text" />
			<input_param name="$2" jt="2009" type="xml" />
			<input_param name="$3" jt="2003" type="_text" />
			<result_param name="returnValue" jt="-7" type="bool" />
		</procedure>
	</schema>
	<schema name="public" catalogname="turizm" schemaname="public" >
		<table name="article" >
			<column name="id" type="serial" length="10" decimal="0" jt="4" mandatory="y" autoincrement="y" />
			<column name="aid" type="char" length="255" jt="1" />
			<column name="query_id" type="integer" jt="4" />
			<column name="json" type="bytea" jt="-2" />
			<column name="xml" type="bytea" jt="-2" />
			<index name="pk_articles_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<table name="article_query" >
			<column name="article_id" type="integer" jt="4" mandatory="y" />
			<column name="query_id" type="integer" jt="4" mandatory="y" />
			<index name="primary_keys" unique="PRIMARY_KEY" >
				<column name="article_id" />
				<column name="query_id" />
			</index>
			<fk name="fk_article_query_queries" to_schema="public" to_table="query" delete_action="cascade" >
				<fk_column name="query_id" pk="id" />
			</fk>
			<fk name="fk_article_query_articles" to_schema="public" to_table="article" delete_action="cascade" >
				<fk_column name="article_id" pk="id" />
			</fk>
		</table>
		<table name="query" >
			<column name="id" type="serial" jt="4" mandatory="y" autoincrement="y" />
			<column name="query" type="char" length="255" jt="1" />
			<index name="pk_queries_id" unique="PRIMARY_KEY" >
				<column name="id" />
			</index>
		</table>
		<sequence name="articles_id_seq" start="1" />
		<sequence name="queries_id_seq" start="1" />
	</schema>
	<connector name="Turizm-Local" database="PostgreSQL" driver_class="org.postgresql.Driver" driver_jar="postgresql-42.2.2.jar" driver_desc="Standard" url="jdbc:postgresql://localhost:5432/turizm?&amp;user=postgres&amp;password=BeReSeMi.01" host="localhost" port="5432" instance="postgres" user="postgres" passwd="QmVSZVNlTWkuMDE=" />
	<layout name="Default Layout" id="Layout_a0371" show_relation="columns" >
		<comment><![CDATA[Default Layout]]></comment>
		<entity schema="public" name="query" color="C1D8EE" x="512" y="64" />
		<entity schema="public" name="article_query" color="C1D8EE" x="256" y="64" />
		<entity schema="public" name="article" color="C1D8EE" x="48" y="48" />
		<script name="SQL_Editor" id="Editor_393351e" language="SQL" >
			<string><![CDATA[CREATE SCHEMA "public" IF NOT EXISTS "public";

CREATE SEQUENCE "public".articles_id_seq START WITH 1;

CREATE SEQUENCE "public".queries_id_seq START WITH 1;

CREATE TABLE "public".article ( 
	id                   serial  NOT NULL ,
	aid                  char(255)   ,
	query_id             integer   ,
	json                 bytea   ,
	xml                  bytea   ,
	CONSTRAINT pk_articles_id PRIMARY KEY ( id )
 );

CREATE TABLE "public".query ( 
	id                   serial  NOT NULL ,
	query                char(255)   ,
	CONSTRAINT pk_queries_id PRIMARY KEY ( id )
 );

CREATE TABLE "public".article_query ( 
	article_id           integer  NOT NULL ,
	query_id             integer  NOT NULL ,
	CONSTRAINT primary_keys PRIMARY KEY ( article_id, query_id )
 );

ALTER TABLE "public".article_query ADD CONSTRAINT fk_article_query_queries FOREIGN KEY ( query_id ) REFERENCES "public".query( id ) ON DELETE CASCADE;

ALTER TABLE "public".article_query ADD CONSTRAINT fk_article_query_articles FOREIGN KEY ( article_id ) REFERENCES "public".article( id ) ON DELETE CASCADE;]]></string>
		</script>
	</layout>
</project>